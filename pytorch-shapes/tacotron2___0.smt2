(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const inputs_0__size0 Int)
(set-info :example-inputs_0__size0 4)
(declare-const inputs_0__size1 Int)
(set-info :example-inputs_0__size1 138)
(declare-const inputs_0__stride0 Int)
(set-info :example-inputs_0__stride0 138)
(declare-const inputs_0__stride1 Int)
(set-info :example-inputs_0__stride1 1)
(declare-const inputs_0__storage_offset Int)
(set-info :example-inputs_0__storage_offset 0)
(define-fun ge () Bool (>= inputs_0__size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= inputs_0__size1 0))
(assert ge_1)
(define-fun eq () Bool (= inputs_0__size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- inputs_0__size0 1))
(define-fun mul () Int (* inputs_0__stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= inputs_0__size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- inputs_0__size1 1))
(define-fun mul_1 () Int (* inputs_0__stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun mul_2 () Int (* 8 add_1))
(define-fun mul_3 () Int (* inputs_0__size0 inputs_0__size1))
(define-fun eq_2 () Bool (= mul_3 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun eq_3 () Bool (= inputs_0__size1 1))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun eq_4 () Bool (= inputs_0__stride1 1))
(assert eq_4)
(define-fun eq_5 () Bool (= inputs_0__size0 1))
(define-fun not__4 () Bool (not eq_5))
(assert not__4)
(define-fun eq_6 () Bool (= inputs_0__stride0 inputs_0__size1))
(assert eq_6)
(define-fun mul_4 () Int (* inputs_0__size1 inputs_0__size0))
(define-fun ge_2 () Bool (>= inputs_0__storage_offset 0))
(assert ge_2)
(define-fun add_2 () Int (+ inputs_0__storage_offset add_1))
(define-fun mul_5 () Int (* 8 add_2))
(declare-const inputs_1__size0 Int)
(set-info :example-inputs_1__size0 4)
(declare-const inputs_1__stride0 Int)
(set-info :example-inputs_1__stride0 1)
(declare-const inputs_1__storage_offset Int)
(set-info :example-inputs_1__storage_offset 0)
(define-fun ge_3 () Bool (>= inputs_1__size0 0))
(assert ge_3)
(define-fun eq_7 () Bool (= inputs_1__size0 0))
(define-fun not__5 () Bool (not eq_7))
(assert not__5)
(define-fun sub_2 () Int (- inputs_1__size0 1))
(define-fun mul_6 () Int (* inputs_1__stride0 sub_2))
(define-fun add_3 () Int (+ 1 mul_6))
(define-fun mul_7 () Int (* 8 add_3))
(define-fun eq_8 () Bool (= inputs_1__size0 1))
(define-fun not__6 () Bool (not eq_8))
(assert not__6)
(define-fun eq_9 () Bool (= inputs_1__stride0 1))
(assert eq_9)
(define-fun ge_4 () Bool (>= inputs_1__storage_offset 0))
(assert ge_4)
(define-fun add_4 () Int (+ inputs_1__storage_offset add_3))
(define-fun mul_8 () Int (* 8 add_4))
(declare-const inputs_2__size0 Int)
(set-info :example-inputs_2__size0 4)
(declare-const inputs_2__size1 Int)
(set-info :example-inputs_2__size1 80)
(declare-const inputs_2__size2 Int)
(set-info :example-inputs_2__size2 724)
(declare-const inputs_2__stride0 Int)
(set-info :example-inputs_2__stride0 57920)
(declare-const inputs_2__stride1 Int)
(set-info :example-inputs_2__stride1 724)
(declare-const inputs_2__stride2 Int)
(set-info :example-inputs_2__stride2 1)
(declare-const inputs_2__storage_offset Int)
(set-info :example-inputs_2__storage_offset 0)
(define-fun ge_5 () Bool (>= inputs_2__size0 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= inputs_2__size1 0))
(assert ge_6)
(define-fun ge_7 () Bool (>= inputs_2__size2 0))
(assert ge_7)
(define-fun eq_10 () Bool (= inputs_2__size0 0))
(define-fun not__7 () Bool (not eq_10))
(assert not__7)
(define-fun sub_3 () Int (- inputs_2__size0 1))
(define-fun mul_9 () Int (* inputs_2__stride0 sub_3))
(define-fun add_5 () Int (+ 1 mul_9))
(define-fun eq_11 () Bool (= inputs_2__size1 0))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun sub_4 () Int (- inputs_2__size1 1))
(define-fun mul_10 () Int (* inputs_2__stride1 sub_4))
(define-fun add_6 () Int (+ add_5 mul_10))
(define-fun eq_12 () Bool (= inputs_2__size2 0))
(define-fun not__9 () Bool (not eq_12))
(assert not__9)
(define-fun sub_5 () Int (- inputs_2__size2 1))
(define-fun mul_11 () Int (* inputs_2__stride2 sub_5))
(define-fun add_7 () Int (+ add_6 mul_11))
(define-fun mul_12 () Int (* 4 add_7))
(define-fun mul_13 () Int (* inputs_2__size0 inputs_2__size1))
(define-fun mul_14 () Int (* mul_13 inputs_2__size2))
(define-fun eq_13 () Bool (= mul_14 0))
(define-fun not__10 () Bool (not eq_13))
(assert not__10)
(define-fun eq_14 () Bool (= inputs_2__size2 1))
(define-fun not__11 () Bool (not eq_14))
(assert not__11)
(define-fun eq_15 () Bool (= inputs_2__stride2 1))
(assert eq_15)
(define-fun eq_16 () Bool (= inputs_2__size1 1))
(define-fun not__12 () Bool (not eq_16))
(assert not__12)
(define-fun eq_17 () Bool (= inputs_2__stride1 inputs_2__size2))
(assert eq_17)
(define-fun mul_15 () Int (* inputs_2__size2 inputs_2__size1))
(define-fun eq_18 () Bool (= inputs_2__size0 1))
(define-fun not__13 () Bool (not eq_18))
(assert not__13)
(define-fun eq_19 () Bool (= inputs_2__stride0 mul_15))
(assert eq_19)
(define-fun mul_16 () Int (* mul_15 inputs_2__size0))
(define-fun ge_8 () Bool (>= inputs_2__storage_offset 0))
(assert ge_8)
(define-fun add_8 () Int (+ inputs_2__storage_offset add_7))
(define-fun mul_17 () Int (* 4 add_8))
(declare-const inputs_4__size0 Int)
(set-info :example-inputs_4__size0 4)
(declare-const inputs_4__stride0 Int)
(set-info :example-inputs_4__stride0 1)
(declare-const inputs_4__storage_offset Int)
(set-info :example-inputs_4__storage_offset 0)
(define-fun ge_9 () Bool (>= inputs_4__size0 0))
(assert ge_9)
(define-fun eq_20 () Bool (= inputs_4__size0 0))
(define-fun not__14 () Bool (not eq_20))
(assert not__14)
(define-fun sub_6 () Int (- inputs_4__size0 1))
(define-fun mul_18 () Int (* inputs_4__stride0 sub_6))
(define-fun add_9 () Int (+ 1 mul_18))
(define-fun mul_19 () Int (* 8 add_9))
(define-fun eq_21 () Bool (= inputs_4__size0 1))
(define-fun not__15 () Bool (not eq_21))
(assert not__15)
(define-fun eq_22 () Bool (= inputs_4__stride0 1))
(assert eq_22)
(define-fun ge_10 () Bool (>= inputs_4__storage_offset 0))
(assert ge_10)
(define-fun add_10 () Int (+ inputs_4__storage_offset add_9))
(define-fun mul_20 () Int (* 8 add_10))
(define-fun eq_23 () Bool (= inputs_1__size0 -1))
(define-fun not__16 () Bool (not eq_23))
(assert not__16)
(define-fun eq_24 () Bool (= inputs_1__size0 inputs_1__size0))
(assert eq_24)
(define-fun eq_25 () Bool (= inputs_4__size0 -1))
(define-fun not__17 () Bool (not eq_25))
(assert not__17)
(define-fun eq_26 () Bool (= inputs_4__size0 inputs_4__size0))
(assert eq_26)
(define-fun lt () Bool (< inputs_0__size1 0))
(define-fun not__18 () Bool (not lt))
(assert not__18)
(define-fun lt_1 () Bool (< inputs_0__size0 0))
(define-fun not__19 () Bool (not lt_1))
(assert not__19)
(define-fun eq_27 () Bool (= inputs_0__size0 inputs_0__size0))
(assert eq_27)
(define-fun eq_28 () Bool (= inputs_0__size1 inputs_0__size1))
(assert eq_28)
(define-fun mul_21 () Int (* 512 inputs_0__size1))
(define-fun mul_22 () Int (* mul_21 inputs_0__size0))
(define-fun mul_23 () Int (* mul_21 sub))
(define-fun add_11 () Int (+ 1 mul_23))
(define-fun mul_24 () Int (* 512 sub_1))
(define-fun add_12 () Int (+ add_11 mul_24))
(define-fun add_13 () Int (+ add_12 511))
(define-fun mul_25 () Int (* 4 add_13))
(define-fun mul_26 () Int (* mul_3 512))
(define-fun eq_29 () Bool (= mul_26 0))
(define-fun not__20 () Bool (not eq_29))
(assert not__20)
(define-fun eq_30 () Bool (= mul_21 mul_21))
(assert eq_30)
(define-fun mul_27 () Int (* inputs_0__size0 512))
(define-fun mul_28 () Int (* mul_27 inputs_0__size1))
(define-fun eq_31 () Bool (= mul_28 0))
(define-fun not__21 () Bool (not eq_31))
(assert not__21)
(define-fun lt_2 () Bool (< inputs_0__size0 2))
(define-fun not__22 () Bool (not lt_2))
(assert not__22)
(define-fun lt_3 () Bool (< 1 mul_21))
(assert lt_3)
(define-fun lt_4 () Bool (< inputs_0__size1 2))
(define-fun not__23 () Bool (not lt_4))
(assert not__23)
(define-fun lt_5 () Bool (< 512 mul_21))
(assert lt_5)
(define-fun add_14 () Int (+ inputs_0__size1 4))
(define-fun sub_7 () Int (- add_14 4))
(define-fun sub_8 () Int (- sub_7 1))
(define-fun floordiv () Int (div sub_8 1))
(define-fun add_15 () Int (+ floordiv 1))
(define-fun ge_11 () Bool (>= add_15 0))
(assert ge_11)
(define-fun eq_32 () Bool (= add_15 0))
(define-fun not__24 () Bool (not eq_32))
(assert not__24)
(define-fun mul_29 () Int (* add_15 512))
(define-fun mul_30 () Int (* mul_29 inputs_0__size0))
(define-fun mul_31 () Int (* mul_29 sub))
(define-fun add_16 () Int (+ 1 mul_31))
(define-fun mul_32 () Int (* add_15 511))
(define-fun add_17 () Int (+ add_16 mul_32))
(define-fun sub_9 () Int (- add_15 1))
(define-fun add_18 () Int (+ add_17 sub_9))
(define-fun mul_33 () Int (* 4 add_18))
(define-fun mul_34 () Int (* mul_27 add_15))
(define-fun eq_33 () Bool (= mul_34 0))
(define-fun not__25 () Bool (not eq_33))
(assert not__25)
(define-fun eq_34 () Bool (= add_15 1))
(define-fun not__26 () Bool (not eq_34))
(assert not__26)
(define-fun eq_35 () Bool (= add_15 add_15))
(assert eq_35)
(define-fun eq_36 () Bool (= mul_29 mul_29))
(assert eq_36)
(define-fun mul_35 () Int (* inputs_0__size0 add_15))
(define-fun eq_37 () Bool (= mul_35 1))
(define-fun not__27 () Bool (not eq_37))
(assert not__27)
(define-fun le () Bool (<= inputs_0__size0 880801))
(assert le)
(define-fun lt_6 () Bool (< mul_34 2147483647))
(assert lt_6)
(define-fun sym_float () Real (to_real mul_35))
(define-fun lt_7 () Bool (< add_15 0))
(define-fun not__28 () Bool (not lt_7))
(assert not__28)
(define-fun eq_38 () Bool (= inputs_0__size0 -1))
(define-fun not__29 () Bool (not eq_38))
(assert not__29)
(define-fun eq_39 () Bool (= add_15 -1))
(define-fun not__30 () Bool (not eq_39))
(assert not__30)
(define-fun lt_8 () Bool (< add_15 2))
(define-fun not__31 () Bool (not lt_8))
(assert not__31)
(define-fun gt () Bool (> add_15 1))
(assert gt)
(define-fun eq_40 () Bool (= mul_29 0))
(define-fun not__32 () Bool (not eq_40))
(assert not__32)
(define-fun lt_9 () Bool (< add_15 mul_29))
(assert lt_9)
(define-fun truediv () Real (/ mul_34 512))
(define-fun sub_10 () Real (- truediv 1))
(define-fun truediv_1 () Real (/ truediv sub_10))
(define-fun eq_41 () Bool (= mul_34 mul_34))
(assert eq_41)
(define-fun gt_1 () Bool (> mul_34 0))
(assert gt_1)
(define-fun lt_10 () Bool (< mul_34 2))
(define-fun not__33 () Bool (not lt_10))
(assert not__33)
(define-fun add_19 () Int (+ add_15 4))
(define-fun sub_11 () Int (- add_19 4))
(define-fun sub_12 () Int (- sub_11 1))
(define-fun floordiv_1 () Int (div sub_12 1))
(define-fun add_20 () Int (+ floordiv_1 1))
(define-fun ge_12 () Bool (>= add_20 0))
(assert ge_12)
(define-fun eq_42 () Bool (= add_20 0))
(define-fun not__34 () Bool (not eq_42))
(assert not__34)
(define-fun mul_36 () Int (* add_20 512))
(define-fun mul_37 () Int (* mul_36 inputs_0__size0))
(define-fun mul_38 () Int (* mul_36 sub))
(define-fun add_21 () Int (+ 1 mul_38))
(define-fun mul_39 () Int (* add_20 511))
(define-fun add_22 () Int (+ add_21 mul_39))
(define-fun sub_13 () Int (- add_20 1))
(define-fun add_23 () Int (+ add_22 sub_13))
(define-fun mul_40 () Int (* 4 add_23))
(define-fun mul_41 () Int (* mul_27 add_20))
(define-fun eq_43 () Bool (= mul_41 0))
(define-fun not__35 () Bool (not eq_43))
(assert not__35)
(define-fun eq_44 () Bool (= add_20 1))
(define-fun not__36 () Bool (not eq_44))
(assert not__36)
(define-fun eq_45 () Bool (= add_20 add_20))
(assert eq_45)
(define-fun eq_46 () Bool (= mul_36 mul_36))
(assert eq_46)
(define-fun mul_42 () Int (* inputs_0__size0 add_20))
(define-fun eq_47 () Bool (= mul_42 1))
(define-fun not__37 () Bool (not eq_47))
(assert not__37)
(define-fun lt_11 () Bool (< mul_41 2147483647))
(assert lt_11)
(define-fun sym_float_1 () Real (to_real mul_42))
(define-fun lt_12 () Bool (< add_20 0))
(define-fun not__38 () Bool (not lt_12))
(assert not__38)
(define-fun eq_48 () Bool (= add_20 -1))
(define-fun not__39 () Bool (not eq_48))
(assert not__39)
(define-fun lt_13 () Bool (< add_20 2))
(define-fun not__40 () Bool (not lt_13))
(assert not__40)
(define-fun gt_2 () Bool (> add_20 1))
(assert gt_2)
(define-fun eq_49 () Bool (= mul_36 0))
(define-fun not__41 () Bool (not eq_49))
(assert not__41)
(define-fun lt_14 () Bool (< add_20 mul_36))
(assert lt_14)
(define-fun truediv_2 () Real (/ mul_41 512))
(define-fun sub_14 () Real (- truediv_2 1))
(define-fun truediv_3 () Real (/ truediv_2 sub_14))
(define-fun eq_50 () Bool (= mul_41 mul_41))
(assert eq_50)
(define-fun gt_3 () Bool (> mul_41 0))
(assert gt_3)
(define-fun lt_15 () Bool (< mul_41 2))
(define-fun not__42 () Bool (not lt_15))
(assert not__42)
(define-fun add_24 () Int (+ add_20 4))
(define-fun sub_15 () Int (- add_24 4))
(define-fun sub_16 () Int (- sub_15 1))
(define-fun floordiv_2 () Int (div sub_16 1))
(define-fun add_25 () Int (+ floordiv_2 1))
(define-fun ge_13 () Bool (>= add_25 0))
(assert ge_13)
(define-fun eq_51 () Bool (= add_25 0))
(define-fun not__43 () Bool (not eq_51))
(assert not__43)
(define-fun mul_43 () Int (* add_25 512))
(define-fun mul_44 () Int (* mul_43 inputs_0__size0))
(define-fun mul_45 () Int (* mul_43 sub))
(define-fun add_26 () Int (+ 1 mul_45))
(define-fun mul_46 () Int (* add_25 511))
(define-fun add_27 () Int (+ add_26 mul_46))
(define-fun sub_17 () Int (- add_25 1))
(define-fun add_28 () Int (+ add_27 sub_17))
(define-fun mul_47 () Int (* 4 add_28))
(define-fun mul_48 () Int (* mul_27 add_25))
(define-fun eq_52 () Bool (= mul_48 0))
(define-fun not__44 () Bool (not eq_52))
(assert not__44)
(define-fun eq_53 () Bool (= add_25 1))
(define-fun not__45 () Bool (not eq_53))
(assert not__45)
(define-fun eq_54 () Bool (= add_25 add_25))
(assert eq_54)
(define-fun eq_55 () Bool (= mul_43 mul_43))
(assert eq_55)
(define-fun mul_49 () Int (* inputs_0__size0 add_25))
(define-fun eq_56 () Bool (= mul_49 1))
(define-fun not__46 () Bool (not eq_56))
(assert not__46)
(define-fun lt_16 () Bool (< mul_48 2147483647))
(assert lt_16)
(define-fun sym_float_2 () Real (to_real mul_49))
(define-fun lt_17 () Bool (< add_25 0))
(define-fun not__47 () Bool (not lt_17))
(assert not__47)
(define-fun eq_57 () Bool (= add_25 -1))
(define-fun not__48 () Bool (not eq_57))
(assert not__48)
(define-fun lt_18 () Bool (< add_25 2))
(define-fun not__49 () Bool (not lt_18))
(assert not__49)
(define-fun gt_4 () Bool (> add_25 1))
(assert gt_4)
(define-fun eq_58 () Bool (= mul_43 0))
(define-fun not__50 () Bool (not eq_58))
(assert not__50)
(define-fun lt_19 () Bool (< add_25 mul_43))
(assert lt_19)
(define-fun truediv_4 () Real (/ mul_48 512))
(define-fun sub_18 () Real (- truediv_4 1))
(define-fun truediv_5 () Real (/ truediv_4 sub_18))
(define-fun eq_59 () Bool (= mul_48 mul_48))
(assert eq_59)
(define-fun gt_5 () Bool (> mul_48 0))
(assert gt_5)
(define-fun lt_20 () Bool (< mul_48 2))
(define-fun not__51 () Bool (not lt_20))
(assert not__51)
(define-fun mul_50 () Int (* mul_49 512))
(define-fun eq_60 () Bool (= mul_50 0))
(define-fun not__52 () Bool (not eq_60))
(assert not__52)
(define-fun lt_21 () Bool (< 1 mul_43))
(assert lt_21)
(define-fun lt_22 () Bool (< add_25 1))
(define-fun not__53 () Bool (not lt_22))
(assert not__53)
(define-fun lt_23 () Bool (< inputs_1__size0 2))
(define-fun not__54 () Bool (not lt_23))
(assert not__54)
(define-fun eq_61 () Bool (= mul_5 0))
(define-fun not__55 () Bool (not eq_61))
(assert not__55)
(define-fun eq_62 () Bool (= mul_8 0))
(define-fun not__56 () Bool (not eq_62))
(assert not__56)
(define-fun eq_63 () Bool (= mul_20 0))
(define-fun not__57 () Bool (not eq_63))
(assert not__57)
(define-fun eq_64 () Bool (= mul_25 0))
(define-fun not__58 () Bool (not eq_64))
(assert not__58)
(define-fun output0_size0 () Int inputs_0__size0)
(define-fun output0_size1 () Int 512)
(define-fun output0_size2 () Int inputs_0__size1)
(define-fun output0_stride0 () Int mul_21)
(define-fun output0_stride1 () Int 1)
(define-fun output0_stride2 () Int 512)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-value (inputs_0__size0 inputs_0__size1 inputs_0__stride0 inputs_0__stride1 inputs_0__storage_offset inputs_1__size0 inputs_1__stride0 inputs_1__storage_offset inputs_2__size0 inputs_2__size1 inputs_2__size2 inputs_2__stride0 inputs_2__stride1 inputs_2__stride2 inputs_2__storage_offset inputs_4__size0 inputs_4__stride0 inputs_4__storage_offset output0_size0 output0_size1 output0_size2 output0_stride0 output0_stride1 output0_stride2 output0_storage_offset))

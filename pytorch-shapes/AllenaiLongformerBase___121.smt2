(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const ___stack1__base_size0 Int)
(set-info :example-___stack1__base_size0 12)
(declare-const ___stack1__base_size1 Int)
(set-info :example-___stack1__base_size1 4)
(declare-const ___stack1__base_size2 Int)
(set-info :example-___stack1__base_size2 256)
(declare-const ___stack1__base_size3 Int)
(set-info :example-___stack1__base_size3 513)
(declare-const ___stack1__base_stride0 Int)
(set-info :example-___stack1__base_stride0 525312)
(declare-const ___stack1__base_stride1 Int)
(set-info :example-___stack1__base_stride1 131328)
(declare-const ___stack1__base_stride2 Int)
(set-info :example-___stack1__base_stride2 513)
(declare-const ___stack1__base_stride3 Int)
(set-info :example-___stack1__base_stride3 1)
(declare-const ___stack1__base_storage_offset Int)
(set-info :example-___stack1__base_storage_offset 0)
(define-fun ge () Bool (>= ___stack1__base_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= ___stack1__base_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= ___stack1__base_size2 0))
(assert ge_2)
(define-fun ge_3 () Bool (>= ___stack1__base_size3 0))
(assert ge_3)
(define-fun eq () Bool (= ___stack1__base_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- ___stack1__base_size0 1))
(define-fun mul () Int (* ___stack1__base_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= ___stack1__base_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- ___stack1__base_size1 1))
(define-fun mul_1 () Int (* ___stack1__base_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= ___stack1__base_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- ___stack1__base_size2 1))
(define-fun mul_2 () Int (* ___stack1__base_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun eq_3 () Bool (= ___stack1__base_size3 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun sub_3 () Int (- ___stack1__base_size3 1))
(define-fun mul_3 () Int (* ___stack1__base_stride3 sub_3))
(define-fun add_3 () Int (+ add_2 mul_3))
(define-fun mul_4 () Int (* 4 add_3))
(define-fun mul_5 () Int (* ___stack1__base_size0 ___stack1__base_size1))
(define-fun mul_6 () Int (* mul_5 ___stack1__base_size2))
(define-fun mul_7 () Int (* mul_6 ___stack1__base_size3))
(define-fun eq_4 () Bool (= mul_7 0))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= ___stack1__base_size3 1))
(define-fun not__5 () Bool (not eq_5))
(assert not__5)
(define-fun eq_6 () Bool (= ___stack1__base_stride3 1))
(assert eq_6)
(define-fun eq_7 () Bool (= ___stack1__base_size2 1))
(define-fun not__6 () Bool (not eq_7))
(assert not__6)
(define-fun eq_8 () Bool (= ___stack1__base_stride2 ___stack1__base_size3))
(assert eq_8)
(define-fun mul_8 () Int (* ___stack1__base_size3 ___stack1__base_size2))
(define-fun eq_9 () Bool (= ___stack1__base_size1 1))
(define-fun not__7 () Bool (not eq_9))
(assert not__7)
(define-fun eq_10 () Bool (= ___stack1__base_stride1 mul_8))
(assert eq_10)
(define-fun mul_9 () Int (* mul_8 ___stack1__base_size1))
(define-fun eq_11 () Bool (= ___stack1__base_size0 1))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun eq_12 () Bool (= ___stack1__base_stride0 mul_9))
(assert eq_12)
(define-fun mul_10 () Int (* mul_9 ___stack1__base_size0))
(define-fun eq_13 () Bool (= ___stack1__base_stride1 1))
(define-fun not__9 () Bool (not eq_13))
(assert not__9)
(define-fun eq_14 () Bool (= ___stack1__base_stride1 0))
(define-fun not__10 () Bool (not eq_14))
(assert not__10)
(define-fun lt () Bool (< ___stack1__base_stride1 0))
(define-fun not__11 () Bool (not lt))
(assert not__11)
(define-fun gt () Bool (> ___stack1__base_size1 1))
(assert gt)
(define-fun mul_11 () Int (* ___stack1__base_stride1 ___stack1__base_size1))
(define-fun lt_1 () Bool (< ___stack1__base_stride3 mul_11))
(assert lt_1)
(define-fun eq_15 () Bool (= ___stack1__base_size0 ___stack1__base_size0))
(assert eq_15)
(define-fun eq_16 () Bool (= ___stack1__base_size1 ___stack1__base_size1))
(assert eq_16)
(define-fun eq_17 () Bool (= ___stack1__base_size2 ___stack1__base_size2))
(assert eq_17)
(define-fun eq_18 () Bool (= ___stack1__base_size3 ___stack1__base_size3))
(assert eq_18)
(define-fun eq_19 () Bool (= ___stack1__base_stride3 0))
(define-fun not__12 () Bool (not eq_19))
(assert not__12)
(define-fun eq_20 () Bool (= ___stack1__base_stride2 0))
(define-fun not__13 () Bool (not eq_20))
(assert not__13)
(define-fun lt_2 () Bool (< ___stack1__base_stride3 ___stack1__base_stride2))
(assert lt_2)
(define-fun lt_3 () Bool (< ___stack1__base_stride2 ___stack1__base_stride1))
(assert lt_3)
(define-fun eq_21 () Bool (= ___stack1__base_stride0 0))
(define-fun not__14 () Bool (not eq_21))
(assert not__14)
(define-fun lt_4 () Bool (< ___stack1__base_stride1 ___stack1__base_stride0))
(assert lt_4)
(define-fun mul_12 () Int (* mul_9 sub))
(define-fun add_4 () Int (+ 1 mul_12))
(define-fun mul_13 () Int (* mul_8 sub_1))
(define-fun add_5 () Int (+ add_4 mul_13))
(define-fun mul_14 () Int (* ___stack1__base_size3 sub_2))
(define-fun add_6 () Int (+ add_5 mul_14))
(define-fun add_7 () Int (+ add_6 sub_3))
(define-fun mul_15 () Int (* 4 add_7))
(define-fun eq_22 () Bool (= mul_8 mul_8))
(assert eq_22)
(define-fun eq_23 () Bool (= mul_9 mul_9))
(assert eq_23)
(define-fun eq_24 () Bool (= mul_8 1))
(define-fun not__15 () Bool (not eq_24))
(assert not__15)
(define-fun eq_25 () Bool (= mul_8 0))
(define-fun not__16 () Bool (not eq_25))
(assert not__16)
(define-fun lt_5 () Bool (< mul_8 0))
(define-fun not__17 () Bool (not lt_5))
(assert not__17)
(define-fun lt_6 () Bool (< 1 mul_9))
(assert lt_6)
(define-fun ge_4 () Bool (>= ___stack1__base_storage_offset 0))
(assert ge_4)
(define-fun add_8 () Int (+ ___stack1__base_storage_offset add_3))
(define-fun mul_16 () Int (* 4 add_8))
(declare-const ___stack1_size0 Int)
(set-info :example-___stack1_size0 1)
(declare-const ___stack1_size1 Int)
(set-info :example-___stack1_size1 1024)
(declare-const ___stack1_size2 Int)
(set-info :example-___stack1_size2 12)
(declare-const ___stack1_size3 Int)
(set-info :example-___stack1_size3 513)
(declare-const ___stack1_stride0 Int)
(set-info :example-___stack1_stride0 6303744)
(declare-const ___stack1_stride1 Int)
(set-info :example-___stack1_stride1 513)
(declare-const ___stack1_stride2 Int)
(set-info :example-___stack1_stride2 525312)
(declare-const ___stack1_stride3 Int)
(set-info :example-___stack1_stride3 1)
(declare-const ___stack1_storage_offset Int)
(set-info :example-___stack1_storage_offset 0)
(define-fun mul_17 () Int (* ___stack1_size0 ___stack1_size1))
(define-fun mul_18 () Int (* mul_17 ___stack1_size2))
(define-fun mul_19 () Int (* mul_18 ___stack1_size3))
(define-fun eq_26 () Bool (= mul_19 0))
(define-fun not__18 () Bool (not eq_26))
(assert not__18)
(define-fun eq_27 () Bool (= ___stack1_size3 1))
(define-fun not__19 () Bool (not eq_27))
(assert not__19)
(define-fun eq_28 () Bool (= ___stack1_stride3 1))
(assert eq_28)
(define-fun eq_29 () Bool (= ___stack1_size2 1))
(define-fun not__20 () Bool (not eq_29))
(assert not__20)
(define-fun eq_30 () Bool (= ___stack1_stride2 ___stack1_size3))
(define-fun not__21 () Bool (not eq_30))
(assert not__21)
(define-fun eq_31 () Bool (= ___stack1_size1 1))
(define-fun not__22 () Bool (not eq_31))
(assert not__22)
(define-fun eq_32 () Bool (= ___stack1_stride1 1))
(define-fun not__23 () Bool (not eq_32))
(assert not__23)
(define-fun lt_7 () Bool (< ___stack1_size1 2))
(define-fun not__24 () Bool (not lt_7))
(assert not__24)
(define-fun lt_8 () Bool (< ___stack1_size0 2))
(assert lt_8)
(define-fun lt_9 () Bool (< ___stack1_size2 2))
(define-fun not__25 () Bool (not lt_9))
(assert not__25)
(define-fun lt_10 () Bool (< ___stack1_stride2 ___stack1_stride1))
(define-fun not__26 () Bool (not lt_10))
(assert not__26)
(define-fun lt_11 () Bool (< ___stack1_size3 2))
(define-fun not__27 () Bool (not lt_11))
(assert not__27)
(define-fun lt_12 () Bool (< ___stack1_stride3 ___stack1_stride1))
(assert lt_12)
(define-fun eq_33 () Bool (= ___stack1_stride1 ___stack1_size3))
(assert eq_33)
(define-fun mul_20 () Int (* ___stack1_size3 ___stack1_size1))
(define-fun eq_34 () Bool (= ___stack1_stride2 mul_20))
(assert eq_34)
(define-fun mul_21 () Int (* mul_20 ___stack1_size2))
(define-fun eq_35 () Bool (= ___stack1_stride1 0))
(define-fun not__28 () Bool (not eq_35))
(assert not__28)
(define-fun eq_36 () Bool (= ___stack1_size1 0))
(define-fun not__29 () Bool (not eq_36))
(assert not__29)
(define-fun lt_13 () Bool (< ___stack1_stride1 0))
(define-fun not__30 () Bool (not lt_13))
(assert not__30)
(define-fun gt_1 () Bool (> ___stack1_size1 1))
(assert gt_1)
(define-fun mul_22 () Int (* ___stack1_stride1 ___stack1_size1))
(define-fun eq_37 () Bool (= ___stack1_size3 0))
(define-fun not__31 () Bool (not eq_37))
(assert not__31)
(define-fun lt_14 () Bool (< ___stack1_stride3 mul_22))
(assert lt_14)
(declare-const hidden_states__base_size0 Int)
(set-info :example-hidden_states__base_size0 1)
(declare-const hidden_states__base_size1 Int)
(set-info :example-hidden_states__base_size1 1024)
(declare-const hidden_states__base_size2 Int)
(set-info :example-hidden_states__base_size2 768)
(declare-const hidden_states__base_stride0 Int)
(set-info :example-hidden_states__base_stride0 786432)
(declare-const hidden_states__base_stride1 Int)
(set-info :example-hidden_states__base_stride1 768)
(declare-const hidden_states__base_stride2 Int)
(set-info :example-hidden_states__base_stride2 1)
(declare-const hidden_states__base_storage_offset Int)
(set-info :example-hidden_states__base_storage_offset 0)
(define-fun ge_5 () Bool (>= hidden_states__base_size0 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= hidden_states__base_size1 0))
(assert ge_6)
(define-fun ge_7 () Bool (>= hidden_states__base_size2 0))
(assert ge_7)
(define-fun eq_38 () Bool (= hidden_states__base_size0 0))
(define-fun not__32 () Bool (not eq_38))
(assert not__32)
(define-fun sub_4 () Int (- hidden_states__base_size0 1))
(define-fun mul_23 () Int (* hidden_states__base_stride0 sub_4))
(define-fun add_9 () Int (+ 1 mul_23))
(define-fun eq_39 () Bool (= hidden_states__base_size1 0))
(define-fun not__33 () Bool (not eq_39))
(assert not__33)
(define-fun sub_5 () Int (- hidden_states__base_size1 1))
(define-fun mul_24 () Int (* hidden_states__base_stride1 sub_5))
(define-fun add_10 () Int (+ add_9 mul_24))
(define-fun eq_40 () Bool (= hidden_states__base_size2 0))
(define-fun not__34 () Bool (not eq_40))
(assert not__34)
(define-fun sub_6 () Int (- hidden_states__base_size2 1))
(define-fun mul_25 () Int (* hidden_states__base_stride2 sub_6))
(define-fun add_11 () Int (+ add_10 mul_25))
(define-fun mul_26 () Int (* 4 add_11))
(define-fun mul_27 () Int (* hidden_states__base_size0 hidden_states__base_size1))
(define-fun mul_28 () Int (* mul_27 hidden_states__base_size2))
(define-fun eq_41 () Bool (= mul_28 0))
(define-fun not__35 () Bool (not eq_41))
(assert not__35)
(define-fun eq_42 () Bool (= hidden_states__base_size2 1))
(define-fun not__36 () Bool (not eq_42))
(assert not__36)
(define-fun eq_43 () Bool (= hidden_states__base_stride2 1))
(assert eq_43)
(define-fun eq_44 () Bool (= hidden_states__base_size1 1))
(define-fun not__37 () Bool (not eq_44))
(assert not__37)
(define-fun eq_45 () Bool (= hidden_states__base_stride1 hidden_states__base_size2))
(assert eq_45)
(define-fun mul_29 () Int (* hidden_states__base_size2 hidden_states__base_size1))
(define-fun eq_46 () Bool (= hidden_states__base_size0 1))
(assert eq_46)
(define-fun eq_47 () Bool (= hidden_states__base_size0 hidden_states__base_size0))
(assert eq_47)
(define-fun eq_48 () Bool (= hidden_states__base_size1 hidden_states__base_size1))
(assert eq_48)
(define-fun eq_49 () Bool (= hidden_states__base_size2 hidden_states__base_size2))
(assert eq_49)
(define-fun eq_50 () Bool (= hidden_states__base_stride2 0))
(define-fun not__38 () Bool (not eq_50))
(assert not__38)
(define-fun eq_51 () Bool (= hidden_states__base_stride1 0))
(define-fun not__39 () Bool (not eq_51))
(assert not__39)
(define-fun lt_15 () Bool (< hidden_states__base_stride2 hidden_states__base_stride1))
(assert lt_15)
(define-fun eq_52 () Bool (= hidden_states__base_stride0 0))
(define-fun not__40 () Bool (not eq_52))
(assert not__40)
(define-fun lt_16 () Bool (< hidden_states__base_stride1 hidden_states__base_stride0))
(assert lt_16)
(define-fun mul_30 () Int (* mul_29 hidden_states__base_size0))
(define-fun mul_31 () Int (* mul_29 sub_4))
(define-fun add_12 () Int (+ 1 mul_31))
(define-fun mul_32 () Int (* hidden_states__base_size2 sub_5))
(define-fun add_13 () Int (+ add_12 mul_32))
(define-fun add_14 () Int (+ add_13 sub_6))
(define-fun mul_33 () Int (* 4 add_14))
(define-fun ge_8 () Bool (>= hidden_states__base_storage_offset 0))
(assert ge_8)
(define-fun add_15 () Int (+ hidden_states__base_storage_offset add_11))
(define-fun mul_34 () Int (* 4 add_15))
(declare-const hidden_states_size0 Int)
(set-info :example-hidden_states_size0 1024)
(declare-const hidden_states_size1 Int)
(set-info :example-hidden_states_size1 1)
(declare-const hidden_states_size2 Int)
(set-info :example-hidden_states_size2 768)
(declare-const hidden_states_stride0 Int)
(set-info :example-hidden_states_stride0 768)
(declare-const hidden_states_stride1 Int)
(set-info :example-hidden_states_stride1 786432)
(declare-const hidden_states_stride2 Int)
(set-info :example-hidden_states_stride2 1)
(declare-const hidden_states_storage_offset Int)
(set-info :example-hidden_states_storage_offset 0)
(define-fun mul_35 () Int (* hidden_states_size0 hidden_states_size1))
(define-fun mul_36 () Int (* mul_35 hidden_states_size2))
(define-fun eq_53 () Bool (= mul_36 0))
(define-fun not__41 () Bool (not eq_53))
(assert not__41)
(define-fun eq_54 () Bool (= hidden_states_size2 1))
(define-fun not__42 () Bool (not eq_54))
(assert not__42)
(define-fun eq_55 () Bool (= hidden_states_stride2 1))
(assert eq_55)
(define-fun eq_56 () Bool (= hidden_states_size1 1))
(assert eq_56)
(define-fun eq_57 () Bool (= hidden_states_size0 1))
(define-fun not__43 () Bool (not eq_57))
(assert not__43)
(define-fun eq_58 () Bool (= hidden_states_stride0 hidden_states_size2))
(assert eq_58)
(define-fun mul_37 () Int (* hidden_states_size2 hidden_states_size0))
(declare-const attention_mask__base_size0 Int)
(set-info :example-attention_mask__base_size0 1)
(declare-const attention_mask__base_size1 Int)
(set-info :example-attention_mask__base_size1 1)
(declare-const attention_mask__base_size2 Int)
(set-info :example-attention_mask__base_size2 1)
(declare-const attention_mask__base_size3 Int)
(set-info :example-attention_mask__base_size3 1024)
(declare-const attention_mask__base_stride0 Int)
(set-info :example-attention_mask__base_stride0 1024)
(declare-const attention_mask__base_stride1 Int)
(set-info :example-attention_mask__base_stride1 1024)
(declare-const attention_mask__base_stride2 Int)
(set-info :example-attention_mask__base_stride2 1024)
(declare-const attention_mask__base_stride3 Int)
(set-info :example-attention_mask__base_stride3 1)
(declare-const attention_mask__base_storage_offset Int)
(set-info :example-attention_mask__base_storage_offset 0)
(define-fun ge_9 () Bool (>= attention_mask__base_size0 0))
(assert ge_9)
(define-fun ge_10 () Bool (>= attention_mask__base_size1 0))
(assert ge_10)
(define-fun ge_11 () Bool (>= attention_mask__base_size2 0))
(assert ge_11)
(define-fun ge_12 () Bool (>= attention_mask__base_size3 0))
(assert ge_12)
(define-fun eq_59 () Bool (= attention_mask__base_size0 0))
(define-fun not__44 () Bool (not eq_59))
(assert not__44)
(define-fun sub_7 () Int (- attention_mask__base_size0 1))
(define-fun mul_38 () Int (* attention_mask__base_stride0 sub_7))
(define-fun add_16 () Int (+ 1 mul_38))
(define-fun eq_60 () Bool (= attention_mask__base_size1 0))
(define-fun not__45 () Bool (not eq_60))
(assert not__45)
(define-fun sub_8 () Int (- attention_mask__base_size1 1))
(define-fun mul_39 () Int (* attention_mask__base_stride1 sub_8))
(define-fun add_17 () Int (+ add_16 mul_39))
(define-fun eq_61 () Bool (= attention_mask__base_size2 0))
(define-fun not__46 () Bool (not eq_61))
(assert not__46)
(define-fun sub_9 () Int (- attention_mask__base_size2 1))
(define-fun mul_40 () Int (* attention_mask__base_stride2 sub_9))
(define-fun add_18 () Int (+ add_17 mul_40))
(define-fun eq_62 () Bool (= attention_mask__base_size3 0))
(define-fun not__47 () Bool (not eq_62))
(assert not__47)
(define-fun sub_10 () Int (- attention_mask__base_size3 1))
(define-fun mul_41 () Int (* attention_mask__base_stride3 sub_10))
(define-fun add_19 () Int (+ add_18 mul_41))
(define-fun mul_42 () Int (* 4 add_19))
(define-fun mul_43 () Int (* attention_mask__base_size0 attention_mask__base_size1))
(define-fun mul_44 () Int (* mul_43 attention_mask__base_size2))
(define-fun mul_45 () Int (* mul_44 attention_mask__base_size3))
(define-fun eq_63 () Bool (= mul_45 0))
(define-fun not__48 () Bool (not eq_63))
(assert not__48)
(define-fun eq_64 () Bool (= attention_mask__base_size3 1))
(define-fun not__49 () Bool (not eq_64))
(assert not__49)
(define-fun eq_65 () Bool (= attention_mask__base_stride3 1))
(assert eq_65)
(define-fun eq_66 () Bool (= attention_mask__base_size2 1))
(assert eq_66)
(define-fun eq_67 () Bool (= attention_mask__base_size1 1))
(assert eq_67)
(define-fun eq_68 () Bool (= attention_mask__base_size0 1))
(assert eq_68)
(define-fun eq_69 () Bool (= attention_mask__base_stride1 0))
(define-fun not__50 () Bool (not eq_69))
(assert not__50)
(define-fun lt_17 () Bool (< attention_mask__base_stride1 0))
(define-fun not__51 () Bool (not lt_17))
(assert not__51)
(define-fun gt_2 () Bool (> attention_mask__base_size1 1))
(define-fun not__52 () Bool (not gt_2))
(assert not__52)
(define-fun lt_18 () Bool (< attention_mask__base_stride3 attention_mask__base_stride1))
(assert lt_18)
(define-fun ge_13 () Bool (>= attention_mask__base_storage_offset 0))
(assert ge_13)
(define-fun add_20 () Int (+ attention_mask__base_storage_offset add_19))
(define-fun mul_46 () Int (* 4 add_20))
(declare-const attention_mask_size0 Int)
(set-info :example-attention_mask_size0 1)
(declare-const attention_mask_size1 Int)
(set-info :example-attention_mask_size1 1024)
(declare-const attention_mask_stride0 Int)
(set-info :example-attention_mask_stride0 1024)
(declare-const attention_mask_stride1 Int)
(set-info :example-attention_mask_stride1 1)
(declare-const attention_mask_storage_offset Int)
(set-info :example-attention_mask_storage_offset 0)
(define-fun mul_47 () Int (* attention_mask_size0 attention_mask_size1))
(define-fun eq_70 () Bool (= mul_47 0))
(define-fun not__53 () Bool (not eq_70))
(assert not__53)
(define-fun eq_71 () Bool (= attention_mask_size1 1))
(define-fun not__54 () Bool (not eq_71))
(assert not__54)
(define-fun eq_72 () Bool (= attention_mask_stride1 1))
(assert eq_72)
(define-fun eq_73 () Bool (= attention_mask_size0 1))
(assert eq_73)
(declare-const is_index_masked_size0 Int)
(set-info :example-is_index_masked_size0 1)
(declare-const is_index_masked_size1 Int)
(set-info :example-is_index_masked_size1 1024)
(declare-const is_index_masked_stride0 Int)
(set-info :example-is_index_masked_stride0 1024)
(declare-const is_index_masked_stride1 Int)
(set-info :example-is_index_masked_stride1 1)
(declare-const is_index_masked_storage_offset Int)
(set-info :example-is_index_masked_storage_offset 0)
(define-fun ge_14 () Bool (>= is_index_masked_size0 0))
(assert ge_14)
(define-fun ge_15 () Bool (>= is_index_masked_size1 0))
(assert ge_15)
(define-fun eq_74 () Bool (= is_index_masked_size0 0))
(define-fun not__55 () Bool (not eq_74))
(assert not__55)
(define-fun sub_11 () Int (- is_index_masked_size0 1))
(define-fun mul_48 () Int (* is_index_masked_stride0 sub_11))
(define-fun add_21 () Int (+ 1 mul_48))
(define-fun eq_75 () Bool (= is_index_masked_size1 0))
(define-fun not__56 () Bool (not eq_75))
(assert not__56)
(define-fun sub_12 () Int (- is_index_masked_size1 1))
(define-fun mul_49 () Int (* is_index_masked_stride1 sub_12))
(define-fun add_22 () Int (+ add_21 mul_49))
(define-fun mul_50 () Int (* is_index_masked_size0 is_index_masked_size1))
(define-fun eq_76 () Bool (= mul_50 0))
(define-fun not__57 () Bool (not eq_76))
(assert not__57)
(define-fun eq_77 () Bool (= is_index_masked_size1 1))
(define-fun not__58 () Bool (not eq_77))
(assert not__58)
(define-fun eq_78 () Bool (= is_index_masked_stride1 1))
(assert eq_78)
(define-fun eq_79 () Bool (= is_index_masked_size0 1))
(assert eq_79)
(define-fun ge_16 () Bool (>= is_index_masked_storage_offset 0))
(assert ge_16)
(define-fun add_23 () Int (+ is_index_masked_storage_offset add_22))
(declare-const is_index_global_attn_size0 Int)
(set-info :example-is_index_global_attn_size0 1)
(declare-const is_index_global_attn_size1 Int)
(set-info :example-is_index_global_attn_size1 1024)
(declare-const is_index_global_attn_stride0 Int)
(set-info :example-is_index_global_attn_stride0 1024)
(declare-const is_index_global_attn_stride1 Int)
(set-info :example-is_index_global_attn_stride1 1)
(declare-const is_index_global_attn_storage_offset Int)
(set-info :example-is_index_global_attn_storage_offset 0)
(define-fun ge_17 () Bool (>= is_index_global_attn_size0 0))
(assert ge_17)
(define-fun ge_18 () Bool (>= is_index_global_attn_size1 0))
(assert ge_18)
(define-fun eq_80 () Bool (= is_index_global_attn_size0 0))
(define-fun not__59 () Bool (not eq_80))
(assert not__59)
(define-fun sub_13 () Int (- is_index_global_attn_size0 1))
(define-fun mul_51 () Int (* is_index_global_attn_stride0 sub_13))
(define-fun add_24 () Int (+ 1 mul_51))
(define-fun eq_81 () Bool (= is_index_global_attn_size1 0))
(define-fun not__60 () Bool (not eq_81))
(assert not__60)
(define-fun sub_14 () Int (- is_index_global_attn_size1 1))
(define-fun mul_52 () Int (* is_index_global_attn_stride1 sub_14))
(define-fun add_25 () Int (+ add_24 mul_52))
(define-fun mul_53 () Int (* is_index_global_attn_size0 is_index_global_attn_size1))
(define-fun eq_82 () Bool (= mul_53 0))
(define-fun not__61 () Bool (not eq_82))
(assert not__61)
(define-fun eq_83 () Bool (= is_index_global_attn_size1 1))
(define-fun not__62 () Bool (not eq_83))
(assert not__62)
(define-fun eq_84 () Bool (= is_index_global_attn_stride1 1))
(assert eq_84)
(define-fun eq_85 () Bool (= is_index_global_attn_size0 1))
(assert eq_85)
(define-fun ge_19 () Bool (>= is_index_global_attn_storage_offset 0))
(assert ge_19)
(define-fun add_26 () Int (+ is_index_global_attn_storage_offset add_25))
(declare-const query_vectors__base_size0 Int)
(set-info :example-query_vectors__base_size0 1024)
(declare-const query_vectors__base_size1 Int)
(set-info :example-query_vectors__base_size1 1)
(declare-const query_vectors__base_size2 Int)
(set-info :example-query_vectors__base_size2 768)
(declare-const query_vectors__base_stride0 Int)
(set-info :example-query_vectors__base_stride0 768)
(declare-const query_vectors__base_stride1 Int)
(set-info :example-query_vectors__base_stride1 768)
(declare-const query_vectors__base_stride2 Int)
(set-info :example-query_vectors__base_stride2 1)
(declare-const query_vectors__base_storage_offset Int)
(set-info :example-query_vectors__base_storage_offset 0)
(define-fun ge_20 () Bool (>= query_vectors__base_size0 0))
(assert ge_20)
(define-fun ge_21 () Bool (>= query_vectors__base_size1 0))
(assert ge_21)
(define-fun ge_22 () Bool (>= query_vectors__base_size2 0))
(assert ge_22)
(define-fun eq_86 () Bool (= query_vectors__base_size0 0))
(define-fun not__63 () Bool (not eq_86))
(assert not__63)
(define-fun sub_15 () Int (- query_vectors__base_size0 1))
(define-fun mul_54 () Int (* query_vectors__base_stride0 sub_15))
(define-fun add_27 () Int (+ 1 mul_54))
(define-fun eq_87 () Bool (= query_vectors__base_size1 0))
(define-fun not__64 () Bool (not eq_87))
(assert not__64)
(define-fun sub_16 () Int (- query_vectors__base_size1 1))
(define-fun mul_55 () Int (* query_vectors__base_stride1 sub_16))
(define-fun add_28 () Int (+ add_27 mul_55))
(define-fun eq_88 () Bool (= query_vectors__base_size2 0))
(define-fun not__65 () Bool (not eq_88))
(assert not__65)
(define-fun sub_17 () Int (- query_vectors__base_size2 1))
(define-fun mul_56 () Int (* query_vectors__base_stride2 sub_17))
(define-fun add_29 () Int (+ add_28 mul_56))
(define-fun mul_57 () Int (* 4 add_29))
(define-fun mul_58 () Int (* query_vectors__base_size0 query_vectors__base_size1))
(define-fun mul_59 () Int (* mul_58 query_vectors__base_size2))
(define-fun eq_89 () Bool (= mul_59 0))
(define-fun not__66 () Bool (not eq_89))
(assert not__66)
(define-fun eq_90 () Bool (= query_vectors__base_size2 1))
(define-fun not__67 () Bool (not eq_90))
(assert not__67)
(define-fun eq_91 () Bool (= query_vectors__base_stride2 1))
(assert eq_91)
(define-fun eq_92 () Bool (= query_vectors__base_size1 1))
(assert eq_92)
(define-fun eq_93 () Bool (= query_vectors__base_size0 1))
(define-fun not__68 () Bool (not eq_93))
(assert not__68)
(define-fun eq_94 () Bool (= query_vectors__base_stride0 query_vectors__base_size2))
(assert eq_94)
(define-fun mul_60 () Int (* query_vectors__base_size2 query_vectors__base_size0))
(define-fun ge_23 () Bool (>= query_vectors__base_storage_offset 0))
(assert ge_23)
(define-fun add_30 () Int (+ query_vectors__base_storage_offset add_29))
(define-fun mul_61 () Int (* 4 add_30))
(declare-const query_vectors_size0 Int)
(set-info :example-query_vectors_size0 1)
(declare-const query_vectors_size1 Int)
(set-info :example-query_vectors_size1 1024)
(declare-const query_vectors_size2 Int)
(set-info :example-query_vectors_size2 12)
(declare-const query_vectors_size3 Int)
(set-info :example-query_vectors_size3 64)
(declare-const query_vectors_stride0 Int)
(set-info :example-query_vectors_stride0 768)
(declare-const query_vectors_stride1 Int)
(set-info :example-query_vectors_stride1 768)
(declare-const query_vectors_stride2 Int)
(set-info :example-query_vectors_stride2 64)
(declare-const query_vectors_stride3 Int)
(set-info :example-query_vectors_stride3 1)
(declare-const query_vectors_storage_offset Int)
(set-info :example-query_vectors_storage_offset 0)
(define-fun eq_95 () Bool (= query_vectors__base_size0 -1))
(define-fun not__69 () Bool (not eq_95))
(assert not__69)
(define-fun eq_96 () Bool (= query_vectors__base_size1 -1))
(define-fun not__70 () Bool (not eq_96))
(assert not__70)
(define-fun eq_97 () Bool (= query_vectors__base_size2 -1))
(define-fun not__71 () Bool (not eq_97))
(assert not__71)
(define-fun eq_98 () Bool (= mul_59 mul_59))
(assert eq_98)
(define-fun eq_99 () Bool (= query_vectors__base_size0 query_vectors__base_size0))
(assert eq_99)
(define-fun eq_100 () Bool (= query_vectors__base_size1 query_vectors__base_size1))
(assert eq_100)
(define-fun eq_101 () Bool (= query_vectors__base_size2 query_vectors__base_size2))
(assert eq_101)
(define-fun mul_62 () Int (* query_vectors_size0 query_vectors_size1))
(define-fun mul_63 () Int (* mul_62 query_vectors_size2))
(define-fun mul_64 () Int (* mul_63 query_vectors_size3))
(define-fun eq_102 () Bool (= mul_64 0))
(define-fun not__72 () Bool (not eq_102))
(assert not__72)
(define-fun eq_103 () Bool (= query_vectors_size3 1))
(define-fun not__73 () Bool (not eq_103))
(assert not__73)
(define-fun eq_104 () Bool (= query_vectors_stride3 1))
(assert eq_104)
(define-fun eq_105 () Bool (= query_vectors_size2 1))
(define-fun not__74 () Bool (not eq_105))
(assert not__74)
(define-fun eq_106 () Bool (= query_vectors_stride2 query_vectors_size3))
(assert eq_106)
(define-fun mul_65 () Int (* query_vectors_size3 query_vectors_size2))
(define-fun eq_107 () Bool (= query_vectors_size1 1))
(define-fun not__75 () Bool (not eq_107))
(assert not__75)
(define-fun eq_108 () Bool (= query_vectors_stride1 mul_65))
(assert eq_108)
(define-fun mul_66 () Int (* mul_65 query_vectors_size1))
(define-fun eq_109 () Bool (= query_vectors_size0 1))
(assert eq_109)
(define-fun eq_110 () Bool (= query_vectors_stride1 1))
(define-fun not__76 () Bool (not eq_110))
(assert not__76)
(define-fun eq_111 () Bool (= query_vectors_stride1 0))
(define-fun not__77 () Bool (not eq_111))
(assert not__77)
(define-fun eq_112 () Bool (= query_vectors_size1 0))
(define-fun not__78 () Bool (not eq_112))
(assert not__78)
(define-fun lt_19 () Bool (< query_vectors_stride1 0))
(define-fun not__79 () Bool (not lt_19))
(assert not__79)
(define-fun gt_3 () Bool (> query_vectors_size1 1))
(assert gt_3)
(define-fun mul_67 () Int (* query_vectors_stride1 query_vectors_size1))
(define-fun eq_113 () Bool (= query_vectors_size3 0))
(define-fun not__80 () Bool (not eq_113))
(assert not__80)
(define-fun lt_20 () Bool (< query_vectors_stride3 mul_67))
(assert lt_20)
(declare-const key_vectors__base_size0 Int)
(set-info :example-key_vectors__base_size0 1024)
(declare-const key_vectors__base_size1 Int)
(set-info :example-key_vectors__base_size1 768)
(declare-const key_vectors__base_stride0 Int)
(set-info :example-key_vectors__base_stride0 768)
(declare-const key_vectors__base_stride1 Int)
(set-info :example-key_vectors__base_stride1 1)
(declare-const key_vectors__base_storage_offset Int)
(set-info :example-key_vectors__base_storage_offset 0)
(define-fun ge_24 () Bool (>= key_vectors__base_size0 0))
(assert ge_24)
(define-fun ge_25 () Bool (>= key_vectors__base_size1 0))
(assert ge_25)
(define-fun eq_114 () Bool (= key_vectors__base_size0 0))
(define-fun not__81 () Bool (not eq_114))
(assert not__81)
(define-fun sub_18 () Int (- key_vectors__base_size0 1))
(define-fun mul_68 () Int (* key_vectors__base_stride0 sub_18))
(define-fun add_31 () Int (+ 1 mul_68))
(define-fun eq_115 () Bool (= key_vectors__base_size1 0))
(define-fun not__82 () Bool (not eq_115))
(assert not__82)
(define-fun sub_19 () Int (- key_vectors__base_size1 1))
(define-fun mul_69 () Int (* key_vectors__base_stride1 sub_19))
(define-fun add_32 () Int (+ add_31 mul_69))
(define-fun mul_70 () Int (* 4 add_32))
(define-fun mul_71 () Int (* key_vectors__base_size0 key_vectors__base_size1))
(define-fun eq_116 () Bool (= mul_71 0))
(define-fun not__83 () Bool (not eq_116))
(assert not__83)
(define-fun eq_117 () Bool (= key_vectors__base_size1 1))
(define-fun not__84 () Bool (not eq_117))
(assert not__84)
(define-fun eq_118 () Bool (= key_vectors__base_stride1 1))
(assert eq_118)
(define-fun eq_119 () Bool (= key_vectors__base_size0 1))
(define-fun not__85 () Bool (not eq_119))
(assert not__85)
(define-fun eq_120 () Bool (= key_vectors__base_stride0 key_vectors__base_size1))
(assert eq_120)
(define-fun mul_72 () Int (* key_vectors__base_size1 key_vectors__base_size0))
(define-fun ge_26 () Bool (>= key_vectors__base_storage_offset 0))
(assert ge_26)
(define-fun add_33 () Int (+ key_vectors__base_storage_offset add_32))
(define-fun mul_73 () Int (* 4 add_33))
(declare-const key_vectors_size0 Int)
(set-info :example-key_vectors_size0 1)
(declare-const key_vectors_size1 Int)
(set-info :example-key_vectors_size1 1024)
(declare-const key_vectors_size2 Int)
(set-info :example-key_vectors_size2 12)
(declare-const key_vectors_size3 Int)
(set-info :example-key_vectors_size3 64)
(declare-const key_vectors_stride0 Int)
(set-info :example-key_vectors_stride0 768)
(declare-const key_vectors_stride1 Int)
(set-info :example-key_vectors_stride1 768)
(declare-const key_vectors_stride2 Int)
(set-info :example-key_vectors_stride2 64)
(declare-const key_vectors_stride3 Int)
(set-info :example-key_vectors_stride3 1)
(declare-const key_vectors_storage_offset Int)
(set-info :example-key_vectors_storage_offset 0)
(define-fun eq_121 () Bool (= key_vectors__base_size0 -1))
(define-fun not__86 () Bool (not eq_121))
(assert not__86)
(define-fun eq_122 () Bool (= key_vectors__base_size1 -1))
(define-fun not__87 () Bool (not eq_122))
(assert not__87)
(define-fun eq_123 () Bool (= mul_71 mul_71))
(assert eq_123)
(define-fun eq_124 () Bool (= key_vectors__base_size0 key_vectors__base_size0))
(assert eq_124)
(define-fun eq_125 () Bool (= key_vectors__base_size1 key_vectors__base_size1))
(assert eq_125)
(define-fun mul_74 () Int (* key_vectors_size0 key_vectors_size1))
(define-fun mul_75 () Int (* mul_74 key_vectors_size2))
(define-fun mul_76 () Int (* mul_75 key_vectors_size3))
(define-fun eq_126 () Bool (= mul_76 0))
(define-fun not__88 () Bool (not eq_126))
(assert not__88)
(define-fun eq_127 () Bool (= key_vectors_size3 1))
(define-fun not__89 () Bool (not eq_127))
(assert not__89)
(define-fun eq_128 () Bool (= key_vectors_stride3 1))
(assert eq_128)
(define-fun eq_129 () Bool (= key_vectors_size2 1))
(define-fun not__90 () Bool (not eq_129))
(assert not__90)
(define-fun eq_130 () Bool (= key_vectors_stride2 key_vectors_size3))
(assert eq_130)
(define-fun mul_77 () Int (* key_vectors_size3 key_vectors_size2))
(define-fun eq_131 () Bool (= key_vectors_size1 1))
(define-fun not__91 () Bool (not eq_131))
(assert not__91)
(define-fun eq_132 () Bool (= key_vectors_stride1 mul_77))
(assert eq_132)
(define-fun mul_78 () Int (* mul_77 key_vectors_size1))
(define-fun eq_133 () Bool (= key_vectors_size0 1))
(assert eq_133)
(define-fun eq_134 () Bool (= key_vectors_stride1 1))
(define-fun not__92 () Bool (not eq_134))
(assert not__92)
(define-fun eq_135 () Bool (= key_vectors_stride1 0))
(define-fun not__93 () Bool (not eq_135))
(assert not__93)
(define-fun eq_136 () Bool (= key_vectors_size1 0))
(define-fun not__94 () Bool (not eq_136))
(assert not__94)
(define-fun lt_21 () Bool (< key_vectors_stride1 0))
(define-fun not__95 () Bool (not lt_21))
(assert not__95)
(define-fun gt_4 () Bool (> key_vectors_size1 1))
(assert gt_4)
(define-fun mul_79 () Int (* key_vectors_stride1 key_vectors_size1))
(define-fun eq_137 () Bool (= key_vectors_size3 0))
(define-fun not__96 () Bool (not eq_137))
(assert not__96)
(define-fun lt_22 () Bool (< key_vectors_stride3 mul_79))
(assert lt_22)
(declare-const value_vectors__base_size0 Int)
(set-info :example-value_vectors__base_size0 1024)
(declare-const value_vectors__base_size1 Int)
(set-info :example-value_vectors__base_size1 768)
(declare-const value_vectors__base_stride0 Int)
(set-info :example-value_vectors__base_stride0 768)
(declare-const value_vectors__base_stride1 Int)
(set-info :example-value_vectors__base_stride1 1)
(declare-const value_vectors__base_storage_offset Int)
(set-info :example-value_vectors__base_storage_offset 0)
(define-fun ge_27 () Bool (>= value_vectors__base_size0 0))
(assert ge_27)
(define-fun ge_28 () Bool (>= value_vectors__base_size1 0))
(assert ge_28)
(define-fun eq_138 () Bool (= value_vectors__base_size0 0))
(define-fun not__97 () Bool (not eq_138))
(assert not__97)
(define-fun sub_20 () Int (- value_vectors__base_size0 1))
(define-fun mul_80 () Int (* value_vectors__base_stride0 sub_20))
(define-fun add_34 () Int (+ 1 mul_80))
(define-fun eq_139 () Bool (= value_vectors__base_size1 0))
(define-fun not__98 () Bool (not eq_139))
(assert not__98)
(define-fun sub_21 () Int (- value_vectors__base_size1 1))
(define-fun mul_81 () Int (* value_vectors__base_stride1 sub_21))
(define-fun add_35 () Int (+ add_34 mul_81))
(define-fun mul_82 () Int (* 4 add_35))
(define-fun mul_83 () Int (* value_vectors__base_size0 value_vectors__base_size1))
(define-fun eq_140 () Bool (= mul_83 0))
(define-fun not__99 () Bool (not eq_140))
(assert not__99)
(define-fun eq_141 () Bool (= value_vectors__base_size1 1))
(define-fun not__100 () Bool (not eq_141))
(assert not__100)
(define-fun eq_142 () Bool (= value_vectors__base_stride1 1))
(assert eq_142)
(define-fun eq_143 () Bool (= value_vectors__base_size0 1))
(define-fun not__101 () Bool (not eq_143))
(assert not__101)
(define-fun eq_144 () Bool (= value_vectors__base_stride0 value_vectors__base_size1))
(assert eq_144)
(define-fun mul_84 () Int (* value_vectors__base_size1 value_vectors__base_size0))
(define-fun ge_29 () Bool (>= value_vectors__base_storage_offset 0))
(assert ge_29)
(define-fun add_36 () Int (+ value_vectors__base_storage_offset add_35))
(define-fun mul_85 () Int (* 4 add_36))
(declare-const value_vectors_size0 Int)
(set-info :example-value_vectors_size0 1024)
(declare-const value_vectors_size1 Int)
(set-info :example-value_vectors_size1 1)
(declare-const value_vectors_size2 Int)
(set-info :example-value_vectors_size2 768)
(declare-const value_vectors_stride0 Int)
(set-info :example-value_vectors_stride0 768)
(declare-const value_vectors_stride1 Int)
(set-info :example-value_vectors_stride1 768)
(declare-const value_vectors_stride2 Int)
(set-info :example-value_vectors_stride2 1)
(declare-const value_vectors_storage_offset Int)
(set-info :example-value_vectors_storage_offset 0)
(define-fun eq_145 () Bool (= value_vectors__base_size0 -1))
(define-fun not__102 () Bool (not eq_145))
(assert not__102)
(define-fun eq_146 () Bool (= value_vectors__base_size1 -1))
(define-fun not__103 () Bool (not eq_146))
(assert not__103)
(define-fun eq_147 () Bool (= mul_83 mul_83))
(assert eq_147)
(define-fun eq_148 () Bool (= value_vectors__base_size0 value_vectors__base_size0))
(assert eq_148)
(define-fun eq_149 () Bool (= value_vectors__base_size1 value_vectors__base_size1))
(assert eq_149)
(define-fun mul_86 () Int (* value_vectors_size0 value_vectors_size1))
(define-fun mul_87 () Int (* mul_86 value_vectors_size2))
(define-fun eq_150 () Bool (= mul_87 0))
(define-fun not__104 () Bool (not eq_150))
(assert not__104)
(define-fun eq_151 () Bool (= value_vectors_size2 1))
(define-fun not__105 () Bool (not eq_151))
(assert not__105)
(define-fun eq_152 () Bool (= value_vectors_stride2 1))
(assert eq_152)
(define-fun eq_153 () Bool (= value_vectors_size1 1))
(assert eq_153)
(define-fun eq_154 () Bool (= value_vectors_size0 1))
(define-fun not__106 () Bool (not eq_154))
(assert not__106)
(define-fun eq_155 () Bool (= value_vectors_stride0 value_vectors_size2))
(assert eq_155)
(define-fun mul_88 () Int (* value_vectors_size2 value_vectors_size0))
(define-fun lt_23 () Bool (< attention_mask_size1 0))
(define-fun not__107 () Bool (not lt_23))
(assert not__107)
(define-fun lt_24 () Bool (< attention_mask_size0 0))
(define-fun not__108 () Bool (not lt_24))
(assert not__108)
(define-fun eq_156 () Bool (= attention_mask_size0 attention_mask_size0))
(assert eq_156)
(define-fun eq_157 () Bool (= attention_mask_size1 attention_mask_size1))
(assert eq_157)
(define-fun eq_158 () Bool (= attention_mask_stride1 0))
(define-fun not__109 () Bool (not eq_158))
(assert not__109)
(define-fun eq_159 () Bool (= attention_mask_stride0 0))
(define-fun not__110 () Bool (not eq_159))
(assert not__110)
(define-fun lt_25 () Bool (< attention_mask_stride1 attention_mask_stride0))
(assert lt_25)
(define-fun ge_30 () Bool (>= attention_mask_size0 0))
(assert ge_30)
(define-fun ge_31 () Bool (>= attention_mask_size1 0))
(assert ge_31)
(define-fun eq_160 () Bool (= attention_mask_size1 0))
(define-fun not__111 () Bool (not eq_160))
(assert not__111)
(define-fun eq_161 () Bool (= attention_mask_size0 0))
(define-fun not__112 () Bool (not eq_161))
(assert not__112)
(define-fun mul_89 () Int (* attention_mask_size1 attention_mask_size0))
(define-fun sub_22 () Int (- attention_mask_size0 1))
(define-fun mul_90 () Int (* attention_mask_size1 sub_22))
(define-fun add_37 () Int (+ 1 mul_90))
(define-fun sub_23 () Int (- attention_mask_size1 1))
(define-fun add_38 () Int (+ add_37 sub_23))
(define-fun eq_162 () Bool (= attention_mask_size0 9223372036854775807))
(define-fun not__113 () Bool (not eq_162))
(assert not__113)
(define-fun le () Bool (<= attention_mask_size0 0))
(define-fun not__114 () Bool (not le))
(assert not__114)
(define-fun le_1 () Bool (<= attention_mask_size0 9223372036854775807))
(assert le_1)
(define-fun mul_91 () Int (* 0 attention_mask_size1))
(define-fun sub_24 () Int (- attention_mask_size0 0))
(define-fun add_39 () Int (+ sub_24 1))
(define-fun sub_25 () Int (- add_39 1))
(define-fun floordiv () Int (div sub_25 1))
(define-fun mul_92 () Int (* floordiv attention_mask_size1))
(define-fun eq_163 () Bool (= mul_92 0))
(define-fun not__115 () Bool (not eq_163))
(assert not__115)
(define-fun eq_164 () Bool (= floordiv 1))
(assert eq_164)
(define-fun eq_165 () Bool (= attention_mask_size1 9223372036854775807))
(define-fun not__116 () Bool (not eq_165))
(assert not__116)
(define-fun le_2 () Bool (<= attention_mask_size1 0))
(define-fun not__117 () Bool (not le_2))
(assert not__117)
(define-fun le_3 () Bool (<= attention_mask_size1 9223372036854775807))
(assert le_3)
(define-fun sub_26 () Int (- attention_mask_size1 0))
(define-fun add_40 () Int (+ sub_26 1))
(define-fun sub_27 () Int (- add_40 1))
(define-fun floordiv_1 () Int (div sub_27 1))
(define-fun mul_93 () Int (* floordiv floordiv_1))
(define-fun eq_166 () Bool (= mul_93 0))
(define-fun not__118 () Bool (not eq_166))
(assert not__118)
(define-fun eq_167 () Bool (= floordiv_1 1))
(define-fun not__119 () Bool (not eq_167))
(assert not__119)
(define-fun eq_168 () Bool (= floordiv_1 floordiv_1))
(assert eq_168)
(define-fun eq_169 () Bool (= floordiv floordiv))
(assert eq_169)
(define-fun eq_170 () Bool (= floordiv_1 0))
(define-fun not__120 () Bool (not eq_170))
(assert not__120)
(define-fun gt_5 () Bool (> floordiv_1 1))
(assert gt_5)
(define-fun lt_26 () Bool (< 1 floordiv_1))
(assert lt_26)
(define-fun lt_27 () Bool (< mul_93 2))
(define-fun not__121 () Bool (not lt_27))
(assert not__121)
(define-fun ge_32 () Bool (>= floordiv 0))
(assert ge_32)
(define-fun ge_33 () Bool (>= floordiv_1 0))
(assert ge_33)
(define-fun eq_171 () Bool (= floordiv 0))
(define-fun not__122 () Bool (not eq_171))
(assert not__122)
(define-fun sub_28 () Int (- floordiv 1))
(define-fun mul_94 () Int (* attention_mask_size1 sub_28))
(define-fun add_41 () Int (+ 1 mul_94))
(define-fun sub_29 () Int (- floordiv_1 1))
(define-fun add_42 () Int (+ add_41 sub_29))
(define-fun mul_95 () Int (* 4 add_42))
(define-fun lt_28 () Bool (< floordiv_1 0))
(define-fun not__123 () Bool (not lt_28))
(assert not__123)
(define-fun lt_29 () Bool (< floordiv 0))
(define-fun not__124 () Bool (not lt_29))
(assert not__124)
(define-fun lt_30 () Bool (< floordiv_1 1))
(define-fun not__125 () Bool (not lt_30))
(assert not__125)
(define-fun gt_6 () Bool (> attention_mask_size1 1))
(assert gt_6)
(define-fun mul_96 () Int (* floordiv_1 floordiv))
(define-fun mul_97 () Int (* floordiv_1 sub_28))
(define-fun add_43 () Int (+ 1 mul_97))
(define-fun add_44 () Int (+ add_43 sub_29))
(define-fun mul_98 () Int (* 4 add_44))
(define-fun mod () Int (mod floordiv_1 512))
(define-fun eq_172 () Bool (= mod 0))
(assert eq_172)
(define-fun eq_173 () Bool (= mul_46 0))
(define-fun not__126 () Bool (not eq_173))
(assert not__126)
(define-fun eq_174 () Bool (= mul_61 0))
(define-fun not__127 () Bool (not eq_174))
(assert not__127)
(define-fun eq_175 () Bool (= mul_98 0))
(define-fun not__128 () Bool (not eq_175))
(assert not__128)
(define-fun output0_size0 () Int floordiv)
(define-fun output0_size1 () Int floordiv_1)
(define-fun output0_size2 () Int 1)
(define-fun output0_size3 () Int 1)
(define-fun output0_stride0 () Int floordiv_1)
(define-fun output0_stride1 () Int 1)
(define-fun output0_stride2 () Int 1)
(define-fun output0_stride3 () Int 1)
(define-fun output0_storage_offset () Int 0)
(define-fun output1_size0 () Int floordiv)
(define-fun output1_size1 () Int floordiv_1)
(define-fun output1_size2 () Int 1)
(define-fun output1_size3 () Int 1)
(define-fun output1_stride0 () Int floordiv_1)
(define-fun output1_stride1 () Int 1)
(define-fun output1_stride2 () Int 1)
(define-fun output1_stride3 () Int 1)
(define-fun output1_storage_offset () Int 0)
(check-sat)
(get-value (___stack1__base_size0 ___stack1__base_size1 ___stack1__base_size2 ___stack1__base_size3 ___stack1__base_stride0 ___stack1__base_stride1 ___stack1__base_stride2 ___stack1__base_stride3 ___stack1__base_storage_offset ___stack1_size0 ___stack1_size1 ___stack1_size2 ___stack1_size3 ___stack1_stride0 ___stack1_stride1 ___stack1_stride2 ___stack1_stride3 ___stack1_storage_offset hidden_states__base_size0 hidden_states__base_size1 hidden_states__base_size2 hidden_states__base_stride0 hidden_states__base_stride1 hidden_states__base_stride2 hidden_states__base_storage_offset hidden_states_size0 hidden_states_size1 hidden_states_size2 hidden_states_stride0 hidden_states_stride1 hidden_states_stride2 hidden_states_storage_offset attention_mask__base_size0 attention_mask__base_size1 attention_mask__base_size2 attention_mask__base_size3 attention_mask__base_stride0 attention_mask__base_stride1 attention_mask__base_stride2 attention_mask__base_stride3 attention_mask__base_storage_offset attention_mask_size0 attention_mask_size1 attention_mask_stride0 attention_mask_stride1 attention_mask_storage_offset is_index_masked_size0 is_index_masked_size1 is_index_masked_stride0 is_index_masked_stride1 is_index_masked_storage_offset is_index_global_attn_size0 is_index_global_attn_size1 is_index_global_attn_stride0 is_index_global_attn_stride1 is_index_global_attn_storage_offset query_vectors__base_size0 query_vectors__base_size1 query_vectors__base_size2 query_vectors__base_stride0 query_vectors__base_stride1 query_vectors__base_stride2 query_vectors__base_storage_offset query_vectors_size0 query_vectors_size1 query_vectors_size2 query_vectors_size3 query_vectors_stride0 query_vectors_stride1 query_vectors_stride2 query_vectors_stride3 query_vectors_storage_offset key_vectors__base_size0 key_vectors__base_size1 key_vectors__base_stride0 key_vectors__base_stride1 key_vectors__base_storage_offset key_vectors_size0 key_vectors_size1 key_vectors_size2 key_vectors_size3 key_vectors_stride0 key_vectors_stride1 key_vectors_stride2 key_vectors_stride3 key_vectors_storage_offset value_vectors__base_size0 value_vectors__base_size1 value_vectors__base_stride0 value_vectors__base_stride1 value_vectors__base_storage_offset value_vectors_size0 value_vectors_size1 value_vectors_size2 value_vectors_stride0 value_vectors_stride1 value_vectors_stride2 value_vectors_storage_offset output0_size0 output0_size1 output0_size2 output0_size3 output0_stride0 output0_stride1 output0_stride2 output0_stride3 output0_storage_offset output1_size0 output1_size1 output1_size2 output1_size3 output1_stride0 output1_stride1 output1_stride2 output1_stride3 output1_storage_offset))

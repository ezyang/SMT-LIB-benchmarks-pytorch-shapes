(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const dense_x_size0 Int)
(set-info :example-dense_x_size0 4)
(declare-const dense_x_size1 Int)
(set-info :example-dense_x_size1 512)
(declare-const dense_x_stride0 Int)
(set-info :example-dense_x_stride0 512)
(declare-const dense_x_stride1 Int)
(set-info :example-dense_x_stride1 1)
(declare-const dense_x_storage_offset Int)
(set-info :example-dense_x_storage_offset 0)
(define-fun ge () Bool (>= dense_x_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= dense_x_size1 0))
(assert ge_1)
(define-fun eq () Bool (= dense_x_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- dense_x_size0 1))
(define-fun mul () Int (* dense_x_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= dense_x_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- dense_x_size1 1))
(define-fun mul_1 () Int (* dense_x_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun mul_2 () Int (* 4 add_1))
(define-fun mul_3 () Int (* dense_x_size0 dense_x_size1))
(define-fun eq_2 () Bool (= mul_3 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun eq_3 () Bool (= dense_x_size1 1))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun eq_4 () Bool (= dense_x_stride1 1))
(assert eq_4)
(define-fun eq_5 () Bool (= dense_x_size0 1))
(define-fun not__4 () Bool (not eq_5))
(assert not__4)
(define-fun eq_6 () Bool (= dense_x_stride0 dense_x_size1))
(assert eq_6)
(define-fun mul_4 () Int (* dense_x_size1 dense_x_size0))
(define-fun ge_2 () Bool (>= dense_x_storage_offset 0))
(assert ge_2)
(define-fun add_2 () Int (+ dense_x_storage_offset add_1))
(define-fun mul_5 () Int (* 4 add_2))
(declare-const l_s_o_size0 Int)
(set-info :example-l_s_o_size0 8)
(declare-const l_s_o_size1 Int)
(set-info :example-l_s_o_size1 4)
(declare-const l_s_o_stride0 Int)
(set-info :example-l_s_o_stride0 4)
(declare-const l_s_o_stride1 Int)
(set-info :example-l_s_o_stride1 1)
(declare-const l_s_o_storage_offset Int)
(set-info :example-l_s_o_storage_offset 0)
(define-fun ge_3 () Bool (>= l_s_o_size0 0))
(assert ge_3)
(define-fun ge_4 () Bool (>= l_s_o_size1 0))
(assert ge_4)
(define-fun eq_7 () Bool (= l_s_o_size0 0))
(define-fun not__5 () Bool (not eq_7))
(assert not__5)
(define-fun sub_2 () Int (- l_s_o_size0 1))
(define-fun mul_6 () Int (* l_s_o_stride0 sub_2))
(define-fun add_3 () Int (+ 1 mul_6))
(define-fun eq_8 () Bool (= l_s_o_size1 0))
(define-fun not__6 () Bool (not eq_8))
(assert not__6)
(define-fun sub_3 () Int (- l_s_o_size1 1))
(define-fun mul_7 () Int (* l_s_o_stride1 sub_3))
(define-fun add_4 () Int (+ add_3 mul_7))
(define-fun mul_8 () Int (* 8 add_4))
(define-fun mul_9 () Int (* l_s_o_size0 l_s_o_size1))
(define-fun eq_9 () Bool (= mul_9 0))
(define-fun not__7 () Bool (not eq_9))
(assert not__7)
(define-fun eq_10 () Bool (= l_s_o_size1 1))
(define-fun not__8 () Bool (not eq_10))
(assert not__8)
(define-fun eq_11 () Bool (= l_s_o_stride1 1))
(assert eq_11)
(define-fun eq_12 () Bool (= l_s_o_size0 1))
(define-fun not__9 () Bool (not eq_12))
(assert not__9)
(define-fun eq_13 () Bool (= l_s_o_stride0 l_s_o_size1))
(assert eq_13)
(define-fun mul_10 () Int (* l_s_o_size1 l_s_o_size0))
(define-fun ge_5 () Bool (>= l_s_o_storage_offset 0))
(assert ge_5)
(define-fun add_5 () Int (+ l_s_o_storage_offset add_4))
(define-fun mul_11 () Int (* 8 add_5))
(declare-const l_s_i_0__size0 Int)
(set-info :example-l_s_i_0__size0 400)
(declare-const l_s_i_0__stride0 Int)
(set-info :example-l_s_i_0__stride0 1)
(declare-const l_s_i_0__storage_offset Int)
(set-info :example-l_s_i_0__storage_offset 0)
(define-fun ge_6 () Bool (>= l_s_i_0__size0 0))
(assert ge_6)
(define-fun eq_14 () Bool (= l_s_i_0__size0 0))
(define-fun not__10 () Bool (not eq_14))
(assert not__10)
(define-fun sub_4 () Int (- l_s_i_0__size0 1))
(define-fun mul_12 () Int (* l_s_i_0__stride0 sub_4))
(define-fun add_6 () Int (+ 1 mul_12))
(define-fun mul_13 () Int (* 8 add_6))
(define-fun eq_15 () Bool (= l_s_i_0__size0 1))
(define-fun not__11 () Bool (not eq_15))
(assert not__11)
(define-fun eq_16 () Bool (= l_s_i_0__stride0 1))
(assert eq_16)
(define-fun ge_7 () Bool (>= l_s_i_0__storage_offset 0))
(assert ge_7)
(define-fun add_7 () Int (+ l_s_i_0__storage_offset add_6))
(define-fun mul_14 () Int (* 8 add_7))
(declare-const l_s_i_1__size0 Int)
(set-info :example-l_s_i_1__size0 400)
(declare-const l_s_i_1__stride0 Int)
(set-info :example-l_s_i_1__stride0 1)
(declare-const l_s_i_1__storage_offset Int)
(set-info :example-l_s_i_1__storage_offset 0)
(define-fun ge_8 () Bool (>= l_s_i_1__size0 0))
(assert ge_8)
(define-fun eq_17 () Bool (= l_s_i_1__size0 0))
(define-fun not__12 () Bool (not eq_17))
(assert not__12)
(define-fun sub_5 () Int (- l_s_i_1__size0 1))
(define-fun mul_15 () Int (* l_s_i_1__stride0 sub_5))
(define-fun add_8 () Int (+ 1 mul_15))
(define-fun mul_16 () Int (* 8 add_8))
(define-fun eq_18 () Bool (= l_s_i_1__size0 1))
(define-fun not__13 () Bool (not eq_18))
(assert not__13)
(define-fun eq_19 () Bool (= l_s_i_1__stride0 1))
(assert eq_19)
(define-fun ge_9 () Bool (>= l_s_i_1__storage_offset 0))
(assert ge_9)
(define-fun add_9 () Int (+ l_s_i_1__storage_offset add_8))
(define-fun mul_17 () Int (* 8 add_9))
(declare-const l_s_i_2__size0 Int)
(set-info :example-l_s_i_2__size0 400)
(declare-const l_s_i_2__stride0 Int)
(set-info :example-l_s_i_2__stride0 1)
(declare-const l_s_i_2__storage_offset Int)
(set-info :example-l_s_i_2__storage_offset 0)
(define-fun ge_10 () Bool (>= l_s_i_2__size0 0))
(assert ge_10)
(define-fun eq_20 () Bool (= l_s_i_2__size0 0))
(define-fun not__14 () Bool (not eq_20))
(assert not__14)
(define-fun sub_6 () Int (- l_s_i_2__size0 1))
(define-fun mul_18 () Int (* l_s_i_2__stride0 sub_6))
(define-fun add_10 () Int (+ 1 mul_18))
(define-fun mul_19 () Int (* 8 add_10))
(define-fun eq_21 () Bool (= l_s_i_2__size0 1))
(define-fun not__15 () Bool (not eq_21))
(assert not__15)
(define-fun eq_22 () Bool (= l_s_i_2__stride0 1))
(assert eq_22)
(define-fun ge_11 () Bool (>= l_s_i_2__storage_offset 0))
(assert ge_11)
(define-fun add_11 () Int (+ l_s_i_2__storage_offset add_10))
(define-fun mul_20 () Int (* 8 add_11))
(declare-const l_s_i_3__size0 Int)
(set-info :example-l_s_i_3__size0 400)
(declare-const l_s_i_3__stride0 Int)
(set-info :example-l_s_i_3__stride0 1)
(declare-const l_s_i_3__storage_offset Int)
(set-info :example-l_s_i_3__storage_offset 0)
(define-fun ge_12 () Bool (>= l_s_i_3__size0 0))
(assert ge_12)
(define-fun eq_23 () Bool (= l_s_i_3__size0 0))
(define-fun not__16 () Bool (not eq_23))
(assert not__16)
(define-fun sub_7 () Int (- l_s_i_3__size0 1))
(define-fun mul_21 () Int (* l_s_i_3__stride0 sub_7))
(define-fun add_12 () Int (+ 1 mul_21))
(define-fun mul_22 () Int (* 8 add_12))
(define-fun eq_24 () Bool (= l_s_i_3__size0 1))
(define-fun not__17 () Bool (not eq_24))
(assert not__17)
(define-fun eq_25 () Bool (= l_s_i_3__stride0 1))
(assert eq_25)
(define-fun ge_13 () Bool (>= l_s_i_3__storage_offset 0))
(assert ge_13)
(define-fun add_13 () Int (+ l_s_i_3__storage_offset add_12))
(define-fun mul_23 () Int (* 8 add_13))
(declare-const l_s_i_4__size0 Int)
(set-info :example-l_s_i_4__size0 400)
(declare-const l_s_i_4__stride0 Int)
(set-info :example-l_s_i_4__stride0 1)
(declare-const l_s_i_4__storage_offset Int)
(set-info :example-l_s_i_4__storage_offset 0)
(define-fun ge_14 () Bool (>= l_s_i_4__size0 0))
(assert ge_14)
(define-fun eq_26 () Bool (= l_s_i_4__size0 0))
(define-fun not__18 () Bool (not eq_26))
(assert not__18)
(define-fun sub_8 () Int (- l_s_i_4__size0 1))
(define-fun mul_24 () Int (* l_s_i_4__stride0 sub_8))
(define-fun add_14 () Int (+ 1 mul_24))
(define-fun mul_25 () Int (* 8 add_14))
(define-fun eq_27 () Bool (= l_s_i_4__size0 1))
(define-fun not__19 () Bool (not eq_27))
(assert not__19)
(define-fun eq_28 () Bool (= l_s_i_4__stride0 1))
(assert eq_28)
(define-fun ge_15 () Bool (>= l_s_i_4__storage_offset 0))
(assert ge_15)
(define-fun add_15 () Int (+ l_s_i_4__storage_offset add_14))
(define-fun mul_26 () Int (* 8 add_15))
(declare-const l_s_i_5__size0 Int)
(set-info :example-l_s_i_5__size0 400)
(declare-const l_s_i_5__stride0 Int)
(set-info :example-l_s_i_5__stride0 1)
(declare-const l_s_i_5__storage_offset Int)
(set-info :example-l_s_i_5__storage_offset 0)
(define-fun ge_16 () Bool (>= l_s_i_5__size0 0))
(assert ge_16)
(define-fun eq_29 () Bool (= l_s_i_5__size0 0))
(define-fun not__20 () Bool (not eq_29))
(assert not__20)
(define-fun sub_9 () Int (- l_s_i_5__size0 1))
(define-fun mul_27 () Int (* l_s_i_5__stride0 sub_9))
(define-fun add_16 () Int (+ 1 mul_27))
(define-fun mul_28 () Int (* 8 add_16))
(define-fun eq_30 () Bool (= l_s_i_5__size0 1))
(define-fun not__21 () Bool (not eq_30))
(assert not__21)
(define-fun eq_31 () Bool (= l_s_i_5__stride0 1))
(assert eq_31)
(define-fun ge_17 () Bool (>= l_s_i_5__storage_offset 0))
(assert ge_17)
(define-fun add_17 () Int (+ l_s_i_5__storage_offset add_16))
(define-fun mul_29 () Int (* 8 add_17))
(declare-const l_s_i_6__size0 Int)
(set-info :example-l_s_i_6__size0 400)
(declare-const l_s_i_6__stride0 Int)
(set-info :example-l_s_i_6__stride0 1)
(declare-const l_s_i_6__storage_offset Int)
(set-info :example-l_s_i_6__storage_offset 0)
(define-fun ge_18 () Bool (>= l_s_i_6__size0 0))
(assert ge_18)
(define-fun eq_32 () Bool (= l_s_i_6__size0 0))
(define-fun not__22 () Bool (not eq_32))
(assert not__22)
(define-fun sub_10 () Int (- l_s_i_6__size0 1))
(define-fun mul_30 () Int (* l_s_i_6__stride0 sub_10))
(define-fun add_18 () Int (+ 1 mul_30))
(define-fun mul_31 () Int (* 8 add_18))
(define-fun eq_33 () Bool (= l_s_i_6__size0 1))
(define-fun not__23 () Bool (not eq_33))
(assert not__23)
(define-fun eq_34 () Bool (= l_s_i_6__stride0 1))
(assert eq_34)
(define-fun ge_19 () Bool (>= l_s_i_6__storage_offset 0))
(assert ge_19)
(define-fun add_19 () Int (+ l_s_i_6__storage_offset add_18))
(define-fun mul_32 () Int (* 8 add_19))
(declare-const l_s_i_7__size0 Int)
(set-info :example-l_s_i_7__size0 400)
(declare-const l_s_i_7__stride0 Int)
(set-info :example-l_s_i_7__stride0 1)
(declare-const l_s_i_7__storage_offset Int)
(set-info :example-l_s_i_7__storage_offset 0)
(define-fun ge_20 () Bool (>= l_s_i_7__size0 0))
(assert ge_20)
(define-fun eq_35 () Bool (= l_s_i_7__size0 0))
(define-fun not__24 () Bool (not eq_35))
(assert not__24)
(define-fun sub_11 () Int (- l_s_i_7__size0 1))
(define-fun mul_33 () Int (* l_s_i_7__stride0 sub_11))
(define-fun add_20 () Int (+ 1 mul_33))
(define-fun mul_34 () Int (* 8 add_20))
(define-fun eq_36 () Bool (= l_s_i_7__size0 1))
(define-fun not__25 () Bool (not eq_36))
(assert not__25)
(define-fun eq_37 () Bool (= l_s_i_7__stride0 1))
(assert eq_37)
(define-fun ge_21 () Bool (>= l_s_i_7__storage_offset 0))
(assert ge_21)
(define-fun add_21 () Int (+ l_s_i_7__storage_offset add_20))
(define-fun mul_35 () Int (* 8 add_21))
(define-fun eq_38 () Bool (= dense_x_size1 512))
(assert eq_38)
(define-fun mul_36 () Int (* 512 dense_x_size0))
(define-fun mul_37 () Int (* 512 sub))
(define-fun add_22 () Int (+ 1 mul_37))
(define-fun add_23 () Int (+ add_22 511))
(define-fun mul_38 () Int (* 4 add_23))
(define-fun mul_39 () Int (* dense_x_size0 512))
(define-fun eq_39 () Bool (= mul_39 0))
(define-fun not__26 () Bool (not eq_39))
(assert not__26)
(define-fun lt () Bool (< dense_x_size0 0))
(define-fun not__27 () Bool (not lt))
(assert not__27)
(define-fun eq_40 () Bool (= dense_x_size0 dense_x_size0))
(assert eq_40)
(define-fun lt_1 () Bool (< dense_x_size0 2))
(define-fun not__28 () Bool (not lt_1))
(assert not__28)
(define-fun eq_41 () Bool (= dense_x_size0 -1))
(define-fun not__29 () Bool (not eq_41))
(assert not__29)
(define-fun eq_42 () Bool (= mul_39 mul_39))
(assert eq_42)
(define-fun mul_40 () Int (* 64 dense_x_size0))
(define-fun mul_41 () Int (* 64 sub))
(define-fun add_24 () Int (+ 1 mul_41))
(define-fun add_25 () Int (+ add_24 63))
(define-fun mul_42 () Int (* 4 add_25))
(define-fun mul_43 () Int (* dense_x_size0 64))
(define-fun eq_43 () Bool (= mul_43 0))
(define-fun not__30 () Bool (not eq_43))
(assert not__30)
(define-fun eq_44 () Bool (= mul_43 mul_43))
(assert eq_44)
(define-fun gt () Bool (> l_s_o_size0 0))
(assert gt)
(define-fun lt_2 () Bool (< l_s_o_size0 0))
(define-fun not__31 () Bool (not lt_2))
(assert not__31)
(define-fun le () Bool (<= l_s_o_size0 0))
(define-fun not__32 () Bool (not le))
(assert not__32)
(define-fun mul_44 () Int (* 0 l_s_o_stride0))
(define-fun add_26 () Int (+ l_s_o_storage_offset mul_44))
(define-fun mul_45 () Int (* 64 l_s_o_size1))
(define-fun mul_46 () Int (* 64 sub_3))
(define-fun add_27 () Int (+ 1 mul_46))
(define-fun add_28 () Int (+ add_27 63))
(define-fun mul_47 () Int (* 4 add_28))
(define-fun mul_48 () Int (* l_s_o_size1 64))
(define-fun eq_45 () Bool (= mul_48 0))
(define-fun not__33 () Bool (not eq_45))
(assert not__33)
(define-fun add_29 () Int (+ 1 sub_4))
(define-fun mul_49 () Int (* 8 add_29))
(define-fun add_30 () Int (+ 1 sub_3))
(define-fun mul_50 () Int (* 8 add_30))
(define-fun ge_22 () Bool (>= l_s_o_size0 -1))
(assert ge_22)
(define-fun gt_1 () Bool (> l_s_o_size0 1))
(assert gt_1)
(define-fun lt_3 () Bool (< l_s_o_size0 -1))
(define-fun not__34 () Bool (not lt_3))
(assert not__34)
(define-fun le_1 () Bool (<= l_s_o_size0 1))
(define-fun not__35 () Bool (not le_1))
(assert not__35)
(define-fun add_31 () Int (+ l_s_o_storage_offset l_s_o_stride0))
(define-fun add_32 () Int (+ 1 sub_5))
(define-fun mul_51 () Int (* 8 add_32))
(define-fun ge_23 () Bool (>= l_s_o_size0 -2))
(assert ge_23)
(define-fun gt_2 () Bool (> l_s_o_size0 2))
(assert gt_2)
(define-fun lt_4 () Bool (< l_s_o_size0 -2))
(define-fun not__36 () Bool (not lt_4))
(assert not__36)
(define-fun le_2 () Bool (<= l_s_o_size0 2))
(define-fun not__37 () Bool (not le_2))
(assert not__37)
(define-fun mul_52 () Int (* 2 l_s_o_stride0))
(define-fun add_33 () Int (+ l_s_o_storage_offset mul_52))
(define-fun add_34 () Int (+ 1 sub_6))
(define-fun mul_53 () Int (* 8 add_34))
(define-fun ge_24 () Bool (>= l_s_o_size0 -3))
(assert ge_24)
(define-fun gt_3 () Bool (> l_s_o_size0 3))
(assert gt_3)
(define-fun lt_5 () Bool (< l_s_o_size0 -3))
(define-fun not__38 () Bool (not lt_5))
(assert not__38)
(define-fun le_3 () Bool (<= l_s_o_size0 3))
(define-fun not__39 () Bool (not le_3))
(assert not__39)
(define-fun mul_54 () Int (* 3 l_s_o_stride0))
(define-fun add_35 () Int (+ l_s_o_storage_offset mul_54))
(define-fun add_36 () Int (+ 1 sub_7))
(define-fun mul_55 () Int (* 8 add_36))
(define-fun ge_25 () Bool (>= l_s_o_size0 -4))
(assert ge_25)
(define-fun gt_4 () Bool (> l_s_o_size0 4))
(assert gt_4)
(define-fun lt_6 () Bool (< l_s_o_size0 -4))
(define-fun not__40 () Bool (not lt_6))
(assert not__40)
(define-fun le_4 () Bool (<= l_s_o_size0 4))
(define-fun not__41 () Bool (not le_4))
(assert not__41)
(define-fun mul_56 () Int (* 4 l_s_o_stride0))
(define-fun add_37 () Int (+ l_s_o_storage_offset mul_56))
(define-fun add_38 () Int (+ 1 sub_8))
(define-fun mul_57 () Int (* 8 add_38))
(define-fun ge_26 () Bool (>= l_s_o_size0 -5))
(assert ge_26)
(define-fun gt_5 () Bool (> l_s_o_size0 5))
(assert gt_5)
(define-fun lt_7 () Bool (< l_s_o_size0 -5))
(define-fun not__42 () Bool (not lt_7))
(assert not__42)
(define-fun le_5 () Bool (<= l_s_o_size0 5))
(define-fun not__43 () Bool (not le_5))
(assert not__43)
(define-fun mul_58 () Int (* 5 l_s_o_stride0))
(define-fun add_39 () Int (+ l_s_o_storage_offset mul_58))
(define-fun add_40 () Int (+ 1 sub_9))
(define-fun mul_59 () Int (* 8 add_40))
(define-fun ge_27 () Bool (>= l_s_o_size0 -6))
(assert ge_27)
(define-fun gt_6 () Bool (> l_s_o_size0 6))
(assert gt_6)
(define-fun lt_8 () Bool (< l_s_o_size0 -6))
(define-fun not__44 () Bool (not lt_8))
(assert not__44)
(define-fun le_6 () Bool (<= l_s_o_size0 6))
(define-fun not__45 () Bool (not le_6))
(assert not__45)
(define-fun mul_60 () Int (* 6 l_s_o_stride0))
(define-fun add_41 () Int (+ l_s_o_storage_offset mul_60))
(define-fun add_42 () Int (+ 1 sub_10))
(define-fun mul_61 () Int (* 8 add_42))
(define-fun ge_28 () Bool (>= l_s_o_size0 -7))
(assert ge_28)
(define-fun gt_7 () Bool (> l_s_o_size0 7))
(assert gt_7)
(define-fun lt_9 () Bool (< l_s_o_size0 -7))
(define-fun not__46 () Bool (not lt_9))
(assert not__46)
(define-fun le_7 () Bool (<= l_s_o_size0 7))
(define-fun not__47 () Bool (not le_7))
(assert not__47)
(define-fun mul_62 () Int (* 7 l_s_o_stride0))
(define-fun add_43 () Int (+ l_s_o_storage_offset mul_62))
(define-fun add_44 () Int (+ 1 sub_11))
(define-fun mul_63 () Int (* 8 add_44))
(define-fun eq_46 () Bool (= l_s_o_size1 dense_x_size0))
(assert eq_46)
(define-fun mul_64 () Int (* 576 dense_x_size0))
(define-fun mul_65 () Int (* 576 sub))
(define-fun add_45 () Int (+ 1 mul_65))
(define-fun add_46 () Int (+ add_45 575))
(define-fun mul_66 () Int (* 4 add_46))
(define-fun mul_67 () Int (* dense_x_size0 576))
(define-fun eq_47 () Bool (= mul_67 0))
(define-fun not__48 () Bool (not eq_47))
(assert not__48)
(define-fun eq_48 () Bool (= mul_67 mul_43))
(define-fun not__49 () Bool (not eq_48))
(assert not__49)
(define-fun gt_8 () Bool (> mul_43 0))
(assert gt_8)
(define-fun mod () Int (mod mul_67 mul_43))
(define-fun eq_49 () Bool (= mod 0))
(assert eq_49)
(define-fun floordiv () Int (div mul_67 mul_43))
(define-fun eq_50 () Bool (= floordiv 576))
(define-fun not__50 () Bool (not eq_50))
(assert not__50)
(define-fun mod_1 () Int (mod 576 floordiv))
(define-fun eq_51 () Bool (= mod_1 0))
(assert eq_51)
(define-fun ge_29 () Bool (>= floordiv 0))
(assert ge_29)
(define-fun floordiv_1 () Int (div 576 floordiv))
(define-fun mul_68 () Int (* dense_x_size0 floordiv))
(define-fun mul_69 () Int (* mul_68 floordiv_1))
(define-fun eq_52 () Bool (= mul_69 0))
(define-fun not__51 () Bool (not eq_52))
(assert not__51)
(define-fun eq_53 () Bool (= floordiv_1 1))
(define-fun not__52 () Bool (not eq_53))
(assert not__52)
(define-fun eq_54 () Bool (= floordiv 1))
(define-fun not__53 () Bool (not eq_54))
(assert not__53)
(define-fun eq_55 () Bool (= floordiv_1 floordiv_1))
(assert eq_55)
(define-fun mul_70 () Int (* floordiv_1 floordiv))
(define-fun eq_56 () Bool (= 576 mul_70))
(assert eq_56)
(define-fun mul_71 () Int (* mul_70 dense_x_size0))
(define-fun eq_57 () Bool (= floordiv_1 64))
(assert eq_57)
(define-fun mul_72 () Int (* dense_x_size0 floordiv_1))
(define-fun mul_73 () Int (* mul_72 floordiv))
(define-fun eq_58 () Bool (= mul_73 0))
(define-fun not__54 () Bool (not eq_58))
(assert not__54)
(define-fun lt_10 () Bool (< floordiv_1 2))
(define-fun not__55 () Bool (not lt_10))
(assert not__55)
(define-fun lt_11 () Bool (< floordiv 2))
(define-fun not__56 () Bool (not lt_11))
(assert not__56)
(define-fun lt_12 () Bool (< floordiv_1 1))
(define-fun not__57 () Bool (not lt_12))
(assert not__57)
(define-fun lt_13 () Bool (< floordiv_1 576))
(assert lt_13)
(define-fun eq_59 () Bool (= floordiv 0))
(define-fun not__58 () Bool (not eq_59))
(assert not__58)
(define-fun mul_74 () Int (* floordiv floordiv))
(define-fun mul_75 () Int (* mul_74 dense_x_size0))
(define-fun mul_76 () Int (* mul_74 sub))
(define-fun add_47 () Int (+ 1 mul_76))
(define-fun sub_12 () Int (- floordiv 1))
(define-fun mul_77 () Int (* floordiv sub_12))
(define-fun add_48 () Int (+ add_47 mul_77))
(define-fun add_49 () Int (+ add_48 sub_12))
(define-fun mul_78 () Int (* 4 add_49))
(define-fun mul_79 () Int (* mul_68 floordiv))
(define-fun eq_60 () Bool (= mul_79 0))
(define-fun not__59 () Bool (not eq_60))
(assert not__59)
(define-fun eq_61 () Bool (= floordiv floordiv))
(assert eq_61)
(define-fun eq_62 () Bool (= mul_74 mul_74))
(assert eq_62)
(define-fun eq_63 () Bool (= floordiv 9))
(assert eq_63)
(define-fun eq_64 () Bool (= dense_x_size0 9223372036854775807))
(define-fun not__60 () Bool (not eq_64))
(assert not__60)
(define-fun le_8 () Bool (<= dense_x_size0 0))
(define-fun not__61 () Bool (not le_8))
(assert not__61)
(define-fun le_9 () Bool (<= dense_x_size0 9223372036854775807))
(assert le_9)
(define-fun mul_80 () Int (* 0 mul_74))
(define-fun sub_13 () Int (- dense_x_size0 0))
(define-fun add_50 () Int (+ sub_13 1))
(define-fun sub_14 () Int (- add_50 1))
(define-fun floordiv_2 () Int (div sub_14 1))
(define-fun mul_81 () Int (* floordiv_2 floordiv))
(define-fun mul_82 () Int (* mul_81 floordiv))
(define-fun eq_65 () Bool (= mul_82 0))
(define-fun not__62 () Bool (not eq_65))
(assert not__62)
(define-fun eq_66 () Bool (= floordiv_2 1))
(define-fun not__63 () Bool (not eq_66))
(assert not__63)
(define-fun mul_83 () Int (* mul_74 floordiv_2))
(define-fun ge_30 () Bool (>= floordiv_2 0))
(assert ge_30)
(define-fun eq_67 () Bool (= floordiv_2 0))
(define-fun not__64 () Bool (not eq_67))
(assert not__64)
(define-fun mul_84 () Int (* 36 floordiv_2))
(define-fun sub_15 () Int (- floordiv_2 1))
(define-fun mul_85 () Int (* 36 sub_15))
(define-fun add_51 () Int (+ 1 mul_85))
(define-fun add_52 () Int (+ add_51 35))
(define-fun mul_86 () Int (* 4 add_52))
(define-fun mul_87 () Int (* floordiv_2 36))
(define-fun eq_68 () Bool (= mul_87 0))
(define-fun not__65 () Bool (not eq_68))
(assert not__65)
(define-fun eq_69 () Bool (= floordiv_2 dense_x_size0))
(assert eq_69)
(define-fun mul_88 () Int (* 100 dense_x_size0))
(define-fun mul_89 () Int (* 100 sub))
(define-fun add_53 () Int (+ 1 mul_89))
(define-fun add_54 () Int (+ add_53 99))
(define-fun mul_90 () Int (* 4 add_54))
(define-fun mul_91 () Int (* dense_x_size0 100))
(define-fun eq_70 () Bool (= mul_91 0))
(define-fun not__66 () Bool (not eq_70))
(assert not__66)
(define-fun mul_92 () Int (* 1024 dense_x_size0))
(define-fun mul_93 () Int (* 1024 sub))
(define-fun add_55 () Int (+ 1 mul_93))
(define-fun add_56 () Int (+ add_55 1023))
(define-fun mul_94 () Int (* 4 add_56))
(define-fun mul_95 () Int (* dense_x_size0 1024))
(define-fun eq_71 () Bool (= mul_95 0))
(define-fun not__67 () Bool (not eq_71))
(assert not__67)
(define-fun eq_72 () Bool (= mul_95 mul_95))
(assert eq_72)
(define-fun add_57 () Int (+ 1 sub))
(define-fun mul_96 () Int (* 4 add_57))
(define-fun lt_14 () Bool (< dense_x_size0 1))
(define-fun not__68 () Bool (not lt_14))
(assert not__68)
(define-fun eq_73 () Bool (= mul_5 0))
(define-fun not__69 () Bool (not eq_73))
(assert not__69)
(define-fun eq_74 () Bool (= mul_11 0))
(define-fun not__70 () Bool (not eq_74))
(assert not__70)
(define-fun eq_75 () Bool (= mul_14 0))
(define-fun not__71 () Bool (not eq_75))
(assert not__71)
(define-fun eq_76 () Bool (= mul_17 0))
(define-fun not__72 () Bool (not eq_76))
(assert not__72)
(define-fun eq_77 () Bool (= mul_20 0))
(define-fun not__73 () Bool (not eq_77))
(assert not__73)
(define-fun eq_78 () Bool (= mul_23 0))
(define-fun not__74 () Bool (not eq_78))
(assert not__74)
(define-fun eq_79 () Bool (= mul_26 0))
(define-fun not__75 () Bool (not eq_79))
(assert not__75)
(define-fun eq_80 () Bool (= mul_29 0))
(define-fun not__76 () Bool (not eq_80))
(assert not__76)
(define-fun eq_81 () Bool (= mul_32 0))
(define-fun not__77 () Bool (not eq_81))
(assert not__77)
(define-fun eq_82 () Bool (= mul_35 0))
(define-fun not__78 () Bool (not eq_82))
(assert not__78)
(define-fun eq_83 () Bool (= mul_96 0))
(define-fun not__79 () Bool (not eq_83))
(assert not__79)
(define-fun output0_size0 () Int dense_x_size0)
(define-fun output0_size1 () Int 1)
(define-fun output0_stride0 () Int 1)
(define-fun output0_stride1 () Int 1)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-value (dense_x_size0 dense_x_size1 dense_x_stride0 dense_x_stride1 dense_x_storage_offset l_s_o_size0 l_s_o_size1 l_s_o_stride0 l_s_o_stride1 l_s_o_storage_offset l_s_i_0__size0 l_s_i_0__stride0 l_s_i_0__storage_offset l_s_i_1__size0 l_s_i_1__stride0 l_s_i_1__storage_offset l_s_i_2__size0 l_s_i_2__stride0 l_s_i_2__storage_offset l_s_i_3__size0 l_s_i_3__stride0 l_s_i_3__storage_offset l_s_i_4__size0 l_s_i_4__stride0 l_s_i_4__storage_offset l_s_i_5__size0 l_s_i_5__stride0 l_s_i_5__storage_offset l_s_i_6__size0 l_s_i_6__stride0 l_s_i_6__storage_offset l_s_i_7__size0 l_s_i_7__stride0 l_s_i_7__storage_offset output0_size0 output0_size1 output0_stride0 output0_stride1 output0_storage_offset))

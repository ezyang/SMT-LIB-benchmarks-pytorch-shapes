(set-option :produce-models true)
(declare-const x_size0 Int)
(declare-const x_size1 Int)
(declare-const x_size2 Int)
(declare-const x_size3 Int)
(declare-const x_stride0 Int)
(declare-const x_stride1 Int)
(declare-const x_stride2 Int)
(declare-const x_stride3 Int)
(declare-const x_storage_offset Int)
(define-fun ge () Bool (>= x_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= x_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= x_size2 0))
(assert ge_2)
(define-fun ge_3 () Bool (>= x_size3 0))
(assert ge_3)
(define-fun eq () Bool (= x_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- x_size0 1))
(define-fun mul () Int (* x_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= x_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- x_size1 1))
(define-fun mul_1 () Int (* x_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= x_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- x_size2 1))
(define-fun mul_2 () Int (* x_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun eq_3 () Bool (= x_size3 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun sub_3 () Int (- x_size3 1))
(define-fun mul_3 () Int (* x_stride3 sub_3))
(define-fun add_3 () Int (+ add_2 mul_3))
(define-fun mul_4 () Int (* 4 add_3))
(define-fun mul_5 () Int (* x_size0 x_size1))
(define-fun mul_6 () Int (* mul_5 x_size2))
(define-fun mul_7 () Int (* mul_6 x_size3))
(define-fun eq_4 () Bool (= mul_7 0))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= x_size3 1))
(define-fun not__5 () Bool (not eq_5))
(assert not__5)
(define-fun eq_6 () Bool (= x_stride3 1))
(assert eq_6)
(define-fun eq_7 () Bool (= x_size2 1))
(define-fun not__6 () Bool (not eq_7))
(assert not__6)
(define-fun eq_8 () Bool (= x_stride2 x_size3))
(assert eq_8)
(define-fun mul_8 () Int (* x_size3 x_size2))
(define-fun eq_9 () Bool (= x_size1 1))
(define-fun not__7 () Bool (not eq_9))
(assert not__7)
(define-fun eq_10 () Bool (= x_stride1 mul_8))
(assert eq_10)
(define-fun mul_9 () Int (* mul_8 x_size1))
(define-fun eq_11 () Bool (= x_size0 1))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun eq_12 () Bool (= x_stride0 mul_9))
(assert eq_12)
(define-fun mul_10 () Int (* mul_9 x_size0))
(define-fun eq_13 () Bool (= x_stride1 1))
(define-fun not__9 () Bool (not eq_13))
(assert not__9)
(define-fun eq_14 () Bool (= x_stride1 0))
(define-fun not__10 () Bool (not eq_14))
(assert not__10)
(define-fun lt () Bool (< x_stride1 0))
(define-fun not__11 () Bool (not lt))
(assert not__11)
(define-fun gt () Bool (> x_size1 1))
(assert gt)
(define-fun mul_11 () Int (* x_stride1 x_size1))
(define-fun lt_1 () Bool (< x_stride3 mul_11))
(assert lt_1)
(define-fun ge_4 () Bool (>= x_storage_offset 0))
(assert ge_4)
(define-fun add_4 () Int (+ x_storage_offset add_3))
(define-fun mul_12 () Int (* 4 add_4))
(define-fun eq_15 () Bool (= x_size2 224))
(assert eq_15)
(define-fun eq_16 () Bool (= x_size3 224))
(assert eq_16)
(define-fun eq_17 () Bool (= x_size1 3))
(assert eq_17)
(define-fun lt_2 () Bool (< x_size2 16))
(define-fun not__12 () Bool (not lt_2))
(assert not__12)
(define-fun lt_3 () Bool (< x_size3 16))
(define-fun not__13 () Bool (not lt_3))
(assert not__13)
(define-fun floordiv () Int (div mul_7 x_size0))
(define-fun gt_1 () Bool (> floordiv 2147483647))
(define-fun not__14 () Bool (not gt_1))
(assert not__14)
(define-fun sub_4 () Int (- x_size2 16))
(define-fun floordiv_1 () Int (div sub_4 16))
(define-fun add_5 () Int (+ floordiv_1 1))
(define-fun sub_5 () Int (- x_size3 16))
(define-fun floordiv_2 () Int (div sub_5 16))
(define-fun add_6 () Int (+ floordiv_2 1))
(define-fun mul_13 () Int (* 768 add_5))
(define-fun mul_14 () Int (* mul_13 add_6))
(define-fun gt_2 () Bool (> mul_14 2147483647))
(define-fun not__15 () Bool (not gt_2))
(assert not__15)
(define-fun sub_6 () Int (- x_size2 15))
(define-fun sub_7 () Int (- sub_6 1))
(define-fun floordiv_3 () Int (div sub_7 16))
(define-fun add_7 () Int (+ floordiv_3 1))
(define-fun sub_8 () Int (- x_size3 15))
(define-fun sub_9 () Int (- sub_8 1))
(define-fun floordiv_4 () Int (div sub_9 16))
(define-fun add_8 () Int (+ floordiv_4 1))
(define-fun ge_5 () Bool (>= add_7 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= add_8 0))
(assert ge_6)
(define-fun eq_18 () Bool (= add_8 0))
(define-fun not__16 () Bool (not eq_18))
(assert not__16)
(define-fun eq_19 () Bool (= add_7 0))
(define-fun not__17 () Bool (not eq_19))
(assert not__17)
(define-fun mul_15 () Int (* add_8 add_7))
(define-fun mul_16 () Int (* mul_15 768))
(define-fun mul_17 () Int (* mul_16 x_size0))
(define-fun mul_18 () Int (* mul_16 sub))
(define-fun add_9 () Int (+ 1 mul_18))
(define-fun mul_19 () Int (* mul_15 767))
(define-fun add_10 () Int (+ add_9 mul_19))
(define-fun sub_10 () Int (- add_7 1))
(define-fun mul_20 () Int (* add_8 sub_10))
(define-fun add_11 () Int (+ add_10 mul_20))
(define-fun sub_11 () Int (- add_8 1))
(define-fun add_12 () Int (+ add_11 sub_11))
(define-fun mul_21 () Int (* 4 add_12))
(define-fun mul_22 () Int (* x_size0 768))
(define-fun mul_23 () Int (* mul_22 add_7))
(define-fun mul_24 () Int (* mul_23 add_8))
(define-fun eq_20 () Bool (= mul_24 0))
(define-fun not__18 () Bool (not eq_20))
(assert not__18)
(define-fun eq_21 () Bool (= add_8 1))
(define-fun not__19 () Bool (not eq_21))
(assert not__19)
(define-fun eq_22 () Bool (= add_7 1))
(define-fun not__20 () Bool (not eq_22))
(assert not__20)
(define-fun eq_23 () Bool (= add_8 add_8))
(assert eq_23)
(define-fun eq_24 () Bool (= mul_15 mul_15))
(assert eq_24)
(define-fun eq_25 () Bool (= mul_16 mul_16))
(assert eq_25)
(define-fun eq_26 () Bool (= mul_15 1))
(define-fun not__21 () Bool (not eq_26))
(assert not__21)
(define-fun eq_27 () Bool (= mul_15 0))
(define-fun not__22 () Bool (not eq_27))
(assert not__22)
(define-fun lt_4 () Bool (< mul_15 0))
(define-fun not__23 () Bool (not lt_4))
(assert not__23)
(define-fun lt_5 () Bool (< 1 mul_16))
(assert lt_5)
(define-fun gt_3 () Bool (> x_stride1 1))
(assert gt_3)
(define-fun mul_25 () Int (* add_7 add_8))
(define-fun eq_28 () Bool (= x_size0 -1))
(define-fun not__24 () Bool (not eq_28))
(assert not__24)
(define-fun eq_29 () Bool (= mul_25 -1))
(define-fun not__25 () Bool (not eq_29))
(assert not__25)
(define-fun ge_7 () Bool (>= mul_25 0))
(assert ge_7)
(define-fun mul_26 () Int (* mul_22 mul_25))
(define-fun eq_30 () Bool (= mul_24 mul_26))
(assert eq_30)
(define-fun lt_6 () Bool (< 1 mul_17))
(assert lt_6)
(define-fun lt_7 () Bool (< mul_25 mul_17))
(assert lt_7)
(define-fun mul_27 () Int (* mul_25 768))
(define-fun lt_8 () Bool (< mul_27 mul_17))
(assert lt_8)
(define-fun mul_28 () Int (* mul_27 x_size0))
(define-fun eq_31 () Bool (= mul_28 mul_17))
(assert eq_31)
(define-fun eq_32 () Bool (= x_size0 x_size0))
(assert eq_32)
(define-fun eq_33 () Bool (= add_7 mul_25))
(define-fun not__26 () Bool (not eq_33))
(assert not__26)
(define-fun eq_34 () Bool (= mul_25 add_7))
(define-fun not__27 () Bool (not eq_34))
(assert not__27)
(define-fun mod () Int (mod add_7 mul_25))
(define-fun eq_35 () Bool (= mod 0))
(define-fun not__28 () Bool (not eq_35))
(assert not__28)
(define-fun mod_1 () Int (mod mul_25 mul_25))
(define-fun eq_36 () Bool (= mod_1 0))
(assert eq_36)
(define-fun lt_9 () Bool (< add_8 1))
(define-fun not__29 () Bool (not lt_9))
(assert not__29)
(define-fun gt_4 () Bool (> mul_24 0))
(assert gt_4)
(define-fun mul_29 () Int (* mul_22 mul_15))
(define-fun eq_37 () Bool (= mul_29 0))
(define-fun not__30 () Bool (not eq_37))
(assert not__30)
(define-fun eq_38 () Bool (= mul_25 mul_25))
(assert eq_38)
(define-fun mul_30 () Int (* x_size0 mul_15))
(define-fun mul_31 () Int (* mul_30 768))
(define-fun eq_39 () Bool (= mul_31 0))
(define-fun not__31 () Bool (not eq_39))
(assert not__31)
(define-fun lt_10 () Bool (< mul_15 2))
(define-fun not__32 () Bool (not lt_10))
(assert not__32)
(define-fun lt_11 () Bool (< x_size0 2))
(define-fun not__33 () Bool (not lt_11))
(assert not__33)
(define-fun lt_12 () Bool (< mul_15 1))
(define-fun not__34 () Bool (not lt_12))
(assert not__34)
(define-fun lt_13 () Bool (< mul_15 mul_16))
(assert lt_13)
(define-fun eq_40 () Bool (= mul_12 0))
(define-fun not__35 () Bool (not eq_40))
(assert not__35)
(define-fun eq_41 () Bool (= mul_21 0))
(define-fun not__36 () Bool (not eq_41))
(assert not__36)
(define-fun output0_size0 () Int x_size0)
(define-fun output0_size1 () Int mul_15)
(define-fun output0_size2 () Int 768)
(define-fun output0_stride0 () Int mul_16)
(define-fun output0_stride1 () Int 1)
(define-fun output0_stride2 () Int mul_15)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-model)

(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const ___stack1_size0 Int)
(set-info :example-___stack1_size0 10)
(declare-const ___stack1_size1 Int)
(set-info :example-___stack1_size1 22)
(declare-const ___stack1_size2 Int)
(set-info :example-___stack1_size2 512)
(declare-const ___stack1_stride0 Int)
(set-info :example-___stack1_stride0 11264)
(declare-const ___stack1_stride1 Int)
(set-info :example-___stack1_stride1 512)
(declare-const ___stack1_stride2 Int)
(set-info :example-___stack1_stride2 1)
(declare-const ___stack1_storage_offset Int)
(set-info :example-___stack1_storage_offset 0)
(define-fun ge () Bool (>= ___stack1_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= ___stack1_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= ___stack1_size2 0))
(assert ge_2)
(define-fun eq () Bool (= ___stack1_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- ___stack1_size0 1))
(define-fun mul () Int (* ___stack1_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= ___stack1_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- ___stack1_size1 1))
(define-fun mul_1 () Int (* ___stack1_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= ___stack1_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- ___stack1_size2 1))
(define-fun mul_2 () Int (* ___stack1_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun mul_3 () Int (* 4 add_2))
(define-fun mul_4 () Int (* ___stack1_size0 ___stack1_size1))
(define-fun mul_5 () Int (* mul_4 ___stack1_size2))
(define-fun eq_3 () Bool (= mul_5 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun eq_4 () Bool (= ___stack1_size2 1))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= ___stack1_stride2 1))
(assert eq_5)
(define-fun eq_6 () Bool (= ___stack1_size1 1))
(define-fun not__5 () Bool (not eq_6))
(assert not__5)
(define-fun eq_7 () Bool (= ___stack1_stride1 ___stack1_size2))
(assert eq_7)
(define-fun mul_6 () Int (* ___stack1_size2 ___stack1_size1))
(define-fun eq_8 () Bool (= ___stack1_size0 1))
(define-fun not__6 () Bool (not eq_8))
(assert not__6)
(define-fun eq_9 () Bool (= ___stack1_stride0 mul_6))
(assert eq_9)
(define-fun mul_7 () Int (* mul_6 ___stack1_size0))
(define-fun eq_10 () Bool (= ___stack1_size0 ___stack1_size0))
(assert eq_10)
(define-fun eq_11 () Bool (= ___stack1_size1 ___stack1_size1))
(assert eq_11)
(define-fun eq_12 () Bool (= ___stack1_size2 ___stack1_size2))
(assert eq_12)
(define-fun eq_13 () Bool (= ___stack1_stride2 0))
(define-fun not__7 () Bool (not eq_13))
(assert not__7)
(define-fun eq_14 () Bool (= ___stack1_stride1 0))
(define-fun not__8 () Bool (not eq_14))
(assert not__8)
(define-fun lt () Bool (< ___stack1_stride2 ___stack1_stride1))
(assert lt)
(define-fun eq_15 () Bool (= ___stack1_stride0 0))
(define-fun not__9 () Bool (not eq_15))
(assert not__9)
(define-fun lt_1 () Bool (< ___stack1_stride1 ___stack1_stride0))
(assert lt_1)
(define-fun mul_8 () Int (* mul_6 sub))
(define-fun add_3 () Int (+ 1 mul_8))
(define-fun mul_9 () Int (* ___stack1_size2 sub_1))
(define-fun add_4 () Int (+ add_3 mul_9))
(define-fun add_5 () Int (+ add_4 sub_2))
(define-fun mul_10 () Int (* 4 add_5))
(define-fun eq_16 () Bool (= mul_6 mul_6))
(assert eq_16)
(define-fun ge_3 () Bool (>= ___stack1_storage_offset 0))
(assert ge_3)
(define-fun add_6 () Int (+ ___stack1_storage_offset add_2))
(define-fun mul_11 () Int (* 4 add_6))
(declare-const ___stack2__base_size0 Int)
(set-info :example-___stack2__base_size0 1)
(declare-const ___stack2__base_size1 Int)
(set-info :example-___stack2__base_size1 5000)
(declare-const ___stack2__base_size2 Int)
(set-info :example-___stack2__base_size2 512)
(declare-const ___stack2__base_stride0 Int)
(set-info :example-___stack2__base_stride0 2560000)
(declare-const ___stack2__base_stride1 Int)
(set-info :example-___stack2__base_stride1 512)
(declare-const ___stack2__base_stride2 Int)
(set-info :example-___stack2__base_stride2 1)
(declare-const ___stack2__base_storage_offset Int)
(set-info :example-___stack2__base_storage_offset 0)
(define-fun ge_4 () Bool (>= ___stack2__base_size0 0))
(assert ge_4)
(define-fun ge_5 () Bool (>= ___stack2__base_size1 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= ___stack2__base_size2 0))
(assert ge_6)
(define-fun eq_17 () Bool (= ___stack2__base_size0 0))
(define-fun not__10 () Bool (not eq_17))
(assert not__10)
(define-fun sub_3 () Int (- ___stack2__base_size0 1))
(define-fun mul_12 () Int (* ___stack2__base_stride0 sub_3))
(define-fun add_7 () Int (+ 1 mul_12))
(define-fun eq_18 () Bool (= ___stack2__base_size1 0))
(define-fun not__11 () Bool (not eq_18))
(assert not__11)
(define-fun sub_4 () Int (- ___stack2__base_size1 1))
(define-fun mul_13 () Int (* ___stack2__base_stride1 sub_4))
(define-fun add_8 () Int (+ add_7 mul_13))
(define-fun eq_19 () Bool (= ___stack2__base_size2 0))
(define-fun not__12 () Bool (not eq_19))
(assert not__12)
(define-fun sub_5 () Int (- ___stack2__base_size2 1))
(define-fun mul_14 () Int (* ___stack2__base_stride2 sub_5))
(define-fun add_9 () Int (+ add_8 mul_14))
(define-fun mul_15 () Int (* 4 add_9))
(define-fun mul_16 () Int (* ___stack2__base_size0 ___stack2__base_size1))
(define-fun mul_17 () Int (* mul_16 ___stack2__base_size2))
(define-fun eq_20 () Bool (= mul_17 0))
(define-fun not__13 () Bool (not eq_20))
(assert not__13)
(define-fun eq_21 () Bool (= ___stack2__base_size2 1))
(define-fun not__14 () Bool (not eq_21))
(assert not__14)
(define-fun eq_22 () Bool (= ___stack2__base_stride2 1))
(assert eq_22)
(define-fun eq_23 () Bool (= ___stack2__base_size1 1))
(define-fun not__15 () Bool (not eq_23))
(assert not__15)
(define-fun eq_24 () Bool (= ___stack2__base_stride1 ___stack2__base_size2))
(assert eq_24)
(define-fun mul_18 () Int (* ___stack2__base_size2 ___stack2__base_size1))
(define-fun eq_25 () Bool (= ___stack2__base_size0 1))
(assert eq_25)
(define-fun ge_7 () Bool (>= ___stack2__base_storage_offset 0))
(assert ge_7)
(define-fun add_10 () Int (+ ___stack2__base_storage_offset add_9))
(define-fun mul_19 () Int (* 4 add_10))
(declare-const ___stack2_size0 Int)
(set-info :example-___stack2_size0 1)
(declare-const ___stack2_size1 Int)
(set-info :example-___stack2_size1 22)
(declare-const ___stack2_size2 Int)
(set-info :example-___stack2_size2 512)
(declare-const ___stack2_stride0 Int)
(set-info :example-___stack2_stride0 2560000)
(declare-const ___stack2_stride1 Int)
(set-info :example-___stack2_stride1 512)
(declare-const ___stack2_stride2 Int)
(set-info :example-___stack2_stride2 1)
(declare-const ___stack2_storage_offset Int)
(set-info :example-___stack2_storage_offset 0)
(define-fun mul_20 () Int (* ___stack2_size0 ___stack2_size1))
(define-fun mul_21 () Int (* mul_20 ___stack2_size2))
(define-fun eq_26 () Bool (= mul_21 0))
(define-fun not__16 () Bool (not eq_26))
(assert not__16)
(define-fun eq_27 () Bool (= ___stack2_size2 1))
(define-fun not__17 () Bool (not eq_27))
(assert not__17)
(define-fun eq_28 () Bool (= ___stack2_stride2 1))
(assert eq_28)
(define-fun eq_29 () Bool (= ___stack2_size1 1))
(define-fun not__18 () Bool (not eq_29))
(assert not__18)
(define-fun eq_30 () Bool (= ___stack2_stride1 ___stack2_size2))
(assert eq_30)
(define-fun mul_22 () Int (* ___stack2_size2 ___stack2_size1))
(define-fun eq_31 () Bool (= ___stack2_size0 1))
(assert eq_31)
(declare-const encoder_padded_outputs_size0 Int)
(set-info :example-encoder_padded_outputs_size0 10)
(declare-const encoder_padded_outputs_size1 Int)
(set-info :example-encoder_padded_outputs_size1 204)
(declare-const encoder_padded_outputs_size2 Int)
(set-info :example-encoder_padded_outputs_size2 512)
(declare-const encoder_padded_outputs_stride0 Int)
(set-info :example-encoder_padded_outputs_stride0 104448)
(declare-const encoder_padded_outputs_stride1 Int)
(set-info :example-encoder_padded_outputs_stride1 512)
(declare-const encoder_padded_outputs_stride2 Int)
(set-info :example-encoder_padded_outputs_stride2 1)
(declare-const encoder_padded_outputs_storage_offset Int)
(set-info :example-encoder_padded_outputs_storage_offset 0)
(define-fun ge_8 () Bool (>= encoder_padded_outputs_size0 0))
(assert ge_8)
(define-fun ge_9 () Bool (>= encoder_padded_outputs_size1 0))
(assert ge_9)
(define-fun ge_10 () Bool (>= encoder_padded_outputs_size2 0))
(assert ge_10)
(define-fun eq_32 () Bool (= encoder_padded_outputs_size0 0))
(define-fun not__19 () Bool (not eq_32))
(assert not__19)
(define-fun sub_6 () Int (- encoder_padded_outputs_size0 1))
(define-fun mul_23 () Int (* encoder_padded_outputs_stride0 sub_6))
(define-fun add_11 () Int (+ 1 mul_23))
(define-fun eq_33 () Bool (= encoder_padded_outputs_size1 0))
(define-fun not__20 () Bool (not eq_33))
(assert not__20)
(define-fun sub_7 () Int (- encoder_padded_outputs_size1 1))
(define-fun mul_24 () Int (* encoder_padded_outputs_stride1 sub_7))
(define-fun add_12 () Int (+ add_11 mul_24))
(define-fun eq_34 () Bool (= encoder_padded_outputs_size2 0))
(define-fun not__21 () Bool (not eq_34))
(assert not__21)
(define-fun sub_8 () Int (- encoder_padded_outputs_size2 1))
(define-fun mul_25 () Int (* encoder_padded_outputs_stride2 sub_8))
(define-fun add_13 () Int (+ add_12 mul_25))
(define-fun mul_26 () Int (* 4 add_13))
(define-fun mul_27 () Int (* encoder_padded_outputs_size0 encoder_padded_outputs_size1))
(define-fun mul_28 () Int (* mul_27 encoder_padded_outputs_size2))
(define-fun eq_35 () Bool (= mul_28 0))
(define-fun not__22 () Bool (not eq_35))
(assert not__22)
(define-fun eq_36 () Bool (= encoder_padded_outputs_size2 1))
(define-fun not__23 () Bool (not eq_36))
(assert not__23)
(define-fun eq_37 () Bool (= encoder_padded_outputs_stride2 1))
(assert eq_37)
(define-fun eq_38 () Bool (= encoder_padded_outputs_size1 1))
(define-fun not__24 () Bool (not eq_38))
(assert not__24)
(define-fun eq_39 () Bool (= encoder_padded_outputs_stride1 encoder_padded_outputs_size2))
(assert eq_39)
(define-fun mul_29 () Int (* encoder_padded_outputs_size2 encoder_padded_outputs_size1))
(define-fun eq_40 () Bool (= encoder_padded_outputs_size0 1))
(define-fun not__25 () Bool (not eq_40))
(assert not__25)
(define-fun eq_41 () Bool (= encoder_padded_outputs_stride0 mul_29))
(assert eq_41)
(define-fun mul_30 () Int (* mul_29 encoder_padded_outputs_size0))
(define-fun eq_42 () Bool (= encoder_padded_outputs_size0 encoder_padded_outputs_size0))
(assert eq_42)
(define-fun eq_43 () Bool (= encoder_padded_outputs_size1 encoder_padded_outputs_size1))
(assert eq_43)
(define-fun eq_44 () Bool (= encoder_padded_outputs_size2 encoder_padded_outputs_size2))
(assert eq_44)
(define-fun eq_45 () Bool (= encoder_padded_outputs_stride2 0))
(define-fun not__26 () Bool (not eq_45))
(assert not__26)
(define-fun eq_46 () Bool (= encoder_padded_outputs_stride1 0))
(define-fun not__27 () Bool (not eq_46))
(assert not__27)
(define-fun lt_2 () Bool (< encoder_padded_outputs_stride2 encoder_padded_outputs_stride1))
(assert lt_2)
(define-fun eq_47 () Bool (= encoder_padded_outputs_stride0 0))
(define-fun not__28 () Bool (not eq_47))
(assert not__28)
(define-fun lt_3 () Bool (< encoder_padded_outputs_stride1 encoder_padded_outputs_stride0))
(assert lt_3)
(define-fun mul_31 () Int (* mul_29 sub_6))
(define-fun add_14 () Int (+ 1 mul_31))
(define-fun mul_32 () Int (* encoder_padded_outputs_size2 sub_7))
(define-fun add_15 () Int (+ add_14 mul_32))
(define-fun add_16 () Int (+ add_15 sub_8))
(define-fun mul_33 () Int (* 4 add_16))
(define-fun eq_48 () Bool (= mul_29 mul_29))
(assert eq_48)
(define-fun ge_11 () Bool (>= encoder_padded_outputs_storage_offset 0))
(assert ge_11)
(define-fun add_17 () Int (+ encoder_padded_outputs_storage_offset add_13))
(define-fun mul_34 () Int (* 4 add_17))
(declare-const ys_out_pad_size0 Int)
(set-info :example-ys_out_pad_size0 10)
(declare-const ys_out_pad_size1 Int)
(set-info :example-ys_out_pad_size1 22)
(declare-const ys_out_pad_stride0 Int)
(set-info :example-ys_out_pad_stride0 22)
(declare-const ys_out_pad_stride1 Int)
(set-info :example-ys_out_pad_stride1 1)
(declare-const ys_out_pad_storage_offset Int)
(set-info :example-ys_out_pad_storage_offset 0)
(define-fun ge_12 () Bool (>= ys_out_pad_size0 0))
(assert ge_12)
(define-fun ge_13 () Bool (>= ys_out_pad_size1 0))
(assert ge_13)
(define-fun eq_49 () Bool (= ys_out_pad_size0 0))
(define-fun not__29 () Bool (not eq_49))
(assert not__29)
(define-fun sub_9 () Int (- ys_out_pad_size0 1))
(define-fun mul_35 () Int (* ys_out_pad_stride0 sub_9))
(define-fun add_18 () Int (+ 1 mul_35))
(define-fun eq_50 () Bool (= ys_out_pad_size1 0))
(define-fun not__30 () Bool (not eq_50))
(assert not__30)
(define-fun sub_10 () Int (- ys_out_pad_size1 1))
(define-fun mul_36 () Int (* ys_out_pad_stride1 sub_10))
(define-fun add_19 () Int (+ add_18 mul_36))
(define-fun mul_37 () Int (* 8 add_19))
(define-fun mul_38 () Int (* ys_out_pad_size0 ys_out_pad_size1))
(define-fun eq_51 () Bool (= mul_38 0))
(define-fun not__31 () Bool (not eq_51))
(assert not__31)
(define-fun eq_52 () Bool (= ys_out_pad_size1 1))
(define-fun not__32 () Bool (not eq_52))
(assert not__32)
(define-fun eq_53 () Bool (= ys_out_pad_stride1 1))
(assert eq_53)
(define-fun eq_54 () Bool (= ys_out_pad_size0 1))
(define-fun not__33 () Bool (not eq_54))
(assert not__33)
(define-fun eq_55 () Bool (= ys_out_pad_stride0 ys_out_pad_size1))
(assert eq_55)
(define-fun mul_39 () Int (* ys_out_pad_size1 ys_out_pad_size0))
(define-fun ge_14 () Bool (>= ys_out_pad_storage_offset 0))
(assert ge_14)
(define-fun add_20 () Int (+ ys_out_pad_storage_offset add_19))
(define-fun mul_40 () Int (* 8 add_20))
(declare-const non_pad_mask__base_size0 Int)
(set-info :example-non_pad_mask__base_size0 10)
(declare-const non_pad_mask__base_size1 Int)
(set-info :example-non_pad_mask__base_size1 22)
(declare-const non_pad_mask__base_stride0 Int)
(set-info :example-non_pad_mask__base_stride0 22)
(declare-const non_pad_mask__base_stride1 Int)
(set-info :example-non_pad_mask__base_stride1 1)
(declare-const non_pad_mask__base_storage_offset Int)
(set-info :example-non_pad_mask__base_storage_offset 0)
(define-fun ge_15 () Bool (>= non_pad_mask__base_size0 0))
(assert ge_15)
(define-fun ge_16 () Bool (>= non_pad_mask__base_size1 0))
(assert ge_16)
(define-fun eq_56 () Bool (= non_pad_mask__base_size0 0))
(define-fun not__34 () Bool (not eq_56))
(assert not__34)
(define-fun sub_11 () Int (- non_pad_mask__base_size0 1))
(define-fun mul_41 () Int (* non_pad_mask__base_stride0 sub_11))
(define-fun add_21 () Int (+ 1 mul_41))
(define-fun eq_57 () Bool (= non_pad_mask__base_size1 0))
(define-fun not__35 () Bool (not eq_57))
(assert not__35)
(define-fun sub_12 () Int (- non_pad_mask__base_size1 1))
(define-fun mul_42 () Int (* non_pad_mask__base_stride1 sub_12))
(define-fun add_22 () Int (+ add_21 mul_42))
(define-fun mul_43 () Int (* 4 add_22))
(define-fun mul_44 () Int (* non_pad_mask__base_size0 non_pad_mask__base_size1))
(define-fun eq_58 () Bool (= mul_44 0))
(define-fun not__36 () Bool (not eq_58))
(assert not__36)
(define-fun eq_59 () Bool (= non_pad_mask__base_size1 1))
(define-fun not__37 () Bool (not eq_59))
(assert not__37)
(define-fun eq_60 () Bool (= non_pad_mask__base_stride1 1))
(assert eq_60)
(define-fun eq_61 () Bool (= non_pad_mask__base_size0 1))
(define-fun not__38 () Bool (not eq_61))
(assert not__38)
(define-fun eq_62 () Bool (= non_pad_mask__base_stride0 non_pad_mask__base_size1))
(assert eq_62)
(define-fun mul_45 () Int (* non_pad_mask__base_size1 non_pad_mask__base_size0))
(define-fun ge_17 () Bool (>= non_pad_mask__base_storage_offset 0))
(assert ge_17)
(define-fun add_23 () Int (+ non_pad_mask__base_storage_offset add_22))
(define-fun mul_46 () Int (* 4 add_23))
(declare-const non_pad_mask_size0 Int)
(set-info :example-non_pad_mask_size0 10)
(declare-const non_pad_mask_size1 Int)
(set-info :example-non_pad_mask_size1 22)
(declare-const non_pad_mask_size2 Int)
(set-info :example-non_pad_mask_size2 1)
(declare-const non_pad_mask_stride0 Int)
(set-info :example-non_pad_mask_stride0 22)
(declare-const non_pad_mask_stride1 Int)
(set-info :example-non_pad_mask_stride1 1)
(declare-const non_pad_mask_stride2 Int)
(set-info :example-non_pad_mask_stride2 1)
(declare-const non_pad_mask_storage_offset Int)
(set-info :example-non_pad_mask_storage_offset 0)
(define-fun mul_47 () Int (* non_pad_mask_size0 non_pad_mask_size1))
(define-fun mul_48 () Int (* mul_47 non_pad_mask_size2))
(define-fun eq_63 () Bool (= mul_48 0))
(define-fun not__39 () Bool (not eq_63))
(assert not__39)
(define-fun eq_64 () Bool (= non_pad_mask_size2 1))
(assert eq_64)
(define-fun eq_65 () Bool (= non_pad_mask_size1 1))
(define-fun not__40 () Bool (not eq_65))
(assert not__40)
(define-fun eq_66 () Bool (= non_pad_mask_stride1 1))
(assert eq_66)
(define-fun eq_67 () Bool (= non_pad_mask_size0 1))
(define-fun not__41 () Bool (not eq_67))
(assert not__41)
(define-fun eq_68 () Bool (= non_pad_mask_stride0 non_pad_mask_size1))
(assert eq_68)
(define-fun mul_49 () Int (* non_pad_mask_size1 non_pad_mask_size0))
(declare-const slf_attn_mask_size0 Int)
(set-info :example-slf_attn_mask_size0 10)
(declare-const slf_attn_mask_size1 Int)
(set-info :example-slf_attn_mask_size1 22)
(declare-const slf_attn_mask_size2 Int)
(set-info :example-slf_attn_mask_size2 22)
(declare-const slf_attn_mask_stride0 Int)
(set-info :example-slf_attn_mask_stride0 484)
(declare-const slf_attn_mask_stride1 Int)
(set-info :example-slf_attn_mask_stride1 22)
(declare-const slf_attn_mask_stride2 Int)
(set-info :example-slf_attn_mask_stride2 1)
(declare-const slf_attn_mask_storage_offset Int)
(set-info :example-slf_attn_mask_storage_offset 0)
(define-fun ge_18 () Bool (>= slf_attn_mask_size0 0))
(assert ge_18)
(define-fun ge_19 () Bool (>= slf_attn_mask_size1 0))
(assert ge_19)
(define-fun ge_20 () Bool (>= slf_attn_mask_size2 0))
(assert ge_20)
(define-fun eq_69 () Bool (= slf_attn_mask_size0 0))
(define-fun not__42 () Bool (not eq_69))
(assert not__42)
(define-fun sub_13 () Int (- slf_attn_mask_size0 1))
(define-fun mul_50 () Int (* slf_attn_mask_stride0 sub_13))
(define-fun add_24 () Int (+ 1 mul_50))
(define-fun eq_70 () Bool (= slf_attn_mask_size1 0))
(define-fun not__43 () Bool (not eq_70))
(assert not__43)
(define-fun sub_14 () Int (- slf_attn_mask_size1 1))
(define-fun mul_51 () Int (* slf_attn_mask_stride1 sub_14))
(define-fun add_25 () Int (+ add_24 mul_51))
(define-fun eq_71 () Bool (= slf_attn_mask_size2 0))
(define-fun not__44 () Bool (not eq_71))
(assert not__44)
(define-fun sub_15 () Int (- slf_attn_mask_size2 1))
(define-fun mul_52 () Int (* slf_attn_mask_stride2 sub_15))
(define-fun add_26 () Int (+ add_25 mul_52))
(define-fun mul_53 () Int (* slf_attn_mask_size0 slf_attn_mask_size1))
(define-fun mul_54 () Int (* mul_53 slf_attn_mask_size2))
(define-fun eq_72 () Bool (= mul_54 0))
(define-fun not__45 () Bool (not eq_72))
(assert not__45)
(define-fun eq_73 () Bool (= slf_attn_mask_size2 1))
(define-fun not__46 () Bool (not eq_73))
(assert not__46)
(define-fun eq_74 () Bool (= slf_attn_mask_stride2 1))
(assert eq_74)
(define-fun eq_75 () Bool (= slf_attn_mask_size1 1))
(define-fun not__47 () Bool (not eq_75))
(assert not__47)
(define-fun eq_76 () Bool (= slf_attn_mask_stride1 slf_attn_mask_size2))
(assert eq_76)
(define-fun mul_55 () Int (* slf_attn_mask_size2 slf_attn_mask_size1))
(define-fun eq_77 () Bool (= slf_attn_mask_size0 1))
(define-fun not__48 () Bool (not eq_77))
(assert not__48)
(define-fun eq_78 () Bool (= slf_attn_mask_stride0 mul_55))
(assert eq_78)
(define-fun mul_56 () Int (* mul_55 slf_attn_mask_size0))
(define-fun ge_21 () Bool (>= slf_attn_mask_storage_offset 0))
(assert ge_21)
(define-fun add_27 () Int (+ slf_attn_mask_storage_offset add_26))
(declare-const dec_enc_attn_mask__base_size0 Int)
(set-info :example-dec_enc_attn_mask__base_size0 10)
(declare-const dec_enc_attn_mask__base_size1 Int)
(set-info :example-dec_enc_attn_mask__base_size1 204)
(declare-const dec_enc_attn_mask__base_stride0 Int)
(set-info :example-dec_enc_attn_mask__base_stride0 204)
(declare-const dec_enc_attn_mask__base_stride1 Int)
(set-info :example-dec_enc_attn_mask__base_stride1 1)
(declare-const dec_enc_attn_mask__base_storage_offset Int)
(set-info :example-dec_enc_attn_mask__base_storage_offset 0)
(define-fun ge_22 () Bool (>= dec_enc_attn_mask__base_size0 0))
(assert ge_22)
(define-fun ge_23 () Bool (>= dec_enc_attn_mask__base_size1 0))
(assert ge_23)
(define-fun eq_79 () Bool (= dec_enc_attn_mask__base_size0 0))
(define-fun not__49 () Bool (not eq_79))
(assert not__49)
(define-fun sub_16 () Int (- dec_enc_attn_mask__base_size0 1))
(define-fun mul_57 () Int (* dec_enc_attn_mask__base_stride0 sub_16))
(define-fun add_28 () Int (+ 1 mul_57))
(define-fun eq_80 () Bool (= dec_enc_attn_mask__base_size1 0))
(define-fun not__50 () Bool (not eq_80))
(assert not__50)
(define-fun sub_17 () Int (- dec_enc_attn_mask__base_size1 1))
(define-fun mul_58 () Int (* dec_enc_attn_mask__base_stride1 sub_17))
(define-fun add_29 () Int (+ add_28 mul_58))
(define-fun mul_59 () Int (* dec_enc_attn_mask__base_size0 dec_enc_attn_mask__base_size1))
(define-fun eq_81 () Bool (= mul_59 0))
(define-fun not__51 () Bool (not eq_81))
(assert not__51)
(define-fun eq_82 () Bool (= dec_enc_attn_mask__base_size1 1))
(define-fun not__52 () Bool (not eq_82))
(assert not__52)
(define-fun eq_83 () Bool (= dec_enc_attn_mask__base_stride1 1))
(assert eq_83)
(define-fun eq_84 () Bool (= dec_enc_attn_mask__base_size0 1))
(define-fun not__53 () Bool (not eq_84))
(assert not__53)
(define-fun eq_85 () Bool (= dec_enc_attn_mask__base_stride0 dec_enc_attn_mask__base_size1))
(assert eq_85)
(define-fun mul_60 () Int (* dec_enc_attn_mask__base_size1 dec_enc_attn_mask__base_size0))
(define-fun ge_24 () Bool (>= dec_enc_attn_mask__base_storage_offset 0))
(assert ge_24)
(define-fun add_30 () Int (+ dec_enc_attn_mask__base_storage_offset add_29))
(declare-const dec_enc_attn_mask_size0 Int)
(set-info :example-dec_enc_attn_mask_size0 10)
(declare-const dec_enc_attn_mask_size1 Int)
(set-info :example-dec_enc_attn_mask_size1 22)
(declare-const dec_enc_attn_mask_size2 Int)
(set-info :example-dec_enc_attn_mask_size2 204)
(declare-const dec_enc_attn_mask_stride0 Int)
(set-info :example-dec_enc_attn_mask_stride0 204)
(declare-const dec_enc_attn_mask_stride1 Int)
(set-info :example-dec_enc_attn_mask_stride1 0)
(declare-const dec_enc_attn_mask_stride2 Int)
(set-info :example-dec_enc_attn_mask_stride2 1)
(declare-const dec_enc_attn_mask_storage_offset Int)
(set-info :example-dec_enc_attn_mask_storage_offset 0)
(define-fun mul_61 () Int (* dec_enc_attn_mask_size0 dec_enc_attn_mask_size1))
(define-fun mul_62 () Int (* mul_61 dec_enc_attn_mask_size2))
(define-fun eq_86 () Bool (= mul_62 0))
(define-fun not__54 () Bool (not eq_86))
(assert not__54)
(define-fun eq_87 () Bool (= dec_enc_attn_mask_size2 1))
(define-fun not__55 () Bool (not eq_87))
(assert not__55)
(define-fun eq_88 () Bool (= dec_enc_attn_mask_stride2 1))
(assert eq_88)
(define-fun eq_89 () Bool (= dec_enc_attn_mask_size1 1))
(define-fun not__56 () Bool (not eq_89))
(assert not__56)
(define-fun eq_90 () Bool (= dec_enc_attn_mask_stride1 dec_enc_attn_mask_size2))
(define-fun not__57 () Bool (not eq_90))
(assert not__57)
(define-fun lt_4 () Bool (< dec_enc_attn_mask_size1 2))
(define-fun not__58 () Bool (not lt_4))
(assert not__58)
(define-fun lt_5 () Bool (< dec_enc_attn_mask_size0 2))
(define-fun not__59 () Bool (not lt_5))
(assert not__59)
(define-fun lt_6 () Bool (< dec_enc_attn_mask_stride1 dec_enc_attn_mask_stride0))
(assert lt_6)
(define-fun lt_7 () Bool (< dec_enc_attn_mask_size2 2))
(define-fun not__60 () Bool (not lt_7))
(assert not__60)
(define-fun lt_8 () Bool (< dec_enc_attn_mask_stride2 dec_enc_attn_mask_stride1))
(define-fun not__61 () Bool (not lt_8))
(assert not__61)
(define-fun lt_9 () Bool (< dec_enc_attn_mask_stride2 dec_enc_attn_mask_stride0))
(assert lt_9)
(define-fun eq_91 () Bool (= dec_enc_attn_mask_stride1 1))
(define-fun not__62 () Bool (not eq_91))
(assert not__62)
(define-fun lt_10 () Bool (< ___stack1_size2 0))
(define-fun not__63 () Bool (not lt_10))
(assert not__63)
(define-fun lt_11 () Bool (< ___stack1_size1 0))
(define-fun not__64 () Bool (not lt_11))
(assert not__64)
(define-fun lt_12 () Bool (< ___stack1_size0 0))
(define-fun not__65 () Bool (not lt_12))
(assert not__65)
(define-fun eq_92 () Bool (= ___stack1_size2 ___stack2_size2))
(assert eq_92)
(define-fun eq_93 () Bool (= ___stack1_size1 ___stack2_size1))
(assert eq_93)
(define-fun eq_94 () Bool (= ___stack2_size0 ___stack1_size0))
(define-fun not__66 () Bool (not eq_94))
(assert not__66)
(define-fun eq_95 () Bool (= ___stack1_size0 ___stack2_size0))
(define-fun not__67 () Bool (not eq_95))
(assert not__67)
(define-fun eq_96 () Bool (= ___stack1_size0 -1))
(define-fun not__68 () Bool (not eq_96))
(assert not__68)
(define-fun eq_97 () Bool (= ___stack1_size1 -1))
(define-fun not__69 () Bool (not eq_97))
(assert not__69)
(define-fun eq_98 () Bool (= ___stack1_size2 -1))
(define-fun not__70 () Bool (not eq_98))
(assert not__70)
(define-fun eq_99 () Bool (= ___stack2_size1 ___stack1_size1))
(assert eq_99)
(define-fun eq_100 () Bool (= ___stack2_size2 ___stack1_size2))
(assert eq_100)
(define-fun eq_101 () Bool (= ___stack2_stride1 ___stack1_size2))
(assert eq_101)
(define-fun eq_102 () Bool (= 0 mul_6))
(define-fun not__71 () Bool (not eq_102))
(assert not__71)
(define-fun lt_13 () Bool (< ___stack1_size1 2))
(define-fun not__72 () Bool (not lt_13))
(assert not__72)
(define-fun lt_14 () Bool (< ___stack1_size0 2))
(define-fun not__73 () Bool (not lt_14))
(assert not__73)
(define-fun lt_15 () Bool (< ___stack2_stride1 0))
(define-fun not__74 () Bool (not lt_15))
(assert not__74)
(define-fun lt_16 () Bool (< ___stack1_size2 2))
(define-fun not__75 () Bool (not lt_16))
(assert not__75)
(define-fun lt_17 () Bool (< ___stack2_stride2 0))
(define-fun not__76 () Bool (not lt_17))
(assert not__76)
(define-fun lt_18 () Bool (< ___stack2_stride2 ___stack2_stride1))
(assert lt_18)
(define-fun eq_103 () Bool (= mul_4 -1))
(define-fun not__77 () Bool (not eq_103))
(assert not__77)
(define-fun ge_25 () Bool (>= mul_4 0))
(assert ge_25)
(define-fun eq_104 () Bool (= mul_5 mul_5))
(assert eq_104)
(define-fun eq_105 () Bool (= ___stack1_size0 mul_4))
(define-fun not__78 () Bool (not eq_105))
(assert not__78)
(define-fun eq_106 () Bool (= mul_4 ___stack1_size0))
(define-fun not__79 () Bool (not eq_106))
(assert not__79)
(define-fun mod () Int (mod ___stack1_size0 mul_4))
(define-fun eq_107 () Bool (= mod 0))
(define-fun not__80 () Bool (not eq_107))
(assert not__80)
(define-fun mod_1 () Int (mod mul_4 mul_4))
(define-fun eq_108 () Bool (= mod_1 0))
(assert eq_108)
(define-fun mul_63 () Int (* ___stack1_size1 ___stack1_size0))
(define-fun lt_19 () Bool (< mul_6 ___stack1_size2))
(define-fun not__81 () Bool (not lt_19))
(assert not__81)
(define-fun gt () Bool (> mul_5 0))
(assert gt)
(define-fun mul_64 () Int (* mul_63 ___stack1_size2))
(define-fun eq_109 () Bool (= mul_64 0))
(define-fun not__82 () Bool (not eq_109))
(assert not__82)
(define-fun eq_110 () Bool (= mul_63 1))
(define-fun not__83 () Bool (not eq_110))
(assert not__83)
(define-fun mul_65 () Int (* ___stack1_size2 mul_63))
(define-fun eq_111 () Bool (= mul_4 mul_4))
(assert eq_111)
(define-fun eq_112 () Bool (= ___stack1_size2 512))
(assert eq_112)
(define-fun ge_26 () Bool (>= mul_63 0))
(assert ge_26)
(define-fun eq_113 () Bool (= mul_63 0))
(define-fun not__84 () Bool (not eq_113))
(assert not__84)
(define-fun mul_66 () Int (* 512 mul_63))
(define-fun sub_18 () Int (- mul_63 1))
(define-fun mul_67 () Int (* 512 sub_18))
(define-fun add_31 () Int (+ 1 mul_67))
(define-fun add_32 () Int (+ add_31 511))
(define-fun mul_68 () Int (* 4 add_32))
(define-fun mul_69 () Int (* mul_63 512))
(define-fun eq_114 () Bool (= mul_69 0))
(define-fun not__85 () Bool (not eq_114))
(assert not__85)
(define-fun lt_20 () Bool (< mul_63 0))
(define-fun not__86 () Bool (not lt_20))
(assert not__86)
(define-fun eq_115 () Bool (= mul_63 mul_63))
(assert eq_115)
(define-fun lt_21 () Bool (< mul_63 2))
(define-fun not__87 () Bool (not lt_21))
(assert not__87)
(define-fun mul_70 () Int (* mul_4 512))
(define-fun eq_116 () Bool (= mul_69 mul_70))
(assert eq_116)
(define-fun eq_117 () Bool (= mul_63 ___stack1_size0))
(define-fun not__88 () Bool (not eq_117))
(assert not__88)
(define-fun eq_118 () Bool (= ___stack1_size0 mul_63))
(define-fun not__89 () Bool (not eq_118))
(assert not__89)
(define-fun mod_2 () Int (mod mul_63 ___stack1_size0))
(define-fun eq_119 () Bool (= mod_2 0))
(assert eq_119)
(define-fun floordiv () Int (div mul_63 ___stack1_size0))
(define-fun mul_71 () Int (* 512 floordiv))
(define-fun mul_72 () Int (* ___stack1_size0 floordiv))
(define-fun mul_73 () Int (* mul_72 512))
(define-fun eq_120 () Bool (= mul_73 0))
(define-fun not__90 () Bool (not eq_120))
(assert not__90)
(define-fun eq_121 () Bool (= floordiv 1))
(define-fun not__91 () Bool (not eq_121))
(assert not__91)
(define-fun eq_122 () Bool (= mul_71 mul_71))
(assert eq_122)
(define-fun mul_74 () Int (* mul_71 ___stack1_size0))
(define-fun eq_123 () Bool (= ___stack1_size1 floordiv))
(assert eq_123)
(define-fun mul_75 () Int (* mul_4 8))
(define-fun mul_76 () Int (* mul_75 64))
(define-fun eq_124 () Bool (= mul_73 mul_76))
(assert eq_124)
(define-fun eq_125 () Bool (= floordiv ___stack1_size1))
(assert eq_125)
(define-fun mul_77 () Int (* mul_72 8))
(define-fun mul_78 () Int (* mul_77 64))
(define-fun eq_126 () Bool (= mul_78 0))
(define-fun not__92 () Bool (not eq_126))
(assert not__92)
(define-fun eq_127 () Bool (= floordiv 0))
(define-fun not__93 () Bool (not eq_127))
(assert not__93)
(define-fun gt_1 () Bool (> floordiv 1))
(assert gt_1)
(define-fun lt_22 () Bool (< 1 mul_71))
(assert lt_22)
(define-fun mul_79 () Int (* 8 ___stack1_size0))
(define-fun mul_80 () Int (* mul_79 floordiv))
(define-fun mul_81 () Int (* mul_80 64))
(define-fun eq_128 () Bool (= mul_81 0))
(define-fun not__94 () Bool (not eq_128))
(assert not__94)
(define-fun eq_129 () Bool (= mul_71 1))
(define-fun not__95 () Bool (not eq_129))
(assert not__95)
(define-fun lt_23 () Bool (< mul_71 64))
(define-fun not__96 () Bool (not lt_23))
(assert not__96)
(define-fun lt_24 () Bool (< floordiv 2))
(define-fun not__97 () Bool (not lt_24))
(assert not__97)
(define-fun lt_25 () Bool (< 512 mul_71))
(assert lt_25)
(define-fun eq_130 () Bool (= mul_71 0))
(define-fun not__98 () Bool (not eq_130))
(assert not__98)
(define-fun lt_26 () Bool (< mul_71 0))
(define-fun not__99 () Bool (not lt_26))
(assert not__99)
(define-fun gt_2 () Bool (> ___stack1_size0 1))
(assert gt_2)
(define-fun lt_27 () Bool (< 1 mul_74))
(assert lt_27)
(define-fun ge_27 () Bool (>= floordiv 0))
(assert ge_27)
(define-fun mul_82 () Int (* 64 floordiv))
(define-fun mul_83 () Int (* mul_82 ___stack1_size0))
(define-fun mul_84 () Int (* mul_83 8))
(define-fun mul_85 () Int (* mul_83 7))
(define-fun add_33 () Int (+ 1 mul_85))
(define-fun mul_86 () Int (* mul_82 sub))
(define-fun add_34 () Int (+ add_33 mul_86))
(define-fun sub_19 () Int (- floordiv 1))
(define-fun mul_87 () Int (* 64 sub_19))
(define-fun add_35 () Int (+ add_34 mul_87))
(define-fun add_36 () Int (+ add_35 63))
(define-fun mul_88 () Int (* 4 add_36))
(define-fun eq_131 () Bool (= mul_82 mul_82))
(assert eq_131)
(define-fun eq_132 () Bool (= mul_83 mul_83))
(assert eq_132)
(define-fun eq_133 () Bool (= mul_82 1))
(define-fun not__100 () Bool (not eq_133))
(assert not__100)
(define-fun eq_134 () Bool (= mul_82 0))
(define-fun not__101 () Bool (not eq_134))
(assert not__101)
(define-fun lt_28 () Bool (< mul_82 0))
(define-fun not__102 () Bool (not lt_28))
(assert not__102)
(define-fun lt_29 () Bool (< 1 mul_83))
(assert lt_29)
(define-fun mul_89 () Int (* ___stack1_size1 64))
(define-fun eq_135 () Bool (= mul_81 mul_89))
(define-fun not__103 () Bool (not eq_135))
(assert not__103)
(define-fun gt_3 () Bool (> mul_89 0))
(assert gt_3)
(define-fun mod_3 () Int (mod mul_81 mul_89))
(define-fun eq_136 () Bool (= mod_3 0))
(assert eq_136)
(define-fun eq_137 () Bool (= mul_89 0))
(define-fun not__104 () Bool (not eq_137))
(assert not__104)
(define-fun floordiv_1 () Int (div mul_81 mul_89))
(define-fun eq_138 () Bool (= floordiv_1 8))
(define-fun not__105 () Bool (not eq_138))
(assert not__105)
(define-fun mod_4 () Int (mod 8 floordiv_1))
(define-fun eq_139 () Bool (= mod_4 0))
(define-fun not__106 () Bool (not eq_139))
(assert not__106)
(define-fun mod_5 () Int (mod mul_79 floordiv_1))
(define-fun eq_140 () Bool (= mod_5 0))
(assert eq_140)
(define-fun mul_90 () Int (* ___stack1_size0 8))
(define-fun lt_30 () Bool (< mul_83 mul_82))
(define-fun not__107 () Bool (not lt_30))
(assert not__107)
(define-fun gt_4 () Bool (> mul_81 0))
(assert gt_4)
(define-fun mul_91 () Int (* mul_90 floordiv))
(define-fun mul_92 () Int (* mul_91 64))
(define-fun eq_141 () Bool (= mul_92 0))
(define-fun not__108 () Bool (not eq_141))
(assert not__108)
(define-fun eq_142 () Bool (= mul_90 1))
(define-fun not__109 () Bool (not eq_142))
(assert not__109)
(define-fun mul_93 () Int (* mul_82 mul_90))
(define-fun eq_143 () Bool (= mul_79 floordiv_1))
(assert eq_143)
(define-fun mul_94 () Int (* slf_attn_mask_size0 8))
(define-fun ge_28 () Bool (>= mul_94 0))
(assert ge_28)
(define-fun eq_144 () Bool (= mul_94 0))
(define-fun not__110 () Bool (not eq_144))
(assert not__110)
(define-fun mul_95 () Int (* mul_55 mul_94))
(define-fun sub_20 () Int (- mul_94 1))
(define-fun mul_96 () Int (* mul_55 sub_20))
(define-fun add_37 () Int (+ 1 mul_96))
(define-fun mul_97 () Int (* slf_attn_mask_size2 sub_14))
(define-fun add_38 () Int (+ add_37 mul_97))
(define-fun add_39 () Int (+ add_38 sub_15))
(define-fun mul_98 () Int (* mul_94 slf_attn_mask_size1))
(define-fun mul_99 () Int (* mul_98 slf_attn_mask_size2))
(define-fun eq_145 () Bool (= mul_99 0))
(define-fun not__111 () Bool (not eq_145))
(assert not__111)
(define-fun eq_146 () Bool (= slf_attn_mask_size2 slf_attn_mask_size2))
(assert eq_146)
(define-fun eq_147 () Bool (= mul_94 1))
(define-fun not__112 () Bool (not eq_147))
(assert not__112)
(define-fun eq_148 () Bool (= mul_55 mul_55))
(assert eq_148)
(define-fun mul_100 () Int (* mul_90 64))
(define-fun mul_101 () Int (* mul_100 floordiv))
(define-fun eq_149 () Bool (= mul_101 0))
(define-fun not__113 () Bool (not eq_149))
(assert not__113)
(define-fun lt_31 () Bool (< mul_90 2))
(define-fun not__114 () Bool (not lt_31))
(assert not__114)
(define-fun lt_32 () Bool (< 1 mul_82))
(assert lt_32)
(define-fun lt_33 () Bool (< 64 mul_82))
(assert lt_33)
(define-fun eq_150 () Bool (= mul_90 mul_90))
(assert eq_150)
(define-fun ge_29 () Bool (>= mul_90 0))
(assert ge_29)
(define-fun mul_102 () Int (* floordiv floordiv))
(define-fun eq_151 () Bool (= mul_90 0))
(define-fun not__115 () Bool (not eq_151))
(assert not__115)
(define-fun mul_103 () Int (* mul_102 mul_90))
(define-fun sub_21 () Int (- mul_90 1))
(define-fun mul_104 () Int (* mul_102 sub_21))
(define-fun add_40 () Int (+ 1 mul_104))
(define-fun mul_105 () Int (* floordiv sub_19))
(define-fun add_41 () Int (+ add_40 mul_105))
(define-fun add_42 () Int (+ add_41 sub_19))
(define-fun mul_106 () Int (* 4 add_42))
(define-fun mul_107 () Int (* mul_91 floordiv))
(define-fun eq_152 () Bool (= mul_107 0))
(define-fun not__116 () Bool (not eq_152))
(assert not__116)
(define-fun eq_153 () Bool (= floordiv floordiv))
(assert eq_153)
(define-fun eq_154 () Bool (= mul_102 mul_102))
(assert eq_154)
(declare-const self_layer_stack_0__slf_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_0__slf_attn_attention_temperature_storage_offset 0)
(define-fun ge_30 () Bool (>= self_layer_stack_0__slf_attn_attention_temperature_storage_offset 0))
(assert ge_30)
(define-fun add_43 () Int (+ self_layer_stack_0__slf_attn_attention_temperature_storage_offset 1))
(define-fun mul_108 () Int (* 8 add_43))
(define-fun lt_34 () Bool (< floordiv 0))
(define-fun not__117 () Bool (not lt_34))
(assert not__117)
(define-fun lt_35 () Bool (< mul_90 0))
(define-fun not__118 () Bool (not lt_35))
(assert not__118)
(define-fun eq_155 () Bool (= mul_102 0))
(define-fun not__119 () Bool (not eq_155))
(assert not__119)
(define-fun lt_36 () Bool (< floordiv mul_102))
(assert lt_36)
(define-fun lt_37 () Bool (< slf_attn_mask_size2 0))
(define-fun not__120 () Bool (not lt_37))
(assert not__120)
(define-fun lt_38 () Bool (< slf_attn_mask_size1 0))
(define-fun not__121 () Bool (not lt_38))
(assert not__121)
(define-fun lt_39 () Bool (< mul_94 0))
(define-fun not__122 () Bool (not lt_39))
(assert not__122)
(define-fun eq_156 () Bool (= slf_attn_mask_size2 floordiv))
(assert eq_156)
(define-fun eq_157 () Bool (= slf_attn_mask_size1 floordiv))
(assert eq_157)
(define-fun eq_158 () Bool (= mul_94 mul_90))
(assert eq_158)
(define-fun eq_159 () Bool (= mul_94 mul_94))
(assert eq_159)
(define-fun eq_160 () Bool (= slf_attn_mask_size1 slf_attn_mask_size1))
(assert eq_160)
(define-fun eq_161 () Bool (= mul_90 mul_94))
(assert eq_161)
(define-fun eq_162 () Bool (= floordiv slf_attn_mask_size1))
(assert eq_162)
(define-fun eq_163 () Bool (= floordiv slf_attn_mask_size2))
(assert eq_163)
(define-fun gt_5 () Bool (> slf_attn_mask_size2 1))
(assert gt_5)
(define-fun eq_164 () Bool (= mul_55 0))
(define-fun not__123 () Bool (not eq_164))
(assert not__123)
(define-fun lt_40 () Bool (< slf_attn_mask_size2 mul_55))
(assert lt_40)
(define-fun mul_109 () Int (* 4 add_39))
(define-fun eq_165 () Bool (= slf_attn_mask_size2 22))
(assert eq_165)
(define-fun mul_110 () Int (* slf_attn_mask_size1 mul_94))
(define-fun mul_111 () Int (* slf_attn_mask_size1 sub_20))
(define-fun add_44 () Int (+ 1 mul_111))
(define-fun add_45 () Int (+ add_44 sub_14))
(define-fun mul_112 () Int (* 4 add_45))
(define-fun eq_166 () Bool (= mul_98 0))
(define-fun not__124 () Bool (not eq_166))
(assert not__124)
(define-fun eq_167 () Bool (= mul_94 -1))
(define-fun not__125 () Bool (not eq_167))
(assert not__125)
(define-fun eq_168 () Bool (= slf_attn_mask_size1 -1))
(define-fun not__126 () Bool (not eq_168))
(assert not__126)
(define-fun eq_169 () Bool (= slf_attn_mask_size2 -1))
(define-fun not__127 () Bool (not eq_169))
(assert not__127)
(define-fun lt_41 () Bool (< slf_attn_mask_size1 2))
(define-fun not__128 () Bool (not lt_41))
(assert not__128)
(define-fun lt_42 () Bool (< mul_94 2))
(define-fun not__129 () Bool (not lt_42))
(assert not__129)
(define-fun lt_43 () Bool (< 1 slf_attn_mask_size1))
(assert lt_43)
(define-fun lt_44 () Bool (< slf_attn_mask_size2 2))
(define-fun not__130 () Bool (not lt_44))
(assert not__130)
(define-fun eq_170 () Bool (= mul_99 mul_99))
(assert eq_170)
(define-fun mul_113 () Int (* 64 slf_attn_mask_size1))
(define-fun mul_114 () Int (* mul_113 mul_94))
(define-fun mul_115 () Int (* mul_113 sub_20))
(define-fun add_46 () Int (+ 1 mul_115))
(define-fun mul_116 () Int (* 64 sub_14))
(define-fun add_47 () Int (+ add_46 mul_116))
(define-fun add_48 () Int (+ add_47 63))
(define-fun mul_117 () Int (* 4 add_48))
(define-fun mul_118 () Int (* mul_98 64))
(define-fun eq_171 () Bool (= mul_118 0))
(define-fun not__131 () Bool (not eq_171))
(assert not__131)
(define-fun eq_172 () Bool (= mul_113 mul_113))
(assert eq_172)
(define-fun mul_119 () Int (* mul_79 ___stack1_size1))
(define-fun mul_120 () Int (* mul_119 64))
(define-fun eq_173 () Bool (= mul_118 mul_120))
(assert eq_173)
(define-fun eq_174 () Bool (= mul_94 8))
(define-fun not__132 () Bool (not eq_174))
(assert not__132)
(define-fun mod_6 () Int (mod mul_94 8))
(define-fun eq_175 () Bool (= mod_6 0))
(assert eq_175)
(define-fun floordiv_2 () Int (div mul_94 8))
(define-fun mul_121 () Int (* mul_113 floordiv_2))
(define-fun mul_122 () Int (* 8 floordiv_2))
(define-fun mul_123 () Int (* mul_122 slf_attn_mask_size1))
(define-fun mul_124 () Int (* mul_123 64))
(define-fun eq_176 () Bool (= mul_124 0))
(define-fun not__133 () Bool (not eq_176))
(assert not__133)
(define-fun eq_177 () Bool (= floordiv_2 1))
(define-fun not__134 () Bool (not eq_177))
(assert not__134)
(define-fun eq_178 () Bool (= mul_121 mul_121))
(assert eq_178)
(define-fun mul_125 () Int (* mul_121 8))
(define-fun eq_179 () Bool (= mul_113 1))
(define-fun not__135 () Bool (not eq_179))
(assert not__135)
(define-fun eq_180 () Bool (= mul_113 0))
(define-fun not__136 () Bool (not eq_180))
(assert not__136)
(define-fun eq_181 () Bool (= floordiv_2 0))
(define-fun not__137 () Bool (not eq_181))
(assert not__137)
(define-fun lt_45 () Bool (< mul_113 0))
(define-fun not__138 () Bool (not lt_45))
(assert not__138)
(define-fun gt_6 () Bool (> floordiv_2 1))
(assert gt_6)
(define-fun lt_46 () Bool (< 1 mul_121))
(assert lt_46)
(define-fun eq_182 () Bool (= ___stack1_size0 floordiv_2))
(assert eq_182)
(define-fun eq_183 () Bool (= ___stack1_size1 slf_attn_mask_size1))
(assert eq_183)
(define-fun mul_126 () Int (* floordiv_2 slf_attn_mask_size1))
(define-fun mul_127 () Int (* mul_126 8))
(define-fun mul_128 () Int (* mul_127 64))
(define-fun eq_184 () Bool (= mul_128 0))
(define-fun not__139 () Bool (not eq_184))
(assert not__139)
(define-fun eq_185 () Bool (= mul_121 64))
(define-fun not__140 () Bool (not eq_185))
(assert not__140)
(define-fun lt_47 () Bool (< floordiv_2 2))
(define-fun not__141 () Bool (not lt_47))
(assert not__141)
(define-fun lt_48 () Bool (< 64 mul_113))
(assert lt_48)
(define-fun lt_49 () Bool (< mul_121 64))
(define-fun not__142 () Bool (not lt_49))
(assert not__142)
(define-fun lt_50 () Bool (< mul_121 mul_113))
(define-fun not__143 () Bool (not lt_50))
(assert not__143)
(define-fun gt_7 () Bool (> slf_attn_mask_size1 1))
(assert gt_7)
(define-fun lt_51 () Bool (< 1 mul_113))
(assert lt_51)
(define-fun ge_31 () Bool (>= floordiv_2 0))
(assert ge_31)
(define-fun mul_129 () Int (* 512 slf_attn_mask_size1))
(define-fun mul_130 () Int (* mul_129 floordiv_2))
(define-fun sub_22 () Int (- floordiv_2 1))
(define-fun mul_131 () Int (* mul_129 sub_22))
(define-fun add_49 () Int (+ 1 mul_131))
(define-fun mul_132 () Int (* 512 sub_14))
(define-fun add_50 () Int (+ add_49 mul_132))
(define-fun add_51 () Int (+ add_50 448))
(define-fun add_52 () Int (+ add_51 63))
(define-fun mul_133 () Int (* 4 add_52))
(define-fun eq_186 () Bool (= mul_129 mul_129))
(assert eq_186)
(define-fun lt_52 () Bool (< 1 mul_129))
(assert lt_52)
(define-fun eq_187 () Bool (= mul_128 mul_4))
(define-fun not__144 () Bool (not eq_187))
(assert not__144)
(define-fun gt_8 () Bool (> mul_4 0))
(assert gt_8)
(define-fun mod_7 () Int (mod mul_128 mul_4))
(define-fun eq_188 () Bool (= mod_7 0))
(assert eq_188)
(define-fun eq_189 () Bool (= mul_4 0))
(define-fun not__145 () Bool (not eq_189))
(assert not__145)
(define-fun floordiv_3 () Int (div mul_128 mul_4))
(define-fun eq_190 () Bool (= floordiv_2 ___stack1_size0))
(assert eq_190)
(define-fun eq_191 () Bool (= slf_attn_mask_size1 ___stack1_size1))
(assert eq_191)
(define-fun eq_192 () Bool (= floordiv_3 8))
(define-fun not__146 () Bool (not eq_192))
(assert not__146)
(define-fun mod_8 () Int (mod 8 floordiv_3))
(define-fun eq_193 () Bool (= mod_8 0))
(define-fun not__147 () Bool (not eq_193))
(assert not__147)
(define-fun mod_9 () Int (mod 512 floordiv_3))
(define-fun eq_194 () Bool (= mod_9 0))
(assert eq_194)
(define-fun gt_9 () Bool (> mul_128 0))
(assert gt_9)
(define-fun mul_134 () Int (* mul_126 512))
(define-fun eq_195 () Bool (= mul_134 0))
(define-fun not__148 () Bool (not eq_195))
(assert not__148)
(define-fun eq_196 () Bool (= floordiv_3 512))
(assert eq_196)
(define-fun eq_197 () Bool (= mul_126 -1))
(define-fun not__149 () Bool (not eq_197))
(assert not__149)
(define-fun ge_32 () Bool (>= mul_126 0))
(assert ge_32)
(define-fun eq_198 () Bool (= mul_134 mul_134))
(assert eq_198)
(define-fun eq_199 () Bool (= floordiv_2 mul_126))
(define-fun not__150 () Bool (not eq_199))
(assert not__150)
(define-fun eq_200 () Bool (= mul_126 floordiv_2))
(define-fun not__151 () Bool (not eq_200))
(assert not__151)
(define-fun mod_10 () Int (mod floordiv_2 mul_126))
(define-fun eq_201 () Bool (= mod_10 0))
(define-fun not__152 () Bool (not eq_201))
(assert not__152)
(define-fun mod_11 () Int (mod mul_126 mul_126))
(define-fun eq_202 () Bool (= mod_11 0))
(assert eq_202)
(define-fun mul_135 () Int (* slf_attn_mask_size1 floordiv_2))
(define-fun lt_53 () Bool (< mul_129 512))
(define-fun not__153 () Bool (not lt_53))
(assert not__153)
(define-fun gt_10 () Bool (> mul_134 0))
(assert gt_10)
(define-fun mul_136 () Int (* mul_135 512))
(define-fun eq_203 () Bool (= mul_136 0))
(define-fun not__154 () Bool (not eq_203))
(assert not__154)
(define-fun eq_204 () Bool (= mul_135 1))
(define-fun not__155 () Bool (not eq_204))
(assert not__155)
(define-fun mul_137 () Int (* 512 mul_135))
(define-fun eq_205 () Bool (= mul_126 mul_126))
(assert eq_205)
(define-fun ge_33 () Bool (>= mul_135 0))
(assert ge_33)
(define-fun eq_206 () Bool (= mul_135 0))
(define-fun not__156 () Bool (not eq_206))
(assert not__156)
(define-fun sub_23 () Int (- mul_135 1))
(define-fun mul_138 () Int (* 512 sub_23))
(define-fun add_53 () Int (+ 1 mul_138))
(define-fun add_54 () Int (+ add_53 511))
(define-fun mul_139 () Int (* 4 add_54))
(define-fun lt_54 () Bool (< mul_135 0))
(define-fun not__157 () Bool (not lt_54))
(assert not__157)
(define-fun eq_207 () Bool (= mul_135 mul_135))
(assert eq_207)
(define-fun lt_55 () Bool (< mul_135 2))
(define-fun not__158 () Bool (not lt_55))
(assert not__158)
(define-fun eq_208 () Bool (= floordiv_2 -1))
(define-fun not__159 () Bool (not eq_208))
(assert not__159)
(define-fun eq_209 () Bool (= mul_136 mul_134))
(assert eq_209)
(define-fun eq_210 () Bool (= mul_135 floordiv_2))
(define-fun not__160 () Bool (not eq_210))
(assert not__160)
(define-fun eq_211 () Bool (= floordiv_2 mul_135))
(define-fun not__161 () Bool (not eq_211))
(assert not__161)
(define-fun mod_12 () Int (mod mul_135 floordiv_2))
(define-fun eq_212 () Bool (= mod_12 0))
(assert eq_212)
(define-fun floordiv_4 () Int (div mul_135 floordiv_2))
(define-fun mul_140 () Int (* 512 floordiv_4))
(define-fun mul_141 () Int (* floordiv_2 floordiv_4))
(define-fun mul_142 () Int (* mul_141 512))
(define-fun eq_213 () Bool (= mul_142 0))
(define-fun not__162 () Bool (not eq_213))
(assert not__162)
(define-fun eq_214 () Bool (= floordiv_4 1))
(define-fun not__163 () Bool (not eq_214))
(assert not__163)
(define-fun eq_215 () Bool (= mul_140 mul_140))
(assert eq_215)
(define-fun mul_143 () Int (* mul_140 floordiv_2))
(define-fun eq_216 () Bool (= slf_attn_mask_size1 floordiv_4))
(assert eq_216)
(define-fun lt_56 () Bool (< floordiv_4 0))
(define-fun not__164 () Bool (not lt_56))
(assert not__164)
(define-fun lt_57 () Bool (< floordiv_2 0))
(define-fun not__165 () Bool (not lt_57))
(assert not__165)
(define-fun eq_217 () Bool (= floordiv_4 ___stack1_size1))
(assert eq_217)
(define-fun eq_218 () Bool (= floordiv_2 floordiv_2))
(assert eq_218)
(define-fun eq_219 () Bool (= floordiv_4 floordiv_4))
(assert eq_219)
(define-fun eq_220 () Bool (= ___stack1_size1 floordiv_4))
(assert eq_220)
(define-fun eq_221 () Bool (= mul_140 0))
(define-fun not__166 () Bool (not eq_221))
(assert not__166)
(define-fun gt_11 () Bool (> mul_140 512))
(assert gt_11)
(define-fun ge_34 () Bool (>= floordiv_4 0))
(assert ge_34)
(define-fun eq_222 () Bool (= floordiv_4 0))
(define-fun not__167 () Bool (not eq_222))
(assert not__167)
(define-fun mul_144 () Int (* mul_140 sub_22))
(define-fun add_55 () Int (+ 1 mul_144))
(define-fun sub_24 () Int (- floordiv_4 1))
(define-fun mul_145 () Int (* 512 sub_24))
(define-fun add_56 () Int (+ add_55 mul_145))
(define-fun add_57 () Int (+ add_56 511))
(define-fun mul_146 () Int (* 4 add_57))
(define-fun mul_147 () Int (* floordiv_4 floordiv_2))
(define-fun mul_148 () Int (* floordiv_4 sub_22))
(define-fun add_58 () Int (+ 1 mul_148))
(define-fun add_59 () Int (+ add_58 sub_24))
(define-fun mul_149 () Int (* 4 add_59))
(define-fun eq_223 () Bool (= mul_141 0))
(define-fun not__168 () Bool (not eq_223))
(assert not__168)
(define-fun lt_58 () Bool (< floordiv_4 1))
(define-fun not__169 () Bool (not lt_58))
(assert not__169)
(define-fun gt_12 () Bool (> floordiv_4 1))
(assert gt_12)
(define-fun eq_224 () Bool (= floordiv_4 -1))
(define-fun not__170 () Bool (not eq_224))
(assert not__170)
(define-fun lt_59 () Bool (< floordiv_4 2))
(define-fun not__171 () Bool (not lt_59))
(assert not__171)
(define-fun lt_60 () Bool (< 1 floordiv_4))
(assert lt_60)
(define-fun eq_225 () Bool (= mul_141 -1))
(define-fun not__172 () Bool (not eq_225))
(assert not__172)
(define-fun ge_35 () Bool (>= mul_141 0))
(assert ge_35)
(define-fun eq_226 () Bool (= mul_142 mul_142))
(assert eq_226)
(define-fun eq_227 () Bool (= floordiv_2 mul_141))
(define-fun not__173 () Bool (not eq_227))
(assert not__173)
(define-fun eq_228 () Bool (= mul_141 floordiv_2))
(define-fun not__174 () Bool (not eq_228))
(assert not__174)
(define-fun mod_13 () Int (mod floordiv_2 mul_141))
(define-fun eq_229 () Bool (= mod_13 0))
(define-fun not__175 () Bool (not eq_229))
(assert not__175)
(define-fun mod_14 () Int (mod mul_141 mul_141))
(define-fun eq_230 () Bool (= mod_14 0))
(assert eq_230)
(define-fun lt_61 () Bool (< mul_140 512))
(define-fun not__176 () Bool (not lt_61))
(assert not__176)
(define-fun gt_13 () Bool (> mul_142 0))
(assert gt_13)
(define-fun mul_150 () Int (* mul_147 512))
(define-fun eq_231 () Bool (= mul_150 0))
(define-fun not__177 () Bool (not eq_231))
(assert not__177)
(define-fun eq_232 () Bool (= mul_147 1))
(define-fun not__178 () Bool (not eq_232))
(assert not__178)
(define-fun mul_151 () Int (* 512 mul_147))
(define-fun eq_233 () Bool (= mul_141 mul_141))
(assert eq_233)
(define-fun ge_36 () Bool (>= mul_147 0))
(assert ge_36)
(define-fun eq_234 () Bool (= mul_147 0))
(define-fun not__179 () Bool (not eq_234))
(assert not__179)
(define-fun sub_25 () Int (- mul_147 1))
(define-fun mul_152 () Int (* 512 sub_25))
(define-fun add_60 () Int (+ 1 mul_152))
(define-fun add_61 () Int (+ add_60 511))
(define-fun mul_153 () Int (* 4 add_61))
(define-fun lt_62 () Bool (< mul_147 0))
(define-fun not__180 () Bool (not lt_62))
(assert not__180)
(define-fun eq_235 () Bool (= mul_147 mul_147))
(assert eq_235)
(define-fun lt_63 () Bool (< mul_147 2))
(define-fun not__181 () Bool (not lt_63))
(assert not__181)
(define-fun eq_236 () Bool (= mul_150 mul_142))
(assert eq_236)
(define-fun eq_237 () Bool (= mul_147 floordiv_2))
(define-fun not__182 () Bool (not eq_237))
(assert not__182)
(define-fun eq_238 () Bool (= floordiv_2 mul_147))
(define-fun not__183 () Bool (not eq_238))
(assert not__183)
(define-fun mod_15 () Int (mod mul_147 floordiv_2))
(define-fun eq_239 () Bool (= mod_15 0))
(assert eq_239)
(define-fun floordiv_5 () Int (div mul_147 floordiv_2))
(define-fun mul_154 () Int (* 512 floordiv_5))
(define-fun mul_155 () Int (* floordiv_2 floordiv_5))
(define-fun mul_156 () Int (* mul_155 512))
(define-fun eq_240 () Bool (= mul_156 0))
(define-fun not__184 () Bool (not eq_240))
(assert not__184)
(define-fun eq_241 () Bool (= floordiv_5 1))
(define-fun not__185 () Bool (not eq_241))
(assert not__185)
(define-fun eq_242 () Bool (= mul_154 mul_154))
(assert eq_242)
(define-fun mul_157 () Int (* mul_154 floordiv_2))
(define-fun eq_243 () Bool (= floordiv_4 floordiv_5))
(assert eq_243)
(define-fun eq_244 () Bool (= encoder_padded_outputs_size0 -1))
(define-fun not__186 () Bool (not eq_244))
(assert not__186)
(define-fun mul_158 () Int (* encoder_padded_outputs_size0 floordiv_4))
(define-fun mul_159 () Int (* mul_158 8))
(define-fun mul_160 () Int (* mul_159 64))
(define-fun eq_245 () Bool (= mul_156 mul_160))
(assert eq_245)
(define-fun eq_246 () Bool (= floordiv_2 encoder_padded_outputs_size0))
(assert eq_246)
(define-fun eq_247 () Bool (= floordiv_5 floordiv_4))
(assert eq_247)
(define-fun eq_248 () Bool (= encoder_padded_outputs_size0 floordiv_2))
(assert eq_248)
(define-fun mul_161 () Int (* mul_155 8))
(define-fun mul_162 () Int (* mul_161 64))
(define-fun eq_249 () Bool (= mul_162 0))
(define-fun not__187 () Bool (not eq_249))
(assert not__187)
(define-fun eq_250 () Bool (= floordiv_5 0))
(define-fun not__188 () Bool (not eq_250))
(assert not__188)
(define-fun gt_14 () Bool (> floordiv_5 1))
(assert gt_14)
(define-fun lt_64 () Bool (< 1 mul_154))
(assert lt_64)
(define-fun eq_251 () Bool (= mul_27 -1))
(define-fun not__189 () Bool (not eq_251))
(assert not__189)
(define-fun ge_37 () Bool (>= mul_27 0))
(assert ge_37)
(define-fun eq_252 () Bool (= encoder_padded_outputs_size2 -1))
(define-fun not__190 () Bool (not eq_252))
(assert not__190)
(define-fun eq_253 () Bool (= mul_28 mul_28))
(assert eq_253)
(define-fun eq_254 () Bool (= encoder_padded_outputs_size0 mul_27))
(define-fun not__191 () Bool (not eq_254))
(assert not__191)
(define-fun eq_255 () Bool (= mul_27 encoder_padded_outputs_size0))
(define-fun not__192 () Bool (not eq_255))
(assert not__192)
(define-fun mod_16 () Int (mod encoder_padded_outputs_size0 mul_27))
(define-fun eq_256 () Bool (= mod_16 0))
(define-fun not__193 () Bool (not eq_256))
(assert not__193)
(define-fun mod_17 () Int (mod mul_27 mul_27))
(define-fun eq_257 () Bool (= mod_17 0))
(assert eq_257)
(define-fun mul_163 () Int (* encoder_padded_outputs_size1 encoder_padded_outputs_size0))
(define-fun lt_65 () Bool (< encoder_padded_outputs_stride0 encoder_padded_outputs_stride1))
(define-fun not__194 () Bool (not lt_65))
(assert not__194)
(define-fun gt_15 () Bool (> mul_28 0))
(assert gt_15)
(define-fun mul_164 () Int (* encoder_padded_outputs_stride1 encoder_padded_outputs_size1))
(define-fun eq_258 () Bool (= encoder_padded_outputs_stride0 mul_164))
(assert eq_258)
(define-fun mul_165 () Int (* mul_163 encoder_padded_outputs_size2))
(define-fun eq_259 () Bool (= mul_165 0))
(define-fun not__195 () Bool (not eq_259))
(assert not__195)
(define-fun eq_260 () Bool (= mul_163 1))
(define-fun not__196 () Bool (not eq_260))
(assert not__196)
(define-fun mul_166 () Int (* encoder_padded_outputs_size2 mul_163))
(define-fun eq_261 () Bool (= mul_27 mul_27))
(assert eq_261)
(define-fun eq_262 () Bool (= encoder_padded_outputs_size2 512))
(assert eq_262)
(define-fun ge_38 () Bool (>= mul_163 0))
(assert ge_38)
(define-fun eq_263 () Bool (= mul_163 0))
(define-fun not__197 () Bool (not eq_263))
(assert not__197)
(define-fun mul_167 () Int (* 512 mul_163))
(define-fun sub_26 () Int (- mul_163 1))
(define-fun mul_168 () Int (* 512 sub_26))
(define-fun add_62 () Int (+ 1 mul_168))
(define-fun add_63 () Int (+ add_62 511))
(define-fun mul_169 () Int (* 4 add_63))
(define-fun mul_170 () Int (* mul_163 512))
(define-fun eq_264 () Bool (= mul_170 0))
(define-fun not__198 () Bool (not eq_264))
(assert not__198)
(define-fun lt_66 () Bool (< mul_163 0))
(define-fun not__199 () Bool (not lt_66))
(assert not__199)
(define-fun eq_265 () Bool (= mul_163 mul_163))
(assert eq_265)
(define-fun lt_67 () Bool (< mul_163 2))
(define-fun not__200 () Bool (not lt_67))
(assert not__200)
(define-fun eq_266 () Bool (= encoder_padded_outputs_size1 -1))
(define-fun not__201 () Bool (not eq_266))
(assert not__201)
(define-fun mul_171 () Int (* mul_27 512))
(define-fun eq_267 () Bool (= mul_170 mul_171))
(assert eq_267)
(define-fun eq_268 () Bool (= mul_163 encoder_padded_outputs_size0))
(define-fun not__202 () Bool (not eq_268))
(assert not__202)
(define-fun eq_269 () Bool (= encoder_padded_outputs_size0 mul_163))
(define-fun not__203 () Bool (not eq_269))
(assert not__203)
(define-fun mod_18 () Int (mod mul_163 encoder_padded_outputs_size0))
(define-fun eq_270 () Bool (= mod_18 0))
(assert eq_270)
(define-fun floordiv_6 () Int (div mul_163 encoder_padded_outputs_size0))
(define-fun mul_172 () Int (* 512 floordiv_6))
(define-fun mul_173 () Int (* encoder_padded_outputs_size0 floordiv_6))
(define-fun mul_174 () Int (* mul_173 512))
(define-fun eq_271 () Bool (= mul_174 0))
(define-fun not__204 () Bool (not eq_271))
(assert not__204)
(define-fun eq_272 () Bool (= floordiv_6 1))
(define-fun not__205 () Bool (not eq_272))
(assert not__205)
(define-fun eq_273 () Bool (= mul_172 mul_172))
(assert eq_273)
(define-fun mul_175 () Int (* mul_172 encoder_padded_outputs_size0))
(define-fun eq_274 () Bool (= encoder_padded_outputs_size1 floordiv_6))
(assert eq_274)
(define-fun mul_176 () Int (* mul_27 8))
(define-fun mul_177 () Int (* mul_176 64))
(define-fun eq_275 () Bool (= mul_174 mul_177))
(assert eq_275)
(define-fun eq_276 () Bool (= floordiv_6 encoder_padded_outputs_size1))
(assert eq_276)
(define-fun mul_178 () Int (* mul_173 8))
(define-fun mul_179 () Int (* mul_178 64))
(define-fun eq_277 () Bool (= mul_179 0))
(define-fun not__206 () Bool (not eq_277))
(assert not__206)
(define-fun eq_278 () Bool (= floordiv_6 0))
(define-fun not__207 () Bool (not eq_278))
(assert not__207)
(define-fun gt_16 () Bool (> floordiv_6 1))
(assert gt_16)
(define-fun lt_68 () Bool (< 1 mul_172))
(assert lt_68)
(define-fun mul_180 () Int (* mul_122 floordiv_5))
(define-fun mul_181 () Int (* mul_180 64))
(define-fun eq_279 () Bool (= mul_181 0))
(define-fun not__208 () Bool (not eq_279))
(assert not__208)
(define-fun eq_280 () Bool (= mul_154 1))
(define-fun not__209 () Bool (not eq_280))
(assert not__209)
(define-fun lt_69 () Bool (< mul_154 64))
(define-fun not__210 () Bool (not lt_69))
(assert not__210)
(define-fun lt_70 () Bool (< floordiv_5 2))
(define-fun not__211 () Bool (not lt_70))
(assert not__211)
(define-fun lt_71 () Bool (< 512 mul_154))
(assert lt_71)
(define-fun eq_281 () Bool (= mul_154 0))
(define-fun not__212 () Bool (not eq_281))
(assert not__212)
(define-fun lt_72 () Bool (< mul_154 0))
(define-fun not__213 () Bool (not lt_72))
(assert not__213)
(define-fun lt_73 () Bool (< 1 mul_157))
(assert lt_73)
(define-fun ge_39 () Bool (>= floordiv_5 0))
(assert ge_39)
(define-fun mul_182 () Int (* 64 floordiv_5))
(define-fun mul_183 () Int (* mul_182 floordiv_2))
(define-fun mul_184 () Int (* mul_183 8))
(define-fun mul_185 () Int (* mul_183 7))
(define-fun add_64 () Int (+ 1 mul_185))
(define-fun mul_186 () Int (* mul_182 sub_22))
(define-fun add_65 () Int (+ add_64 mul_186))
(define-fun sub_27 () Int (- floordiv_5 1))
(define-fun mul_187 () Int (* 64 sub_27))
(define-fun add_66 () Int (+ add_65 mul_187))
(define-fun add_67 () Int (+ add_66 63))
(define-fun mul_188 () Int (* 4 add_67))
(define-fun eq_282 () Bool (= mul_182 mul_182))
(assert eq_282)
(define-fun eq_283 () Bool (= mul_183 mul_183))
(assert eq_283)
(define-fun eq_284 () Bool (= mul_182 1))
(define-fun not__214 () Bool (not eq_284))
(assert not__214)
(define-fun eq_285 () Bool (= mul_182 0))
(define-fun not__215 () Bool (not eq_285))
(assert not__215)
(define-fun lt_74 () Bool (< mul_182 0))
(define-fun not__216 () Bool (not lt_74))
(assert not__216)
(define-fun lt_75 () Bool (< 1 mul_183))
(assert lt_75)
(define-fun mul_189 () Int (* floordiv_4 64))
(define-fun eq_286 () Bool (= mul_181 mul_189))
(define-fun not__217 () Bool (not eq_286))
(assert not__217)
(define-fun gt_17 () Bool (> mul_189 0))
(assert gt_17)
(define-fun mod_19 () Int (mod mul_181 mul_189))
(define-fun eq_287 () Bool (= mod_19 0))
(assert eq_287)
(define-fun eq_288 () Bool (= mul_189 0))
(define-fun not__218 () Bool (not eq_288))
(assert not__218)
(define-fun floordiv_7 () Int (div mul_181 mul_189))
(define-fun eq_289 () Bool (= floordiv_7 8))
(define-fun not__219 () Bool (not eq_289))
(assert not__219)
(define-fun mod_20 () Int (mod 8 floordiv_7))
(define-fun eq_290 () Bool (= mod_20 0))
(define-fun not__220 () Bool (not eq_290))
(assert not__220)
(define-fun mod_21 () Int (mod mul_122 floordiv_7))
(define-fun eq_291 () Bool (= mod_21 0))
(assert eq_291)
(define-fun mul_190 () Int (* floordiv_2 8))
(define-fun lt_76 () Bool (< mul_183 mul_182))
(define-fun not__221 () Bool (not lt_76))
(assert not__221)
(define-fun gt_18 () Bool (> mul_181 0))
(assert gt_18)
(define-fun mul_191 () Int (* mul_190 floordiv_5))
(define-fun mul_192 () Int (* mul_191 64))
(define-fun eq_292 () Bool (= mul_192 0))
(define-fun not__222 () Bool (not eq_292))
(assert not__222)
(define-fun eq_293 () Bool (= mul_190 1))
(define-fun not__223 () Bool (not eq_293))
(assert not__223)
(define-fun mul_193 () Int (* mul_182 mul_190))
(define-fun eq_294 () Bool (= mul_122 floordiv_7))
(assert eq_294)
(define-fun mul_194 () Int (* 8 encoder_padded_outputs_size0))
(define-fun mul_195 () Int (* mul_194 floordiv_6))
(define-fun mul_196 () Int (* mul_195 64))
(define-fun eq_295 () Bool (= mul_196 0))
(define-fun not__224 () Bool (not eq_295))
(assert not__224)
(define-fun eq_296 () Bool (= mul_172 1))
(define-fun not__225 () Bool (not eq_296))
(assert not__225)
(define-fun lt_77 () Bool (< encoder_padded_outputs_size0 2))
(define-fun not__226 () Bool (not lt_77))
(assert not__226)
(define-fun lt_78 () Bool (< mul_172 64))
(define-fun not__227 () Bool (not lt_78))
(assert not__227)
(define-fun lt_79 () Bool (< floordiv_6 2))
(define-fun not__228 () Bool (not lt_79))
(assert not__228)
(define-fun lt_80 () Bool (< 512 mul_172))
(assert lt_80)
(define-fun eq_297 () Bool (= mul_172 0))
(define-fun not__229 () Bool (not eq_297))
(assert not__229)
(define-fun lt_81 () Bool (< mul_172 0))
(define-fun not__230 () Bool (not lt_81))
(assert not__230)
(define-fun gt_19 () Bool (> encoder_padded_outputs_size0 1))
(assert gt_19)
(define-fun lt_82 () Bool (< 1 mul_175))
(assert lt_82)
(define-fun ge_40 () Bool (>= floordiv_6 0))
(assert ge_40)
(define-fun mul_197 () Int (* 64 floordiv_6))
(define-fun mul_198 () Int (* mul_197 encoder_padded_outputs_size0))
(define-fun mul_199 () Int (* mul_198 8))
(define-fun mul_200 () Int (* mul_198 7))
(define-fun add_68 () Int (+ 1 mul_200))
(define-fun mul_201 () Int (* mul_197 sub_6))
(define-fun add_69 () Int (+ add_68 mul_201))
(define-fun sub_28 () Int (- floordiv_6 1))
(define-fun mul_202 () Int (* 64 sub_28))
(define-fun add_70 () Int (+ add_69 mul_202))
(define-fun add_71 () Int (+ add_70 63))
(define-fun mul_203 () Int (* 4 add_71))
(define-fun eq_298 () Bool (= mul_197 mul_197))
(assert eq_298)
(define-fun eq_299 () Bool (= mul_198 mul_198))
(assert eq_299)
(define-fun eq_300 () Bool (= mul_197 1))
(define-fun not__231 () Bool (not eq_300))
(assert not__231)
(define-fun eq_301 () Bool (= mul_197 0))
(define-fun not__232 () Bool (not eq_301))
(assert not__232)
(define-fun lt_83 () Bool (< mul_197 0))
(define-fun not__233 () Bool (not lt_83))
(assert not__233)
(define-fun lt_84 () Bool (< 1 mul_198))
(assert lt_84)
(define-fun mul_204 () Int (* encoder_padded_outputs_size1 64))
(define-fun eq_302 () Bool (= mul_196 mul_204))
(define-fun not__234 () Bool (not eq_302))
(assert not__234)
(define-fun gt_20 () Bool (> mul_204 0))
(assert gt_20)
(define-fun mod_22 () Int (mod mul_196 mul_204))
(define-fun eq_303 () Bool (= mod_22 0))
(assert eq_303)
(define-fun eq_304 () Bool (= mul_204 0))
(define-fun not__235 () Bool (not eq_304))
(assert not__235)
(define-fun floordiv_8 () Int (div mul_196 mul_204))
(define-fun eq_305 () Bool (= floordiv_8 8))
(define-fun not__236 () Bool (not eq_305))
(assert not__236)
(define-fun mod_23 () Int (mod 8 floordiv_8))
(define-fun eq_306 () Bool (= mod_23 0))
(define-fun not__237 () Bool (not eq_306))
(assert not__237)
(define-fun mod_24 () Int (mod mul_194 floordiv_8))
(define-fun eq_307 () Bool (= mod_24 0))
(assert eq_307)
(define-fun mul_205 () Int (* encoder_padded_outputs_size0 8))
(define-fun lt_85 () Bool (< mul_198 mul_197))
(define-fun not__238 () Bool (not lt_85))
(assert not__238)
(define-fun gt_21 () Bool (> mul_196 0))
(assert gt_21)
(define-fun mul_206 () Int (* mul_205 floordiv_6))
(define-fun mul_207 () Int (* mul_206 64))
(define-fun eq_308 () Bool (= mul_207 0))
(define-fun not__239 () Bool (not eq_308))
(assert not__239)
(define-fun eq_309 () Bool (= mul_205 1))
(define-fun not__240 () Bool (not eq_309))
(assert not__240)
(define-fun mul_208 () Int (* mul_197 mul_205))
(define-fun eq_310 () Bool (= mul_194 floordiv_8))
(assert eq_310)
(define-fun mul_209 () Int (* dec_enc_attn_mask_size0 8))
(define-fun ge_41 () Bool (>= mul_209 0))
(assert ge_41)
(define-fun ge_42 () Bool (>= dec_enc_attn_mask_size1 0))
(assert ge_42)
(define-fun ge_43 () Bool (>= dec_enc_attn_mask_size2 0))
(assert ge_43)
(define-fun eq_311 () Bool (= dec_enc_attn_mask_size2 0))
(define-fun not__241 () Bool (not eq_311))
(assert not__241)
(define-fun eq_312 () Bool (= dec_enc_attn_mask_size1 0))
(define-fun not__242 () Bool (not eq_312))
(assert not__242)
(define-fun mul_210 () Int (* dec_enc_attn_mask_size2 dec_enc_attn_mask_size1))
(define-fun eq_313 () Bool (= mul_209 0))
(define-fun not__243 () Bool (not eq_313))
(assert not__243)
(define-fun mul_211 () Int (* mul_210 mul_209))
(define-fun sub_29 () Int (- mul_209 1))
(define-fun mul_212 () Int (* mul_210 sub_29))
(define-fun add_72 () Int (+ 1 mul_212))
(define-fun sub_30 () Int (- dec_enc_attn_mask_size1 1))
(define-fun mul_213 () Int (* dec_enc_attn_mask_size2 sub_30))
(define-fun add_73 () Int (+ add_72 mul_213))
(define-fun sub_31 () Int (- dec_enc_attn_mask_size2 1))
(define-fun add_74 () Int (+ add_73 sub_31))
(define-fun mul_214 () Int (* mul_209 dec_enc_attn_mask_size1))
(define-fun mul_215 () Int (* mul_214 dec_enc_attn_mask_size2))
(define-fun eq_314 () Bool (= mul_215 0))
(define-fun not__244 () Bool (not eq_314))
(assert not__244)
(define-fun eq_315 () Bool (= dec_enc_attn_mask_size2 dec_enc_attn_mask_size2))
(assert eq_315)
(define-fun eq_316 () Bool (= mul_209 1))
(define-fun not__245 () Bool (not eq_316))
(assert not__245)
(define-fun eq_317 () Bool (= mul_210 mul_210))
(assert eq_317)
(define-fun mul_216 () Int (* mul_205 64))
(define-fun mul_217 () Int (* mul_216 floordiv_6))
(define-fun eq_318 () Bool (= mul_217 0))
(define-fun not__246 () Bool (not eq_318))
(assert not__246)
(define-fun lt_86 () Bool (< mul_205 2))
(define-fun not__247 () Bool (not lt_86))
(assert not__247)
(define-fun lt_87 () Bool (< 1 mul_197))
(assert lt_87)
(define-fun lt_88 () Bool (< 64 mul_197))
(assert lt_88)
(define-fun eq_319 () Bool (= mul_205 mul_190))
(assert eq_319)
(define-fun ge_44 () Bool (>= mul_190 0))
(assert ge_44)
(define-fun mul_218 () Int (* floordiv_6 floordiv_5))
(define-fun eq_320 () Bool (= mul_190 0))
(define-fun not__248 () Bool (not eq_320))
(assert not__248)
(define-fun mul_219 () Int (* mul_218 mul_190))
(define-fun sub_32 () Int (- mul_190 1))
(define-fun mul_220 () Int (* mul_218 sub_32))
(define-fun add_75 () Int (+ 1 mul_220))
(define-fun mul_221 () Int (* floordiv_6 sub_27))
(define-fun add_76 () Int (+ add_75 mul_221))
(define-fun add_77 () Int (+ add_76 sub_28))
(define-fun mul_222 () Int (* 4 add_77))
(define-fun mul_223 () Int (* mul_191 floordiv_6))
(define-fun eq_321 () Bool (= mul_223 0))
(define-fun not__249 () Bool (not eq_321))
(assert not__249)
(define-fun eq_322 () Bool (= floordiv_6 floordiv_6))
(assert eq_322)
(define-fun eq_323 () Bool (= mul_218 mul_218))
(assert eq_323)
(declare-const self_layer_stack_0__enc_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_0__enc_attn_attention_temperature_storage_offset 0)
(define-fun ge_45 () Bool (>= self_layer_stack_0__enc_attn_attention_temperature_storage_offset 0))
(assert ge_45)
(define-fun add_78 () Int (+ self_layer_stack_0__enc_attn_attention_temperature_storage_offset 1))
(define-fun mul_224 () Int (* 8 add_78))
(define-fun lt_89 () Bool (< floordiv_6 0))
(define-fun not__250 () Bool (not lt_89))
(assert not__250)
(define-fun lt_90 () Bool (< floordiv_5 0))
(define-fun not__251 () Bool (not lt_90))
(assert not__251)
(define-fun lt_91 () Bool (< mul_190 0))
(define-fun not__252 () Bool (not lt_91))
(assert not__252)
(define-fun eq_324 () Bool (= mul_190 mul_190))
(assert eq_324)
(define-fun eq_325 () Bool (= floordiv_5 floordiv_5))
(assert eq_325)
(define-fun eq_326 () Bool (= mul_218 0))
(define-fun not__253 () Bool (not eq_326))
(assert not__253)
(define-fun lt_92 () Bool (< floordiv_6 mul_218))
(assert lt_92)
(define-fun lt_93 () Bool (< dec_enc_attn_mask_size2 0))
(define-fun not__254 () Bool (not lt_93))
(assert not__254)
(define-fun lt_94 () Bool (< dec_enc_attn_mask_size1 0))
(define-fun not__255 () Bool (not lt_94))
(assert not__255)
(define-fun lt_95 () Bool (< mul_209 0))
(define-fun not__256 () Bool (not lt_95))
(assert not__256)
(define-fun eq_327 () Bool (= dec_enc_attn_mask_size2 floordiv_6))
(assert eq_327)
(define-fun eq_328 () Bool (= dec_enc_attn_mask_size1 floordiv_5))
(assert eq_328)
(define-fun eq_329 () Bool (= mul_209 mul_190))
(assert eq_329)
(define-fun eq_330 () Bool (= mul_209 mul_209))
(assert eq_330)
(define-fun eq_331 () Bool (= dec_enc_attn_mask_size1 dec_enc_attn_mask_size1))
(assert eq_331)
(define-fun eq_332 () Bool (= mul_190 mul_209))
(assert eq_332)
(define-fun eq_333 () Bool (= floordiv_5 dec_enc_attn_mask_size1))
(assert eq_333)
(define-fun eq_334 () Bool (= floordiv_6 dec_enc_attn_mask_size2))
(assert eq_334)
(define-fun gt_22 () Bool (> dec_enc_attn_mask_size2 1))
(assert gt_22)
(define-fun eq_335 () Bool (= mul_210 0))
(define-fun not__257 () Bool (not eq_335))
(assert not__257)
(define-fun lt_96 () Bool (< dec_enc_attn_mask_size2 mul_210))
(assert lt_96)
(define-fun mul_225 () Int (* 4 add_74))
(define-fun eq_336 () Bool (= dec_enc_attn_mask_size2 204))
(assert eq_336)
(define-fun mul_226 () Int (* dec_enc_attn_mask_size1 mul_209))
(define-fun mul_227 () Int (* dec_enc_attn_mask_size1 sub_29))
(define-fun add_79 () Int (+ 1 mul_227))
(define-fun add_80 () Int (+ add_79 sub_30))
(define-fun mul_228 () Int (* 4 add_80))
(define-fun eq_337 () Bool (= mul_214 0))
(define-fun not__258 () Bool (not eq_337))
(assert not__258)
(define-fun eq_338 () Bool (= mul_209 -1))
(define-fun not__259 () Bool (not eq_338))
(assert not__259)
(define-fun eq_339 () Bool (= dec_enc_attn_mask_size1 -1))
(define-fun not__260 () Bool (not eq_339))
(assert not__260)
(define-fun eq_340 () Bool (= dec_enc_attn_mask_size2 -1))
(define-fun not__261 () Bool (not eq_340))
(assert not__261)
(define-fun lt_97 () Bool (< mul_209 2))
(define-fun not__262 () Bool (not lt_97))
(assert not__262)
(define-fun lt_98 () Bool (< 1 dec_enc_attn_mask_size1))
(assert lt_98)
(define-fun eq_341 () Bool (= mul_215 mul_215))
(assert eq_341)
(define-fun eq_342 () Bool (= mul_205 mul_209))
(assert eq_342)
(define-fun mul_229 () Int (* 64 dec_enc_attn_mask_size1))
(define-fun mul_230 () Int (* mul_229 mul_209))
(define-fun mul_231 () Int (* mul_229 sub_29))
(define-fun add_81 () Int (+ 1 mul_231))
(define-fun mul_232 () Int (* 64 sub_30))
(define-fun add_82 () Int (+ add_81 mul_232))
(define-fun add_83 () Int (+ add_82 63))
(define-fun mul_233 () Int (* 4 add_83))
(define-fun mul_234 () Int (* mul_214 64))
(define-fun eq_343 () Bool (= mul_234 0))
(define-fun not__263 () Bool (not eq_343))
(assert not__263)
(define-fun eq_344 () Bool (= mul_229 mul_229))
(assert eq_344)
(define-fun mul_235 () Int (* mul_194 floordiv_4))
(define-fun mul_236 () Int (* mul_235 64))
(define-fun eq_345 () Bool (= mul_234 mul_236))
(assert eq_345)
(define-fun eq_346 () Bool (= mul_209 8))
(define-fun not__264 () Bool (not eq_346))
(assert not__264)
(define-fun mod_25 () Int (mod mul_209 8))
(define-fun eq_347 () Bool (= mod_25 0))
(assert eq_347)
(define-fun floordiv_9 () Int (div mul_209 8))
(define-fun mul_237 () Int (* mul_229 floordiv_9))
(define-fun mul_238 () Int (* 8 floordiv_9))
(define-fun mul_239 () Int (* mul_238 dec_enc_attn_mask_size1))
(define-fun mul_240 () Int (* mul_239 64))
(define-fun eq_348 () Bool (= mul_240 0))
(define-fun not__265 () Bool (not eq_348))
(assert not__265)
(define-fun eq_349 () Bool (= floordiv_9 1))
(define-fun not__266 () Bool (not eq_349))
(assert not__266)
(define-fun eq_350 () Bool (= mul_237 mul_237))
(assert eq_350)
(define-fun mul_241 () Int (* mul_237 8))
(define-fun eq_351 () Bool (= mul_229 1))
(define-fun not__267 () Bool (not eq_351))
(assert not__267)
(define-fun eq_352 () Bool (= mul_229 0))
(define-fun not__268 () Bool (not eq_352))
(assert not__268)
(define-fun eq_353 () Bool (= floordiv_9 0))
(define-fun not__269 () Bool (not eq_353))
(assert not__269)
(define-fun lt_99 () Bool (< mul_229 0))
(define-fun not__270 () Bool (not lt_99))
(assert not__270)
(define-fun gt_23 () Bool (> floordiv_9 1))
(assert gt_23)
(define-fun lt_100 () Bool (< 1 mul_237))
(assert lt_100)
(define-fun eq_354 () Bool (= encoder_padded_outputs_size0 floordiv_9))
(assert eq_354)
(define-fun eq_355 () Bool (= floordiv_4 dec_enc_attn_mask_size1))
(assert eq_355)
(define-fun mul_242 () Int (* floordiv_9 dec_enc_attn_mask_size1))
(define-fun mul_243 () Int (* mul_242 8))
(define-fun mul_244 () Int (* mul_243 64))
(define-fun eq_356 () Bool (= mul_244 0))
(define-fun not__271 () Bool (not eq_356))
(assert not__271)
(define-fun eq_357 () Bool (= mul_237 64))
(define-fun not__272 () Bool (not eq_357))
(assert not__272)
(define-fun lt_101 () Bool (< floordiv_9 2))
(define-fun not__273 () Bool (not lt_101))
(assert not__273)
(define-fun lt_102 () Bool (< 64 mul_229))
(assert lt_102)
(define-fun lt_103 () Bool (< mul_237 64))
(define-fun not__274 () Bool (not lt_103))
(assert not__274)
(define-fun lt_104 () Bool (< mul_237 mul_229))
(define-fun not__275 () Bool (not lt_104))
(assert not__275)
(define-fun gt_24 () Bool (> dec_enc_attn_mask_size1 1))
(assert gt_24)
(define-fun lt_105 () Bool (< 1 mul_229))
(assert lt_105)
(define-fun ge_46 () Bool (>= floordiv_9 0))
(assert ge_46)
(define-fun mul_245 () Int (* 512 dec_enc_attn_mask_size1))
(define-fun mul_246 () Int (* mul_245 floordiv_9))
(define-fun sub_33 () Int (- floordiv_9 1))
(define-fun mul_247 () Int (* mul_245 sub_33))
(define-fun add_84 () Int (+ 1 mul_247))
(define-fun mul_248 () Int (* 512 sub_30))
(define-fun add_85 () Int (+ add_84 mul_248))
(define-fun add_86 () Int (+ add_85 448))
(define-fun add_87 () Int (+ add_86 63))
(define-fun mul_249 () Int (* 4 add_87))
(define-fun eq_358 () Bool (= mul_245 mul_245))
(assert eq_358)
(define-fun lt_106 () Bool (< 1 mul_245))
(assert lt_106)
(define-fun eq_359 () Bool (= mul_244 mul_158))
(define-fun not__276 () Bool (not eq_359))
(assert not__276)
(define-fun gt_25 () Bool (> mul_158 0))
(assert gt_25)
(define-fun mod_26 () Int (mod mul_244 mul_158))
(define-fun eq_360 () Bool (= mod_26 0))
(assert eq_360)
(define-fun eq_361 () Bool (= mul_158 0))
(define-fun not__277 () Bool (not eq_361))
(assert not__277)
(define-fun floordiv_10 () Int (div mul_244 mul_158))
(define-fun eq_362 () Bool (= floordiv_9 encoder_padded_outputs_size0))
(assert eq_362)
(define-fun eq_363 () Bool (= dec_enc_attn_mask_size1 floordiv_4))
(assert eq_363)
(define-fun eq_364 () Bool (= floordiv_10 8))
(define-fun not__278 () Bool (not eq_364))
(assert not__278)
(define-fun mod_27 () Int (mod 8 floordiv_10))
(define-fun eq_365 () Bool (= mod_27 0))
(define-fun not__279 () Bool (not eq_365))
(assert not__279)
(define-fun mod_28 () Int (mod 512 floordiv_10))
(define-fun eq_366 () Bool (= mod_28 0))
(assert eq_366)
(define-fun gt_26 () Bool (> mul_244 0))
(assert gt_26)
(define-fun mul_250 () Int (* mul_242 512))
(define-fun eq_367 () Bool (= mul_250 0))
(define-fun not__280 () Bool (not eq_367))
(assert not__280)
(define-fun eq_368 () Bool (= floordiv_10 512))
(assert eq_368)
(define-fun eq_369 () Bool (= mul_242 -1))
(define-fun not__281 () Bool (not eq_369))
(assert not__281)
(define-fun ge_47 () Bool (>= mul_242 0))
(assert ge_47)
(define-fun eq_370 () Bool (= mul_250 mul_250))
(assert eq_370)
(define-fun eq_371 () Bool (= floordiv_9 mul_242))
(define-fun not__282 () Bool (not eq_371))
(assert not__282)
(define-fun eq_372 () Bool (= mul_242 floordiv_9))
(define-fun not__283 () Bool (not eq_372))
(assert not__283)
(define-fun mod_29 () Int (mod floordiv_9 mul_242))
(define-fun eq_373 () Bool (= mod_29 0))
(define-fun not__284 () Bool (not eq_373))
(assert not__284)
(define-fun mod_30 () Int (mod mul_242 mul_242))
(define-fun eq_374 () Bool (= mod_30 0))
(assert eq_374)
(define-fun mul_251 () Int (* dec_enc_attn_mask_size1 floordiv_9))
(define-fun lt_107 () Bool (< mul_245 512))
(define-fun not__285 () Bool (not lt_107))
(assert not__285)
(define-fun gt_27 () Bool (> mul_250 0))
(assert gt_27)
(define-fun mul_252 () Int (* mul_251 512))
(define-fun eq_375 () Bool (= mul_252 0))
(define-fun not__286 () Bool (not eq_375))
(assert not__286)
(define-fun eq_376 () Bool (= mul_251 1))
(define-fun not__287 () Bool (not eq_376))
(assert not__287)
(define-fun mul_253 () Int (* 512 mul_251))
(define-fun eq_377 () Bool (= mul_242 mul_242))
(assert eq_377)
(define-fun ge_48 () Bool (>= mul_251 0))
(assert ge_48)
(define-fun eq_378 () Bool (= mul_251 0))
(define-fun not__288 () Bool (not eq_378))
(assert not__288)
(define-fun sub_34 () Int (- mul_251 1))
(define-fun mul_254 () Int (* 512 sub_34))
(define-fun add_88 () Int (+ 1 mul_254))
(define-fun add_89 () Int (+ add_88 511))
(define-fun mul_255 () Int (* 4 add_89))
(define-fun lt_108 () Bool (< mul_251 0))
(define-fun not__289 () Bool (not lt_108))
(assert not__289)
(define-fun eq_379 () Bool (= mul_251 mul_251))
(assert eq_379)
(define-fun lt_109 () Bool (< mul_251 2))
(define-fun not__290 () Bool (not lt_109))
(assert not__290)
(define-fun eq_380 () Bool (= floordiv_9 -1))
(define-fun not__291 () Bool (not eq_380))
(assert not__291)
(define-fun eq_381 () Bool (= mul_252 mul_250))
(assert eq_381)
(define-fun eq_382 () Bool (= mul_251 floordiv_9))
(define-fun not__292 () Bool (not eq_382))
(assert not__292)
(define-fun eq_383 () Bool (= floordiv_9 mul_251))
(define-fun not__293 () Bool (not eq_383))
(assert not__293)
(define-fun mod_31 () Int (mod mul_251 floordiv_9))
(define-fun eq_384 () Bool (= mod_31 0))
(assert eq_384)
(define-fun floordiv_11 () Int (div mul_251 floordiv_9))
(define-fun mul_256 () Int (* 512 floordiv_11))
(define-fun mul_257 () Int (* floordiv_9 floordiv_11))
(define-fun mul_258 () Int (* mul_257 512))
(define-fun eq_385 () Bool (= mul_258 0))
(define-fun not__294 () Bool (not eq_385))
(assert not__294)
(define-fun eq_386 () Bool (= floordiv_11 1))
(define-fun not__295 () Bool (not eq_386))
(assert not__295)
(define-fun eq_387 () Bool (= mul_256 mul_256))
(assert eq_387)
(define-fun mul_259 () Int (* mul_256 floordiv_9))
(define-fun eq_388 () Bool (= dec_enc_attn_mask_size1 floordiv_11))
(assert eq_388)
(define-fun lt_110 () Bool (< floordiv_11 0))
(define-fun not__296 () Bool (not lt_110))
(assert not__296)
(define-fun lt_111 () Bool (< floordiv_9 0))
(define-fun not__297 () Bool (not lt_111))
(assert not__297)
(define-fun eq_389 () Bool (= floordiv_11 floordiv_4))
(assert eq_389)
(define-fun eq_390 () Bool (= floordiv_9 floordiv_2))
(assert eq_390)
(define-fun eq_391 () Bool (= floordiv_9 floordiv_9))
(assert eq_391)
(define-fun eq_392 () Bool (= floordiv_11 floordiv_11))
(assert eq_392)
(define-fun eq_393 () Bool (= floordiv_2 floordiv_9))
(assert eq_393)
(define-fun eq_394 () Bool (= floordiv_4 floordiv_11))
(assert eq_394)
(define-fun eq_395 () Bool (= mul_256 0))
(define-fun not__298 () Bool (not eq_395))
(assert not__298)
(define-fun gt_28 () Bool (> mul_256 512))
(assert gt_28)
(define-fun ge_49 () Bool (>= floordiv_11 0))
(assert ge_49)
(define-fun eq_396 () Bool (= floordiv_11 0))
(define-fun not__299 () Bool (not eq_396))
(assert not__299)
(define-fun mul_260 () Int (* mul_256 sub_33))
(define-fun add_90 () Int (+ 1 mul_260))
(define-fun sub_35 () Int (- floordiv_11 1))
(define-fun mul_261 () Int (* 512 sub_35))
(define-fun add_91 () Int (+ add_90 mul_261))
(define-fun add_92 () Int (+ add_91 511))
(define-fun mul_262 () Int (* 4 add_92))
(define-fun mul_263 () Int (* floordiv_11 floordiv_9))
(define-fun mul_264 () Int (* floordiv_11 sub_33))
(define-fun add_93 () Int (+ 1 mul_264))
(define-fun add_94 () Int (+ add_93 sub_35))
(define-fun mul_265 () Int (* 4 add_94))
(define-fun eq_397 () Bool (= mul_257 0))
(define-fun not__300 () Bool (not eq_397))
(assert not__300)
(define-fun lt_112 () Bool (< floordiv_11 1))
(define-fun not__301 () Bool (not lt_112))
(assert not__301)
(define-fun gt_29 () Bool (> floordiv_11 1))
(assert gt_29)
(define-fun eq_398 () Bool (= floordiv_11 -1))
(define-fun not__302 () Bool (not eq_398))
(assert not__302)
(define-fun lt_113 () Bool (< floordiv_11 2))
(define-fun not__303 () Bool (not lt_113))
(assert not__303)
(define-fun lt_114 () Bool (< 1 floordiv_11))
(assert lt_114)
(define-fun eq_399 () Bool (= mul_257 -1))
(define-fun not__304 () Bool (not eq_399))
(assert not__304)
(define-fun ge_50 () Bool (>= mul_257 0))
(assert ge_50)
(define-fun eq_400 () Bool (= mul_258 mul_258))
(assert eq_400)
(define-fun eq_401 () Bool (= floordiv_9 mul_257))
(define-fun not__305 () Bool (not eq_401))
(assert not__305)
(define-fun eq_402 () Bool (= mul_257 floordiv_9))
(define-fun not__306 () Bool (not eq_402))
(assert not__306)
(define-fun mod_32 () Int (mod floordiv_9 mul_257))
(define-fun eq_403 () Bool (= mod_32 0))
(define-fun not__307 () Bool (not eq_403))
(assert not__307)
(define-fun mod_33 () Int (mod mul_257 mul_257))
(define-fun eq_404 () Bool (= mod_33 0))
(assert eq_404)
(define-fun lt_115 () Bool (< mul_256 512))
(define-fun not__308 () Bool (not lt_115))
(assert not__308)
(define-fun gt_30 () Bool (> mul_258 0))
(assert gt_30)
(define-fun mul_266 () Int (* mul_263 512))
(define-fun eq_405 () Bool (= mul_266 0))
(define-fun not__309 () Bool (not eq_405))
(assert not__309)
(define-fun eq_406 () Bool (= mul_263 1))
(define-fun not__310 () Bool (not eq_406))
(assert not__310)
(define-fun mul_267 () Int (* 512 mul_263))
(define-fun eq_407 () Bool (= mul_257 mul_257))
(assert eq_407)
(define-fun ge_51 () Bool (>= mul_263 0))
(assert ge_51)
(define-fun eq_408 () Bool (= mul_263 0))
(define-fun not__311 () Bool (not eq_408))
(assert not__311)
(define-fun mul_268 () Int (* 2048 mul_263))
(define-fun sub_36 () Int (- mul_263 1))
(define-fun mul_269 () Int (* 2048 sub_36))
(define-fun add_95 () Int (+ 1 mul_269))
(define-fun add_96 () Int (+ add_95 2047))
(define-fun mul_270 () Int (* 4 add_96))
(define-fun mul_271 () Int (* mul_263 2048))
(define-fun eq_409 () Bool (= mul_271 0))
(define-fun not__312 () Bool (not eq_409))
(assert not__312)
(define-fun lt_116 () Bool (< mul_263 0))
(define-fun not__313 () Bool (not lt_116))
(assert not__313)
(define-fun eq_410 () Bool (= mul_263 mul_263))
(assert eq_410)
(define-fun lt_117 () Bool (< mul_263 2))
(define-fun not__314 () Bool (not lt_117))
(assert not__314)
(define-fun mul_272 () Int (* mul_257 2048))
(define-fun eq_411 () Bool (= mul_271 mul_272))
(assert eq_411)
(define-fun eq_412 () Bool (= mul_263 floordiv_9))
(define-fun not__315 () Bool (not eq_412))
(assert not__315)
(define-fun eq_413 () Bool (= floordiv_9 mul_263))
(define-fun not__316 () Bool (not eq_413))
(assert not__316)
(define-fun mod_34 () Int (mod mul_263 floordiv_9))
(define-fun eq_414 () Bool (= mod_34 0))
(assert eq_414)
(define-fun floordiv_12 () Int (div mul_263 floordiv_9))
(define-fun mul_273 () Int (* 2048 floordiv_12))
(define-fun mul_274 () Int (* floordiv_9 floordiv_12))
(define-fun mul_275 () Int (* mul_274 2048))
(define-fun eq_415 () Bool (= mul_275 0))
(define-fun not__317 () Bool (not eq_415))
(assert not__317)
(define-fun eq_416 () Bool (= floordiv_12 1))
(define-fun not__318 () Bool (not eq_416))
(assert not__318)
(define-fun eq_417 () Bool (= mul_273 mul_273))
(assert eq_417)
(define-fun mul_276 () Int (* mul_273 floordiv_9))
(define-fun eq_418 () Bool (= floordiv_11 floordiv_12))
(assert eq_418)
(define-fun lt_118 () Bool (< floordiv_12 0))
(define-fun not__319 () Bool (not lt_118))
(assert not__319)
(define-fun eq_419 () Bool (= floordiv_12 floordiv_12))
(assert eq_419)
(define-fun eq_420 () Bool (= mul_273 0))
(define-fun not__320 () Bool (not eq_420))
(assert not__320)
(define-fun gt_31 () Bool (> mul_273 2048))
(assert gt_31)
(define-fun ge_52 () Bool (>= floordiv_12 0))
(assert ge_52)
(define-fun eq_421 () Bool (= floordiv_12 0))
(define-fun not__321 () Bool (not eq_421))
(assert not__321)
(define-fun mul_277 () Int (* mul_273 sub_33))
(define-fun add_97 () Int (+ 1 mul_277))
(define-fun sub_37 () Int (- floordiv_12 1))
(define-fun mul_278 () Int (* 2048 sub_37))
(define-fun add_98 () Int (+ add_97 mul_278))
(define-fun add_99 () Int (+ add_98 2047))
(define-fun mul_279 () Int (* 4 add_99))
(define-fun eq_422 () Bool (= floordiv_12 -1))
(define-fun not__322 () Bool (not eq_422))
(assert not__322)
(define-fun eq_423 () Bool (= mul_275 mul_275))
(assert eq_423)
(define-fun eq_424 () Bool (= mul_274 -1))
(define-fun not__323 () Bool (not eq_424))
(assert not__323)
(define-fun ge_53 () Bool (>= mul_274 0))
(assert ge_53)
(define-fun eq_425 () Bool (= floordiv_9 mul_274))
(define-fun not__324 () Bool (not eq_425))
(assert not__324)
(define-fun eq_426 () Bool (= mul_274 floordiv_9))
(define-fun not__325 () Bool (not eq_426))
(assert not__325)
(define-fun mod_35 () Int (mod floordiv_9 mul_274))
(define-fun eq_427 () Bool (= mod_35 0))
(define-fun not__326 () Bool (not eq_427))
(assert not__326)
(define-fun mod_36 () Int (mod mul_274 mul_274))
(define-fun eq_428 () Bool (= mod_36 0))
(assert eq_428)
(define-fun mul_280 () Int (* floordiv_12 floordiv_9))
(define-fun lt_119 () Bool (< mul_273 2048))
(define-fun not__327 () Bool (not lt_119))
(assert not__327)
(define-fun gt_32 () Bool (> mul_275 0))
(assert gt_32)
(define-fun mul_281 () Int (* mul_280 2048))
(define-fun eq_429 () Bool (= mul_281 0))
(define-fun not__328 () Bool (not eq_429))
(assert not__328)
(define-fun eq_430 () Bool (= mul_280 1))
(define-fun not__329 () Bool (not eq_430))
(assert not__329)
(define-fun mul_282 () Int (* 2048 mul_280))
(define-fun eq_431 () Bool (= mul_274 mul_274))
(assert eq_431)
(define-fun ge_54 () Bool (>= mul_280 0))
(assert ge_54)
(define-fun eq_432 () Bool (= mul_280 0))
(define-fun not__330 () Bool (not eq_432))
(assert not__330)
(define-fun mul_283 () Int (* 512 mul_280))
(define-fun sub_38 () Int (- mul_280 1))
(define-fun mul_284 () Int (* 512 sub_38))
(define-fun add_100 () Int (+ 1 mul_284))
(define-fun add_101 () Int (+ add_100 511))
(define-fun mul_285 () Int (* 4 add_101))
(define-fun mul_286 () Int (* mul_280 512))
(define-fun eq_433 () Bool (= mul_286 0))
(define-fun not__331 () Bool (not eq_433))
(assert not__331)
(define-fun lt_120 () Bool (< mul_280 0))
(define-fun not__332 () Bool (not lt_120))
(assert not__332)
(define-fun eq_434 () Bool (= mul_280 mul_280))
(assert eq_434)
(define-fun lt_121 () Bool (< mul_280 2))
(define-fun not__333 () Bool (not lt_121))
(assert not__333)
(define-fun mul_287 () Int (* mul_274 512))
(define-fun eq_435 () Bool (= mul_286 mul_287))
(assert eq_435)
(define-fun eq_436 () Bool (= mul_280 floordiv_9))
(define-fun not__334 () Bool (not eq_436))
(assert not__334)
(define-fun eq_437 () Bool (= floordiv_9 mul_280))
(define-fun not__335 () Bool (not eq_437))
(assert not__335)
(define-fun mod_37 () Int (mod mul_280 floordiv_9))
(define-fun eq_438 () Bool (= mod_37 0))
(assert eq_438)
(define-fun floordiv_13 () Int (div mul_280 floordiv_9))
(define-fun mul_288 () Int (* 512 floordiv_13))
(define-fun mul_289 () Int (* floordiv_9 floordiv_13))
(define-fun mul_290 () Int (* mul_289 512))
(define-fun eq_439 () Bool (= mul_290 0))
(define-fun not__336 () Bool (not eq_439))
(assert not__336)
(define-fun eq_440 () Bool (= floordiv_13 1))
(define-fun not__337 () Bool (not eq_440))
(assert not__337)
(define-fun eq_441 () Bool (= mul_288 mul_288))
(assert eq_441)
(define-fun mul_291 () Int (* mul_288 floordiv_9))
(define-fun eq_442 () Bool (= floordiv_12 floordiv_13))
(assert eq_442)
(define-fun lt_122 () Bool (< floordiv_13 0))
(define-fun not__338 () Bool (not lt_122))
(assert not__338)
(define-fun eq_443 () Bool (= floordiv_13 floordiv_11))
(assert eq_443)
(define-fun eq_444 () Bool (= floordiv_13 floordiv_13))
(assert eq_444)
(define-fun eq_445 () Bool (= floordiv_11 floordiv_13))
(assert eq_445)
(define-fun eq_446 () Bool (= mul_288 0))
(define-fun not__339 () Bool (not eq_446))
(assert not__339)
(define-fun gt_33 () Bool (> mul_288 512))
(assert gt_33)
(define-fun ge_55 () Bool (>= floordiv_13 0))
(assert ge_55)
(define-fun eq_447 () Bool (= floordiv_13 0))
(define-fun not__340 () Bool (not eq_447))
(assert not__340)
(define-fun mul_292 () Int (* mul_288 sub_33))
(define-fun add_102 () Int (+ 1 mul_292))
(define-fun sub_39 () Int (- floordiv_13 1))
(define-fun mul_293 () Int (* 512 sub_39))
(define-fun add_103 () Int (+ add_102 mul_293))
(define-fun add_104 () Int (+ add_103 511))
(define-fun mul_294 () Int (* 4 add_104))
(define-fun mul_295 () Int (* floordiv_13 floordiv_9))
(define-fun mul_296 () Int (* floordiv_13 sub_33))
(define-fun add_105 () Int (+ 1 mul_296))
(define-fun add_106 () Int (+ add_105 sub_39))
(define-fun mul_297 () Int (* 4 add_106))
(define-fun eq_448 () Bool (= mul_289 0))
(define-fun not__341 () Bool (not eq_448))
(assert not__341)
(define-fun lt_123 () Bool (< floordiv_13 1))
(define-fun not__342 () Bool (not lt_123))
(assert not__342)
(define-fun gt_34 () Bool (> floordiv_13 1))
(assert gt_34)
(define-fun eq_449 () Bool (= floordiv_13 -1))
(define-fun not__343 () Bool (not eq_449))
(assert not__343)
(define-fun lt_124 () Bool (< floordiv_13 2))
(define-fun not__344 () Bool (not lt_124))
(assert not__344)
(define-fun lt_125 () Bool (< 1 floordiv_13))
(assert lt_125)
(define-fun eq_450 () Bool (= mul_289 -1))
(define-fun not__345 () Bool (not eq_450))
(assert not__345)
(define-fun ge_56 () Bool (>= mul_289 0))
(assert ge_56)
(define-fun eq_451 () Bool (= mul_290 mul_290))
(assert eq_451)
(define-fun eq_452 () Bool (= floordiv_9 mul_289))
(define-fun not__346 () Bool (not eq_452))
(assert not__346)
(define-fun eq_453 () Bool (= mul_289 floordiv_9))
(define-fun not__347 () Bool (not eq_453))
(assert not__347)
(define-fun mod_38 () Int (mod floordiv_9 mul_289))
(define-fun eq_454 () Bool (= mod_38 0))
(define-fun not__348 () Bool (not eq_454))
(assert not__348)
(define-fun mod_39 () Int (mod mul_289 mul_289))
(define-fun eq_455 () Bool (= mod_39 0))
(assert eq_455)
(define-fun lt_126 () Bool (< mul_288 512))
(define-fun not__349 () Bool (not lt_126))
(assert not__349)
(define-fun gt_35 () Bool (> mul_290 0))
(assert gt_35)
(define-fun mul_298 () Int (* mul_295 512))
(define-fun eq_456 () Bool (= mul_298 0))
(define-fun not__350 () Bool (not eq_456))
(assert not__350)
(define-fun eq_457 () Bool (= mul_295 1))
(define-fun not__351 () Bool (not eq_457))
(assert not__351)
(define-fun mul_299 () Int (* 512 mul_295))
(define-fun eq_458 () Bool (= mul_289 mul_289))
(assert eq_458)
(define-fun ge_57 () Bool (>= mul_295 0))
(assert ge_57)
(define-fun eq_459 () Bool (= mul_295 0))
(define-fun not__352 () Bool (not eq_459))
(assert not__352)
(define-fun sub_40 () Int (- mul_295 1))
(define-fun mul_300 () Int (* 512 sub_40))
(define-fun add_107 () Int (+ 1 mul_300))
(define-fun add_108 () Int (+ add_107 511))
(define-fun mul_301 () Int (* 4 add_108))
(define-fun lt_127 () Bool (< mul_295 0))
(define-fun not__353 () Bool (not lt_127))
(assert not__353)
(define-fun eq_460 () Bool (= mul_295 mul_295))
(assert eq_460)
(define-fun lt_128 () Bool (< mul_295 2))
(define-fun not__354 () Bool (not lt_128))
(assert not__354)
(define-fun eq_461 () Bool (= mul_298 mul_290))
(assert eq_461)
(define-fun eq_462 () Bool (= mul_295 floordiv_9))
(define-fun not__355 () Bool (not eq_462))
(assert not__355)
(define-fun eq_463 () Bool (= floordiv_9 mul_295))
(define-fun not__356 () Bool (not eq_463))
(assert not__356)
(define-fun mod_40 () Int (mod mul_295 floordiv_9))
(define-fun eq_464 () Bool (= mod_40 0))
(assert eq_464)
(define-fun floordiv_14 () Int (div mul_295 floordiv_9))
(define-fun mul_302 () Int (* 512 floordiv_14))
(define-fun mul_303 () Int (* floordiv_9 floordiv_14))
(define-fun mul_304 () Int (* mul_303 512))
(define-fun eq_465 () Bool (= mul_304 0))
(define-fun not__357 () Bool (not eq_465))
(assert not__357)
(define-fun eq_466 () Bool (= floordiv_14 1))
(define-fun not__358 () Bool (not eq_466))
(assert not__358)
(define-fun eq_467 () Bool (= mul_302 mul_302))
(assert eq_467)
(define-fun mul_305 () Int (* mul_302 floordiv_9))
(define-fun eq_468 () Bool (= floordiv_13 floordiv_14))
(assert eq_468)
(define-fun mul_306 () Int (* mul_289 8))
(define-fun mul_307 () Int (* mul_306 64))
(define-fun eq_469 () Bool (= mul_304 mul_307))
(assert eq_469)
(define-fun eq_470 () Bool (= floordiv_14 floordiv_13))
(assert eq_470)
(define-fun mul_308 () Int (* mul_303 8))
(define-fun mul_309 () Int (* mul_308 64))
(define-fun eq_471 () Bool (= mul_309 0))
(define-fun not__359 () Bool (not eq_471))
(assert not__359)
(define-fun eq_472 () Bool (= floordiv_14 0))
(define-fun not__360 () Bool (not eq_472))
(assert not__360)
(define-fun gt_36 () Bool (> floordiv_14 1))
(assert gt_36)
(define-fun lt_129 () Bool (< 1 mul_302))
(assert lt_129)
(define-fun mul_310 () Int (* mul_238 floordiv_14))
(define-fun mul_311 () Int (* mul_310 64))
(define-fun eq_473 () Bool (= mul_311 0))
(define-fun not__361 () Bool (not eq_473))
(assert not__361)
(define-fun eq_474 () Bool (= mul_302 1))
(define-fun not__362 () Bool (not eq_474))
(assert not__362)
(define-fun lt_130 () Bool (< mul_302 64))
(define-fun not__363 () Bool (not lt_130))
(assert not__363)
(define-fun lt_131 () Bool (< floordiv_14 2))
(define-fun not__364 () Bool (not lt_131))
(assert not__364)
(define-fun lt_132 () Bool (< 512 mul_302))
(assert lt_132)
(define-fun eq_475 () Bool (= mul_302 0))
(define-fun not__365 () Bool (not eq_475))
(assert not__365)
(define-fun lt_133 () Bool (< mul_302 0))
(define-fun not__366 () Bool (not lt_133))
(assert not__366)
(define-fun lt_134 () Bool (< 1 mul_305))
(assert lt_134)
(define-fun ge_58 () Bool (>= floordiv_14 0))
(assert ge_58)
(define-fun mul_312 () Int (* 64 floordiv_14))
(define-fun mul_313 () Int (* mul_312 floordiv_9))
(define-fun mul_314 () Int (* mul_313 8))
(define-fun mul_315 () Int (* mul_313 7))
(define-fun add_109 () Int (+ 1 mul_315))
(define-fun mul_316 () Int (* mul_312 sub_33))
(define-fun add_110 () Int (+ add_109 mul_316))
(define-fun sub_41 () Int (- floordiv_14 1))
(define-fun mul_317 () Int (* 64 sub_41))
(define-fun add_111 () Int (+ add_110 mul_317))
(define-fun add_112 () Int (+ add_111 63))
(define-fun mul_318 () Int (* 4 add_112))
(define-fun eq_476 () Bool (= mul_312 mul_312))
(assert eq_476)
(define-fun eq_477 () Bool (= mul_313 mul_313))
(assert eq_477)
(define-fun eq_478 () Bool (= mul_312 1))
(define-fun not__367 () Bool (not eq_478))
(assert not__367)
(define-fun eq_479 () Bool (= mul_312 0))
(define-fun not__368 () Bool (not eq_479))
(assert not__368)
(define-fun lt_135 () Bool (< mul_312 0))
(define-fun not__369 () Bool (not lt_135))
(assert not__369)
(define-fun lt_136 () Bool (< 1 mul_313))
(assert lt_136)
(define-fun mul_319 () Int (* floordiv_13 64))
(define-fun eq_480 () Bool (= mul_311 mul_319))
(define-fun not__370 () Bool (not eq_480))
(assert not__370)
(define-fun gt_37 () Bool (> mul_319 0))
(assert gt_37)
(define-fun mod_41 () Int (mod mul_311 mul_319))
(define-fun eq_481 () Bool (= mod_41 0))
(assert eq_481)
(define-fun eq_482 () Bool (= mul_319 0))
(define-fun not__371 () Bool (not eq_482))
(assert not__371)
(define-fun floordiv_15 () Int (div mul_311 mul_319))
(define-fun eq_483 () Bool (= floordiv_15 8))
(define-fun not__372 () Bool (not eq_483))
(assert not__372)
(define-fun mod_42 () Int (mod 8 floordiv_15))
(define-fun eq_484 () Bool (= mod_42 0))
(define-fun not__373 () Bool (not eq_484))
(assert not__373)
(define-fun mod_43 () Int (mod mul_238 floordiv_15))
(define-fun eq_485 () Bool (= mod_43 0))
(assert eq_485)
(define-fun mul_320 () Int (* floordiv_9 8))
(define-fun lt_137 () Bool (< mul_313 mul_312))
(define-fun not__374 () Bool (not lt_137))
(assert not__374)
(define-fun gt_38 () Bool (> mul_311 0))
(assert gt_38)
(define-fun mul_321 () Int (* mul_320 floordiv_14))
(define-fun mul_322 () Int (* mul_321 64))
(define-fun eq_486 () Bool (= mul_322 0))
(define-fun not__375 () Bool (not eq_486))
(assert not__375)
(define-fun eq_487 () Bool (= mul_320 1))
(define-fun not__376 () Bool (not eq_487))
(assert not__376)
(define-fun mul_323 () Int (* mul_312 mul_320))
(define-fun eq_488 () Bool (= mul_238 floordiv_15))
(assert eq_488)
(define-fun mul_324 () Int (* mul_320 64))
(define-fun mul_325 () Int (* mul_324 floordiv_14))
(define-fun eq_489 () Bool (= mul_325 0))
(define-fun not__377 () Bool (not eq_489))
(assert not__377)
(define-fun lt_138 () Bool (< mul_320 2))
(define-fun not__378 () Bool (not lt_138))
(assert not__378)
(define-fun lt_139 () Bool (< 1 mul_312))
(assert lt_139)
(define-fun lt_140 () Bool (< 64 mul_312))
(assert lt_140)
(define-fun eq_490 () Bool (= mul_320 mul_320))
(assert eq_490)
(define-fun ge_59 () Bool (>= mul_320 0))
(assert ge_59)
(define-fun mul_326 () Int (* floordiv_14 floordiv_14))
(define-fun eq_491 () Bool (= mul_320 0))
(define-fun not__379 () Bool (not eq_491))
(assert not__379)
(define-fun mul_327 () Int (* mul_326 mul_320))
(define-fun sub_42 () Int (- mul_320 1))
(define-fun mul_328 () Int (* mul_326 sub_42))
(define-fun add_113 () Int (+ 1 mul_328))
(define-fun mul_329 () Int (* floordiv_14 sub_41))
(define-fun add_114 () Int (+ add_113 mul_329))
(define-fun add_115 () Int (+ add_114 sub_41))
(define-fun mul_330 () Int (* 4 add_115))
(define-fun mul_331 () Int (* mul_321 floordiv_14))
(define-fun eq_492 () Bool (= mul_331 0))
(define-fun not__380 () Bool (not eq_492))
(assert not__380)
(define-fun eq_493 () Bool (= floordiv_14 floordiv_14))
(assert eq_493)
(define-fun eq_494 () Bool (= mul_326 mul_326))
(assert eq_494)
(declare-const self_layer_stack_1__slf_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_1__slf_attn_attention_temperature_storage_offset 0)
(define-fun ge_60 () Bool (>= self_layer_stack_1__slf_attn_attention_temperature_storage_offset 0))
(assert ge_60)
(define-fun add_116 () Int (+ self_layer_stack_1__slf_attn_attention_temperature_storage_offset 1))
(define-fun mul_332 () Int (* 8 add_116))
(define-fun lt_141 () Bool (< floordiv_14 0))
(define-fun not__381 () Bool (not lt_141))
(assert not__381)
(define-fun lt_142 () Bool (< mul_320 0))
(define-fun not__382 () Bool (not lt_142))
(assert not__382)
(define-fun eq_495 () Bool (= mul_326 0))
(define-fun not__383 () Bool (not eq_495))
(assert not__383)
(define-fun lt_143 () Bool (< floordiv_14 mul_326))
(assert lt_143)
(define-fun eq_496 () Bool (= slf_attn_mask_size2 floordiv_14))
(assert eq_496)
(define-fun eq_497 () Bool (= slf_attn_mask_size1 floordiv_14))
(assert eq_497)
(define-fun eq_498 () Bool (= mul_94 mul_320))
(assert eq_498)
(define-fun eq_499 () Bool (= mul_320 mul_94))
(assert eq_499)
(define-fun eq_500 () Bool (= floordiv_14 slf_attn_mask_size1))
(assert eq_500)
(define-fun eq_501 () Bool (= floordiv_14 slf_attn_mask_size2))
(assert eq_501)
(define-fun mul_333 () Int (* mul_238 floordiv_13))
(define-fun mul_334 () Int (* mul_333 64))
(define-fun eq_502 () Bool (= mul_118 mul_334))
(assert eq_502)
(define-fun eq_503 () Bool (= floordiv_13 slf_attn_mask_size1))
(assert eq_503)
(define-fun eq_504 () Bool (= mul_128 mul_289))
(define-fun not__384 () Bool (not eq_504))
(assert not__384)
(define-fun gt_39 () Bool (> mul_289 0))
(assert gt_39)
(define-fun mod_44 () Int (mod mul_128 mul_289))
(define-fun eq_505 () Bool (= mod_44 0))
(assert eq_505)
(define-fun floordiv_16 () Int (div mul_128 mul_289))
(define-fun eq_506 () Bool (= slf_attn_mask_size1 floordiv_13))
(assert eq_506)
(define-fun eq_507 () Bool (= floordiv_16 8))
(define-fun not__385 () Bool (not eq_507))
(assert not__385)
(define-fun mod_45 () Int (mod 8 floordiv_16))
(define-fun eq_508 () Bool (= mod_45 0))
(define-fun not__386 () Bool (not eq_508))
(assert not__386)
(define-fun mod_46 () Int (mod 512 floordiv_16))
(define-fun eq_509 () Bool (= mod_46 0))
(assert eq_509)
(define-fun eq_510 () Bool (= floordiv_16 512))
(assert eq_510)
(define-fun eq_511 () Bool (= floordiv_4 floordiv_13))
(assert eq_511)
(define-fun eq_512 () Bool (= floordiv_13 floordiv_4))
(assert eq_512)
(declare-const self_layer_stack_1__enc_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_1__enc_attn_attention_temperature_storage_offset 0)
(define-fun ge_61 () Bool (>= self_layer_stack_1__enc_attn_attention_temperature_storage_offset 0))
(assert ge_61)
(define-fun add_117 () Int (+ self_layer_stack_1__enc_attn_attention_temperature_storage_offset 1))
(define-fun mul_335 () Int (* 8 add_117))
(declare-const self_layer_stack_2__slf_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_2__slf_attn_attention_temperature_storage_offset 0)
(define-fun ge_62 () Bool (>= self_layer_stack_2__slf_attn_attention_temperature_storage_offset 0))
(assert ge_62)
(define-fun add_118 () Int (+ self_layer_stack_2__slf_attn_attention_temperature_storage_offset 1))
(define-fun mul_336 () Int (* 8 add_118))
(declare-const self_layer_stack_2__enc_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_2__enc_attn_attention_temperature_storage_offset 0)
(define-fun ge_63 () Bool (>= self_layer_stack_2__enc_attn_attention_temperature_storage_offset 0))
(assert ge_63)
(define-fun add_119 () Int (+ self_layer_stack_2__enc_attn_attention_temperature_storage_offset 1))
(define-fun mul_337 () Int (* 8 add_119))
(declare-const self_layer_stack_3__slf_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_3__slf_attn_attention_temperature_storage_offset 0)
(define-fun ge_64 () Bool (>= self_layer_stack_3__slf_attn_attention_temperature_storage_offset 0))
(assert ge_64)
(define-fun add_120 () Int (+ self_layer_stack_3__slf_attn_attention_temperature_storage_offset 1))
(define-fun mul_338 () Int (* 8 add_120))
(declare-const self_layer_stack_3__enc_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_3__enc_attn_attention_temperature_storage_offset 0)
(define-fun ge_65 () Bool (>= self_layer_stack_3__enc_attn_attention_temperature_storage_offset 0))
(assert ge_65)
(define-fun add_121 () Int (+ self_layer_stack_3__enc_attn_attention_temperature_storage_offset 1))
(define-fun mul_339 () Int (* 8 add_121))
(declare-const self_layer_stack_4__slf_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_4__slf_attn_attention_temperature_storage_offset 0)
(define-fun ge_66 () Bool (>= self_layer_stack_4__slf_attn_attention_temperature_storage_offset 0))
(assert ge_66)
(define-fun add_122 () Int (+ self_layer_stack_4__slf_attn_attention_temperature_storage_offset 1))
(define-fun mul_340 () Int (* 8 add_122))
(declare-const self_layer_stack_4__enc_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_4__enc_attn_attention_temperature_storage_offset 0)
(define-fun ge_67 () Bool (>= self_layer_stack_4__enc_attn_attention_temperature_storage_offset 0))
(assert ge_67)
(define-fun add_123 () Int (+ self_layer_stack_4__enc_attn_attention_temperature_storage_offset 1))
(define-fun mul_341 () Int (* 8 add_123))
(declare-const self_layer_stack_5__slf_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_5__slf_attn_attention_temperature_storage_offset 0)
(define-fun ge_68 () Bool (>= self_layer_stack_5__slf_attn_attention_temperature_storage_offset 0))
(assert ge_68)
(define-fun add_124 () Int (+ self_layer_stack_5__slf_attn_attention_temperature_storage_offset 1))
(define-fun mul_342 () Int (* 8 add_124))
(declare-const self_layer_stack_5__enc_attn_attention_temperature_storage_offset Int)
(set-info :example-self_layer_stack_5__enc_attn_attention_temperature_storage_offset 0)
(define-fun ge_69 () Bool (>= self_layer_stack_5__enc_attn_attention_temperature_storage_offset 0))
(assert ge_69)
(define-fun add_125 () Int (+ self_layer_stack_5__enc_attn_attention_temperature_storage_offset 1))
(define-fun mul_343 () Int (* 8 add_125))
(define-fun lt_144 () Bool (< 1 mul_291))
(assert lt_144)
(define-fun lt_145 () Bool (< 512 mul_291))
(assert lt_145)
(define-fun mul_344 () Int (* 512 mul_289))
(define-fun eq_513 () Bool (= mul_344 mul_291))
(assert eq_513)
(define-fun mul_345 () Int (* 1014 mul_295))
(define-fun mul_346 () Int (* 1014 sub_40))
(define-fun add_126 () Int (+ 1 mul_346))
(define-fun add_127 () Int (+ add_126 1013))
(define-fun mul_347 () Int (* 4 add_127))
(define-fun mul_348 () Int (* mul_295 1014))
(define-fun eq_514 () Bool (= mul_348 0))
(define-fun not__387 () Bool (not eq_514))
(assert not__387)
(define-fun mul_349 () Int (* mul_289 1014))
(define-fun eq_515 () Bool (= mul_348 mul_349))
(assert eq_515)
(define-fun mul_350 () Int (* 1014 floordiv_14))
(define-fun mul_351 () Int (* mul_303 1014))
(define-fun eq_516 () Bool (= mul_351 0))
(define-fun not__388 () Bool (not eq_516))
(assert not__388)
(define-fun eq_517 () Bool (= mul_350 mul_350))
(assert eq_517)
(define-fun mul_352 () Int (* mul_350 floordiv_9))
(define-fun ge_70 () Bool (>= non_pad_mask_size0 0))
(assert ge_70)
(define-fun ge_71 () Bool (>= non_pad_mask_size1 0))
(assert ge_71)
(define-fun ge_72 () Bool (>= non_pad_mask_size2 0))
(assert ge_72)
(define-fun eq_518 () Bool (= non_pad_mask_size0 0))
(define-fun not__389 () Bool (not eq_518))
(assert not__389)
(define-fun sub_43 () Int (- non_pad_mask_size0 1))
(define-fun mul_353 () Int (* non_pad_mask_stride0 sub_43))
(define-fun add_128 () Int (+ 1 mul_353))
(define-fun eq_519 () Bool (= non_pad_mask_size1 0))
(define-fun not__390 () Bool (not eq_519))
(assert not__390)
(define-fun sub_44 () Int (- non_pad_mask_size1 1))
(define-fun mul_354 () Int (* non_pad_mask_stride1 sub_44))
(define-fun add_129 () Int (+ add_128 mul_354))
(define-fun eq_520 () Bool (= non_pad_mask_size2 0))
(define-fun not__391 () Bool (not eq_520))
(assert not__391)
(define-fun sub_45 () Int (- non_pad_mask_size2 1))
(define-fun mul_355 () Int (* non_pad_mask_stride2 sub_45))
(define-fun add_130 () Int (+ add_129 mul_355))
(define-fun mul_356 () Int (* 4 add_130))
(define-fun eq_521 () Bool (= floordiv_4 non_pad_mask_size1))
(assert eq_521)
(define-fun eq_522 () Bool (= floordiv_2 non_pad_mask_size0))
(assert eq_522)
(define-fun eq_523 () Bool (= non_pad_mask_size0 floordiv_2))
(assert eq_523)
(define-fun eq_524 () Bool (= non_pad_mask_size1 floordiv_4))
(assert eq_524)
(define-fun eq_525 () Bool (= non_pad_mask_size2 512))
(define-fun not__392 () Bool (not eq_525))
(assert not__392)
(define-fun lt_146 () Bool (< non_pad_mask_stride1 non_pad_mask_stride0))
(assert lt_146)
(define-fun lt_147 () Bool (< 0 non_pad_mask_stride1))
(assert lt_147)
(define-fun eq_526 () Bool (= floordiv_11 non_pad_mask_size1))
(assert eq_526)
(define-fun eq_527 () Bool (= floordiv_9 non_pad_mask_size0))
(assert eq_527)
(define-fun eq_528 () Bool (= non_pad_mask_size0 floordiv_9))
(assert eq_528)
(define-fun eq_529 () Bool (= non_pad_mask_size1 floordiv_11))
(assert eq_529)
(define-fun eq_530 () Bool (= floordiv_13 non_pad_mask_size1))
(assert eq_530)
(define-fun eq_531 () Bool (= non_pad_mask_size1 floordiv_13))
(assert eq_531)
(define-fun eq_532 () Bool (= mul_11 0))
(define-fun not__393 () Bool (not eq_532))
(assert not__393)
(define-fun eq_533 () Bool (= mul_19 0))
(define-fun not__394 () Bool (not eq_533))
(assert not__394)
(define-fun eq_534 () Bool (= mul_34 0))
(define-fun not__395 () Bool (not eq_534))
(assert not__395)
(define-fun eq_535 () Bool (= mul_46 0))
(define-fun not__396 () Bool (not eq_535))
(assert not__396)
(define-fun eq_536 () Bool (= add_27 0))
(define-fun not__397 () Bool (not eq_536))
(assert not__397)
(define-fun eq_537 () Bool (= add_30 0))
(define-fun not__398 () Bool (not eq_537))
(assert not__398)
(define-fun eq_538 () Bool (= mul_108 0))
(define-fun not__399 () Bool (not eq_538))
(assert not__399)
(define-fun eq_539 () Bool (= mul_224 0))
(define-fun not__400 () Bool (not eq_539))
(assert not__400)
(define-fun eq_540 () Bool (= mul_332 0))
(define-fun not__401 () Bool (not eq_540))
(assert not__401)
(define-fun eq_541 () Bool (= mul_335 0))
(define-fun not__402 () Bool (not eq_541))
(assert not__402)
(define-fun eq_542 () Bool (= mul_336 0))
(define-fun not__403 () Bool (not eq_542))
(assert not__403)
(define-fun eq_543 () Bool (= mul_337 0))
(define-fun not__404 () Bool (not eq_543))
(assert not__404)
(define-fun eq_544 () Bool (= mul_338 0))
(define-fun not__405 () Bool (not eq_544))
(assert not__405)
(define-fun eq_545 () Bool (= mul_339 0))
(define-fun not__406 () Bool (not eq_545))
(assert not__406)
(define-fun eq_546 () Bool (= mul_340 0))
(define-fun not__407 () Bool (not eq_546))
(assert not__407)
(define-fun eq_547 () Bool (= mul_341 0))
(define-fun not__408 () Bool (not eq_547))
(assert not__408)
(define-fun eq_548 () Bool (= mul_342 0))
(define-fun not__409 () Bool (not eq_548))
(assert not__409)
(define-fun eq_549 () Bool (= mul_343 0))
(define-fun not__410 () Bool (not eq_549))
(assert not__410)
(define-fun eq_550 () Bool (= mul_347 0))
(define-fun not__411 () Bool (not eq_550))
(assert not__411)
(define-fun output0_size0 () Int floordiv_9)
(define-fun output0_size1 () Int floordiv_14)
(define-fun output0_size2 () Int 1014)
(define-fun output0_stride0 () Int mul_350)
(define-fun output0_stride1 () Int 1014)
(define-fun output0_stride2 () Int 1)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-value (___stack1_size0 ___stack1_size1 ___stack1_size2 ___stack1_stride0 ___stack1_stride1 ___stack1_stride2 ___stack1_storage_offset ___stack2__base_size0 ___stack2__base_size1 ___stack2__base_size2 ___stack2__base_stride0 ___stack2__base_stride1 ___stack2__base_stride2 ___stack2__base_storage_offset ___stack2_size0 ___stack2_size1 ___stack2_size2 ___stack2_stride0 ___stack2_stride1 ___stack2_stride2 ___stack2_storage_offset encoder_padded_outputs_size0 encoder_padded_outputs_size1 encoder_padded_outputs_size2 encoder_padded_outputs_stride0 encoder_padded_outputs_stride1 encoder_padded_outputs_stride2 encoder_padded_outputs_storage_offset ys_out_pad_size0 ys_out_pad_size1 ys_out_pad_stride0 ys_out_pad_stride1 ys_out_pad_storage_offset non_pad_mask__base_size0 non_pad_mask__base_size1 non_pad_mask__base_stride0 non_pad_mask__base_stride1 non_pad_mask__base_storage_offset non_pad_mask_size0 non_pad_mask_size1 non_pad_mask_size2 non_pad_mask_stride0 non_pad_mask_stride1 non_pad_mask_stride2 non_pad_mask_storage_offset slf_attn_mask_size0 slf_attn_mask_size1 slf_attn_mask_size2 slf_attn_mask_stride0 slf_attn_mask_stride1 slf_attn_mask_stride2 slf_attn_mask_storage_offset dec_enc_attn_mask__base_size0 dec_enc_attn_mask__base_size1 dec_enc_attn_mask__base_stride0 dec_enc_attn_mask__base_stride1 dec_enc_attn_mask__base_storage_offset dec_enc_attn_mask_size0 dec_enc_attn_mask_size1 dec_enc_attn_mask_size2 dec_enc_attn_mask_stride0 dec_enc_attn_mask_stride1 dec_enc_attn_mask_stride2 dec_enc_attn_mask_storage_offset self_layer_stack_0__slf_attn_attention_temperature_storage_offset self_layer_stack_0__enc_attn_attention_temperature_storage_offset self_layer_stack_1__slf_attn_attention_temperature_storage_offset self_layer_stack_1__enc_attn_attention_temperature_storage_offset self_layer_stack_2__slf_attn_attention_temperature_storage_offset self_layer_stack_2__enc_attn_attention_temperature_storage_offset self_layer_stack_3__slf_attn_attention_temperature_storage_offset self_layer_stack_3__enc_attn_attention_temperature_storage_offset self_layer_stack_4__slf_attn_attention_temperature_storage_offset self_layer_stack_4__enc_attn_attention_temperature_storage_offset self_layer_stack_5__slf_attn_attention_temperature_storage_offset self_layer_stack_5__enc_attn_attention_temperature_storage_offset output0_size0 output0_size1 output0_size2 output0_stride0 output0_stride1 output0_stride2 output0_storage_offset))

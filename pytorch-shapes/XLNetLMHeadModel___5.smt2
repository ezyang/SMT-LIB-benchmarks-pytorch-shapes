(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const ___stack0_last_hidden_state__base_size0 Int)
(set-info :example-___stack0_last_hidden_state__base_size0 512)
(declare-const ___stack0_last_hidden_state__base_size1 Int)
(set-info :example-___stack0_last_hidden_state__base_size1 1)
(declare-const ___stack0_last_hidden_state__base_size2 Int)
(set-info :example-___stack0_last_hidden_state__base_size2 1024)
(declare-const ___stack0_last_hidden_state__base_stride0 Int)
(set-info :example-___stack0_last_hidden_state__base_stride0 1024)
(declare-const ___stack0_last_hidden_state__base_stride1 Int)
(set-info :example-___stack0_last_hidden_state__base_stride1 1024)
(declare-const ___stack0_last_hidden_state__base_stride2 Int)
(set-info :example-___stack0_last_hidden_state__base_stride2 1)
(declare-const ___stack0_last_hidden_state__base_storage_offset Int)
(set-info :example-___stack0_last_hidden_state__base_storage_offset 0)
(define-fun ge () Bool (>= ___stack0_last_hidden_state__base_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= ___stack0_last_hidden_state__base_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= ___stack0_last_hidden_state__base_size2 0))
(assert ge_2)
(define-fun eq () Bool (= ___stack0_last_hidden_state__base_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- ___stack0_last_hidden_state__base_size0 1))
(define-fun mul () Int (* ___stack0_last_hidden_state__base_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= ___stack0_last_hidden_state__base_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- ___stack0_last_hidden_state__base_size1 1))
(define-fun mul_1 () Int (* ___stack0_last_hidden_state__base_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= ___stack0_last_hidden_state__base_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- ___stack0_last_hidden_state__base_size2 1))
(define-fun mul_2 () Int (* ___stack0_last_hidden_state__base_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun mul_3 () Int (* 4 add_2))
(define-fun mul_4 () Int (* ___stack0_last_hidden_state__base_size0 ___stack0_last_hidden_state__base_size1))
(define-fun mul_5 () Int (* mul_4 ___stack0_last_hidden_state__base_size2))
(define-fun eq_3 () Bool (= mul_5 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun eq_4 () Bool (= ___stack0_last_hidden_state__base_size2 1))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= ___stack0_last_hidden_state__base_stride2 1))
(assert eq_5)
(define-fun eq_6 () Bool (= ___stack0_last_hidden_state__base_size1 1))
(assert eq_6)
(define-fun eq_7 () Bool (= ___stack0_last_hidden_state__base_size0 1))
(define-fun not__5 () Bool (not eq_7))
(assert not__5)
(define-fun eq_8 () Bool (= ___stack0_last_hidden_state__base_stride0 ___stack0_last_hidden_state__base_size2))
(assert eq_8)
(define-fun mul_6 () Int (* ___stack0_last_hidden_state__base_size2 ___stack0_last_hidden_state__base_size0))
(define-fun ge_3 () Bool (>= ___stack0_last_hidden_state__base_storage_offset 0))
(assert ge_3)
(define-fun add_3 () Int (+ ___stack0_last_hidden_state__base_storage_offset add_2))
(define-fun mul_7 () Int (* 4 add_3))
(declare-const ___stack0_last_hidden_state_size0 Int)
(set-info :example-___stack0_last_hidden_state_size0 1)
(declare-const ___stack0_last_hidden_state_size1 Int)
(set-info :example-___stack0_last_hidden_state_size1 512)
(declare-const ___stack0_last_hidden_state_size2 Int)
(set-info :example-___stack0_last_hidden_state_size2 1024)
(declare-const ___stack0_last_hidden_state_stride0 Int)
(set-info :example-___stack0_last_hidden_state_stride0 1024)
(declare-const ___stack0_last_hidden_state_stride1 Int)
(set-info :example-___stack0_last_hidden_state_stride1 1024)
(declare-const ___stack0_last_hidden_state_stride2 Int)
(set-info :example-___stack0_last_hidden_state_stride2 1)
(declare-const ___stack0_last_hidden_state_storage_offset Int)
(set-info :example-___stack0_last_hidden_state_storage_offset 0)
(define-fun eq_9 () Bool (= ___stack0_last_hidden_state__base_size0 -1))
(define-fun not__6 () Bool (not eq_9))
(assert not__6)
(define-fun eq_10 () Bool (= ___stack0_last_hidden_state__base_size1 -1))
(define-fun not__7 () Bool (not eq_10))
(assert not__7)
(define-fun eq_11 () Bool (= ___stack0_last_hidden_state__base_size2 -1))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun eq_12 () Bool (= mul_5 mul_5))
(assert eq_12)
(define-fun eq_13 () Bool (= ___stack0_last_hidden_state__base_size0 ___stack0_last_hidden_state__base_size0))
(assert eq_13)
(define-fun eq_14 () Bool (= ___stack0_last_hidden_state__base_size1 ___stack0_last_hidden_state__base_size1))
(assert eq_14)
(define-fun eq_15 () Bool (= ___stack0_last_hidden_state__base_size2 ___stack0_last_hidden_state__base_size2))
(assert eq_15)
(define-fun mul_8 () Int (* ___stack0_last_hidden_state_size0 ___stack0_last_hidden_state_size1))
(define-fun mul_9 () Int (* mul_8 ___stack0_last_hidden_state_size2))
(define-fun eq_16 () Bool (= mul_9 0))
(define-fun not__9 () Bool (not eq_16))
(assert not__9)
(define-fun eq_17 () Bool (= ___stack0_last_hidden_state_size2 1))
(define-fun not__10 () Bool (not eq_17))
(assert not__10)
(define-fun eq_18 () Bool (= ___stack0_last_hidden_state_stride2 1))
(assert eq_18)
(define-fun eq_19 () Bool (= ___stack0_last_hidden_state_size1 1))
(define-fun not__11 () Bool (not eq_19))
(assert not__11)
(define-fun eq_20 () Bool (= ___stack0_last_hidden_state_stride1 ___stack0_last_hidden_state_size2))
(assert eq_20)
(define-fun mul_10 () Int (* ___stack0_last_hidden_state_size2 ___stack0_last_hidden_state_size1))
(define-fun eq_21 () Bool (= ___stack0_last_hidden_state_size0 1))
(assert eq_21)
(declare-const ___stack0_mems_0__size0 Int)
(set-info :example-___stack0_mems_0__size0 512)
(declare-const ___stack0_mems_0__size1 Int)
(set-info :example-___stack0_mems_0__size1 1)
(declare-const ___stack0_mems_0__size2 Int)
(set-info :example-___stack0_mems_0__size2 1024)
(declare-const ___stack0_mems_0__stride0 Int)
(set-info :example-___stack0_mems_0__stride0 1024)
(declare-const ___stack0_mems_0__stride1 Int)
(set-info :example-___stack0_mems_0__stride1 1024)
(declare-const ___stack0_mems_0__stride2 Int)
(set-info :example-___stack0_mems_0__stride2 1)
(declare-const ___stack0_mems_0__storage_offset Int)
(set-info :example-___stack0_mems_0__storage_offset 0)
(define-fun ge_4 () Bool (>= ___stack0_mems_0__size0 0))
(assert ge_4)
(define-fun ge_5 () Bool (>= ___stack0_mems_0__size1 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= ___stack0_mems_0__size2 0))
(assert ge_6)
(define-fun eq_22 () Bool (= ___stack0_mems_0__size0 0))
(define-fun not__12 () Bool (not eq_22))
(assert not__12)
(define-fun sub_3 () Int (- ___stack0_mems_0__size0 1))
(define-fun mul_11 () Int (* ___stack0_mems_0__stride0 sub_3))
(define-fun add_4 () Int (+ 1 mul_11))
(define-fun eq_23 () Bool (= ___stack0_mems_0__size1 0))
(define-fun not__13 () Bool (not eq_23))
(assert not__13)
(define-fun sub_4 () Int (- ___stack0_mems_0__size1 1))
(define-fun mul_12 () Int (* ___stack0_mems_0__stride1 sub_4))
(define-fun add_5 () Int (+ add_4 mul_12))
(define-fun eq_24 () Bool (= ___stack0_mems_0__size2 0))
(define-fun not__14 () Bool (not eq_24))
(assert not__14)
(define-fun sub_5 () Int (- ___stack0_mems_0__size2 1))
(define-fun mul_13 () Int (* ___stack0_mems_0__stride2 sub_5))
(define-fun add_6 () Int (+ add_5 mul_13))
(define-fun mul_14 () Int (* 4 add_6))
(define-fun mul_15 () Int (* ___stack0_mems_0__size0 ___stack0_mems_0__size1))
(define-fun mul_16 () Int (* mul_15 ___stack0_mems_0__size2))
(define-fun eq_25 () Bool (= mul_16 0))
(define-fun not__15 () Bool (not eq_25))
(assert not__15)
(define-fun eq_26 () Bool (= ___stack0_mems_0__size2 1))
(define-fun not__16 () Bool (not eq_26))
(assert not__16)
(define-fun eq_27 () Bool (= ___stack0_mems_0__stride2 1))
(assert eq_27)
(define-fun eq_28 () Bool (= ___stack0_mems_0__size1 1))
(assert eq_28)
(define-fun eq_29 () Bool (= ___stack0_mems_0__size0 1))
(define-fun not__17 () Bool (not eq_29))
(assert not__17)
(define-fun eq_30 () Bool (= ___stack0_mems_0__stride0 ___stack0_mems_0__size2))
(assert eq_30)
(define-fun mul_17 () Int (* ___stack0_mems_0__size2 ___stack0_mems_0__size0))
(define-fun ge_7 () Bool (>= ___stack0_mems_0__storage_offset 0))
(assert ge_7)
(define-fun add_7 () Int (+ ___stack0_mems_0__storage_offset add_6))
(define-fun mul_18 () Int (* 4 add_7))
(declare-const ___stack0_mems_1__size0 Int)
(set-info :example-___stack0_mems_1__size0 512)
(declare-const ___stack0_mems_1__size1 Int)
(set-info :example-___stack0_mems_1__size1 1)
(declare-const ___stack0_mems_1__size2 Int)
(set-info :example-___stack0_mems_1__size2 1024)
(declare-const ___stack0_mems_1__stride0 Int)
(set-info :example-___stack0_mems_1__stride0 1024)
(declare-const ___stack0_mems_1__stride1 Int)
(set-info :example-___stack0_mems_1__stride1 1024)
(declare-const ___stack0_mems_1__stride2 Int)
(set-info :example-___stack0_mems_1__stride2 1)
(declare-const ___stack0_mems_1__storage_offset Int)
(set-info :example-___stack0_mems_1__storage_offset 0)
(define-fun ge_8 () Bool (>= ___stack0_mems_1__size0 0))
(assert ge_8)
(define-fun ge_9 () Bool (>= ___stack0_mems_1__size1 0))
(assert ge_9)
(define-fun ge_10 () Bool (>= ___stack0_mems_1__size2 0))
(assert ge_10)
(define-fun eq_31 () Bool (= ___stack0_mems_1__size0 0))
(define-fun not__18 () Bool (not eq_31))
(assert not__18)
(define-fun sub_6 () Int (- ___stack0_mems_1__size0 1))
(define-fun mul_19 () Int (* ___stack0_mems_1__stride0 sub_6))
(define-fun add_8 () Int (+ 1 mul_19))
(define-fun eq_32 () Bool (= ___stack0_mems_1__size1 0))
(define-fun not__19 () Bool (not eq_32))
(assert not__19)
(define-fun sub_7 () Int (- ___stack0_mems_1__size1 1))
(define-fun mul_20 () Int (* ___stack0_mems_1__stride1 sub_7))
(define-fun add_9 () Int (+ add_8 mul_20))
(define-fun eq_33 () Bool (= ___stack0_mems_1__size2 0))
(define-fun not__20 () Bool (not eq_33))
(assert not__20)
(define-fun sub_8 () Int (- ___stack0_mems_1__size2 1))
(define-fun mul_21 () Int (* ___stack0_mems_1__stride2 sub_8))
(define-fun add_10 () Int (+ add_9 mul_21))
(define-fun mul_22 () Int (* 4 add_10))
(define-fun mul_23 () Int (* ___stack0_mems_1__size0 ___stack0_mems_1__size1))
(define-fun mul_24 () Int (* mul_23 ___stack0_mems_1__size2))
(define-fun eq_34 () Bool (= mul_24 0))
(define-fun not__21 () Bool (not eq_34))
(assert not__21)
(define-fun eq_35 () Bool (= ___stack0_mems_1__size2 1))
(define-fun not__22 () Bool (not eq_35))
(assert not__22)
(define-fun eq_36 () Bool (= ___stack0_mems_1__stride2 1))
(assert eq_36)
(define-fun eq_37 () Bool (= ___stack0_mems_1__size1 1))
(assert eq_37)
(define-fun eq_38 () Bool (= ___stack0_mems_1__size0 1))
(define-fun not__23 () Bool (not eq_38))
(assert not__23)
(define-fun eq_39 () Bool (= ___stack0_mems_1__stride0 ___stack0_mems_1__size2))
(assert eq_39)
(define-fun mul_25 () Int (* ___stack0_mems_1__size2 ___stack0_mems_1__size0))
(define-fun ge_11 () Bool (>= ___stack0_mems_1__storage_offset 0))
(assert ge_11)
(define-fun add_11 () Int (+ ___stack0_mems_1__storage_offset add_10))
(define-fun mul_26 () Int (* 4 add_11))
(declare-const ___stack0_mems_2__size0 Int)
(set-info :example-___stack0_mems_2__size0 512)
(declare-const ___stack0_mems_2__size1 Int)
(set-info :example-___stack0_mems_2__size1 1)
(declare-const ___stack0_mems_2__size2 Int)
(set-info :example-___stack0_mems_2__size2 1024)
(declare-const ___stack0_mems_2__stride0 Int)
(set-info :example-___stack0_mems_2__stride0 1024)
(declare-const ___stack0_mems_2__stride1 Int)
(set-info :example-___stack0_mems_2__stride1 1024)
(declare-const ___stack0_mems_2__stride2 Int)
(set-info :example-___stack0_mems_2__stride2 1)
(declare-const ___stack0_mems_2__storage_offset Int)
(set-info :example-___stack0_mems_2__storage_offset 0)
(define-fun ge_12 () Bool (>= ___stack0_mems_2__size0 0))
(assert ge_12)
(define-fun ge_13 () Bool (>= ___stack0_mems_2__size1 0))
(assert ge_13)
(define-fun ge_14 () Bool (>= ___stack0_mems_2__size2 0))
(assert ge_14)
(define-fun eq_40 () Bool (= ___stack0_mems_2__size0 0))
(define-fun not__24 () Bool (not eq_40))
(assert not__24)
(define-fun sub_9 () Int (- ___stack0_mems_2__size0 1))
(define-fun mul_27 () Int (* ___stack0_mems_2__stride0 sub_9))
(define-fun add_12 () Int (+ 1 mul_27))
(define-fun eq_41 () Bool (= ___stack0_mems_2__size1 0))
(define-fun not__25 () Bool (not eq_41))
(assert not__25)
(define-fun sub_10 () Int (- ___stack0_mems_2__size1 1))
(define-fun mul_28 () Int (* ___stack0_mems_2__stride1 sub_10))
(define-fun add_13 () Int (+ add_12 mul_28))
(define-fun eq_42 () Bool (= ___stack0_mems_2__size2 0))
(define-fun not__26 () Bool (not eq_42))
(assert not__26)
(define-fun sub_11 () Int (- ___stack0_mems_2__size2 1))
(define-fun mul_29 () Int (* ___stack0_mems_2__stride2 sub_11))
(define-fun add_14 () Int (+ add_13 mul_29))
(define-fun mul_30 () Int (* 4 add_14))
(define-fun mul_31 () Int (* ___stack0_mems_2__size0 ___stack0_mems_2__size1))
(define-fun mul_32 () Int (* mul_31 ___stack0_mems_2__size2))
(define-fun eq_43 () Bool (= mul_32 0))
(define-fun not__27 () Bool (not eq_43))
(assert not__27)
(define-fun eq_44 () Bool (= ___stack0_mems_2__size2 1))
(define-fun not__28 () Bool (not eq_44))
(assert not__28)
(define-fun eq_45 () Bool (= ___stack0_mems_2__stride2 1))
(assert eq_45)
(define-fun eq_46 () Bool (= ___stack0_mems_2__size1 1))
(assert eq_46)
(define-fun eq_47 () Bool (= ___stack0_mems_2__size0 1))
(define-fun not__29 () Bool (not eq_47))
(assert not__29)
(define-fun eq_48 () Bool (= ___stack0_mems_2__stride0 ___stack0_mems_2__size2))
(assert eq_48)
(define-fun mul_33 () Int (* ___stack0_mems_2__size2 ___stack0_mems_2__size0))
(define-fun ge_15 () Bool (>= ___stack0_mems_2__storage_offset 0))
(assert ge_15)
(define-fun add_15 () Int (+ ___stack0_mems_2__storage_offset add_14))
(define-fun mul_34 () Int (* 4 add_15))
(declare-const ___stack0_mems_3__size0 Int)
(set-info :example-___stack0_mems_3__size0 512)
(declare-const ___stack0_mems_3__size1 Int)
(set-info :example-___stack0_mems_3__size1 1)
(declare-const ___stack0_mems_3__size2 Int)
(set-info :example-___stack0_mems_3__size2 1024)
(declare-const ___stack0_mems_3__stride0 Int)
(set-info :example-___stack0_mems_3__stride0 1024)
(declare-const ___stack0_mems_3__stride1 Int)
(set-info :example-___stack0_mems_3__stride1 1024)
(declare-const ___stack0_mems_3__stride2 Int)
(set-info :example-___stack0_mems_3__stride2 1)
(declare-const ___stack0_mems_3__storage_offset Int)
(set-info :example-___stack0_mems_3__storage_offset 0)
(define-fun ge_16 () Bool (>= ___stack0_mems_3__size0 0))
(assert ge_16)
(define-fun ge_17 () Bool (>= ___stack0_mems_3__size1 0))
(assert ge_17)
(define-fun ge_18 () Bool (>= ___stack0_mems_3__size2 0))
(assert ge_18)
(define-fun eq_49 () Bool (= ___stack0_mems_3__size0 0))
(define-fun not__30 () Bool (not eq_49))
(assert not__30)
(define-fun sub_12 () Int (- ___stack0_mems_3__size0 1))
(define-fun mul_35 () Int (* ___stack0_mems_3__stride0 sub_12))
(define-fun add_16 () Int (+ 1 mul_35))
(define-fun eq_50 () Bool (= ___stack0_mems_3__size1 0))
(define-fun not__31 () Bool (not eq_50))
(assert not__31)
(define-fun sub_13 () Int (- ___stack0_mems_3__size1 1))
(define-fun mul_36 () Int (* ___stack0_mems_3__stride1 sub_13))
(define-fun add_17 () Int (+ add_16 mul_36))
(define-fun eq_51 () Bool (= ___stack0_mems_3__size2 0))
(define-fun not__32 () Bool (not eq_51))
(assert not__32)
(define-fun sub_14 () Int (- ___stack0_mems_3__size2 1))
(define-fun mul_37 () Int (* ___stack0_mems_3__stride2 sub_14))
(define-fun add_18 () Int (+ add_17 mul_37))
(define-fun mul_38 () Int (* 4 add_18))
(define-fun mul_39 () Int (* ___stack0_mems_3__size0 ___stack0_mems_3__size1))
(define-fun mul_40 () Int (* mul_39 ___stack0_mems_3__size2))
(define-fun eq_52 () Bool (= mul_40 0))
(define-fun not__33 () Bool (not eq_52))
(assert not__33)
(define-fun eq_53 () Bool (= ___stack0_mems_3__size2 1))
(define-fun not__34 () Bool (not eq_53))
(assert not__34)
(define-fun eq_54 () Bool (= ___stack0_mems_3__stride2 1))
(assert eq_54)
(define-fun eq_55 () Bool (= ___stack0_mems_3__size1 1))
(assert eq_55)
(define-fun eq_56 () Bool (= ___stack0_mems_3__size0 1))
(define-fun not__35 () Bool (not eq_56))
(assert not__35)
(define-fun eq_57 () Bool (= ___stack0_mems_3__stride0 ___stack0_mems_3__size2))
(assert eq_57)
(define-fun mul_41 () Int (* ___stack0_mems_3__size2 ___stack0_mems_3__size0))
(define-fun ge_19 () Bool (>= ___stack0_mems_3__storage_offset 0))
(assert ge_19)
(define-fun add_19 () Int (+ ___stack0_mems_3__storage_offset add_18))
(define-fun mul_42 () Int (* 4 add_19))
(declare-const ___stack0_mems_4__size0 Int)
(set-info :example-___stack0_mems_4__size0 512)
(declare-const ___stack0_mems_4__size1 Int)
(set-info :example-___stack0_mems_4__size1 1)
(declare-const ___stack0_mems_4__size2 Int)
(set-info :example-___stack0_mems_4__size2 1024)
(declare-const ___stack0_mems_4__stride0 Int)
(set-info :example-___stack0_mems_4__stride0 1024)
(declare-const ___stack0_mems_4__stride1 Int)
(set-info :example-___stack0_mems_4__stride1 1024)
(declare-const ___stack0_mems_4__stride2 Int)
(set-info :example-___stack0_mems_4__stride2 1)
(declare-const ___stack0_mems_4__storage_offset Int)
(set-info :example-___stack0_mems_4__storage_offset 0)
(define-fun ge_20 () Bool (>= ___stack0_mems_4__size0 0))
(assert ge_20)
(define-fun ge_21 () Bool (>= ___stack0_mems_4__size1 0))
(assert ge_21)
(define-fun ge_22 () Bool (>= ___stack0_mems_4__size2 0))
(assert ge_22)
(define-fun eq_58 () Bool (= ___stack0_mems_4__size0 0))
(define-fun not__36 () Bool (not eq_58))
(assert not__36)
(define-fun sub_15 () Int (- ___stack0_mems_4__size0 1))
(define-fun mul_43 () Int (* ___stack0_mems_4__stride0 sub_15))
(define-fun add_20 () Int (+ 1 mul_43))
(define-fun eq_59 () Bool (= ___stack0_mems_4__size1 0))
(define-fun not__37 () Bool (not eq_59))
(assert not__37)
(define-fun sub_16 () Int (- ___stack0_mems_4__size1 1))
(define-fun mul_44 () Int (* ___stack0_mems_4__stride1 sub_16))
(define-fun add_21 () Int (+ add_20 mul_44))
(define-fun eq_60 () Bool (= ___stack0_mems_4__size2 0))
(define-fun not__38 () Bool (not eq_60))
(assert not__38)
(define-fun sub_17 () Int (- ___stack0_mems_4__size2 1))
(define-fun mul_45 () Int (* ___stack0_mems_4__stride2 sub_17))
(define-fun add_22 () Int (+ add_21 mul_45))
(define-fun mul_46 () Int (* 4 add_22))
(define-fun mul_47 () Int (* ___stack0_mems_4__size0 ___stack0_mems_4__size1))
(define-fun mul_48 () Int (* mul_47 ___stack0_mems_4__size2))
(define-fun eq_61 () Bool (= mul_48 0))
(define-fun not__39 () Bool (not eq_61))
(assert not__39)
(define-fun eq_62 () Bool (= ___stack0_mems_4__size2 1))
(define-fun not__40 () Bool (not eq_62))
(assert not__40)
(define-fun eq_63 () Bool (= ___stack0_mems_4__stride2 1))
(assert eq_63)
(define-fun eq_64 () Bool (= ___stack0_mems_4__size1 1))
(assert eq_64)
(define-fun eq_65 () Bool (= ___stack0_mems_4__size0 1))
(define-fun not__41 () Bool (not eq_65))
(assert not__41)
(define-fun eq_66 () Bool (= ___stack0_mems_4__stride0 ___stack0_mems_4__size2))
(assert eq_66)
(define-fun mul_49 () Int (* ___stack0_mems_4__size2 ___stack0_mems_4__size0))
(define-fun ge_23 () Bool (>= ___stack0_mems_4__storage_offset 0))
(assert ge_23)
(define-fun add_23 () Int (+ ___stack0_mems_4__storage_offset add_22))
(define-fun mul_50 () Int (* 4 add_23))
(declare-const ___stack0_mems_5__size0 Int)
(set-info :example-___stack0_mems_5__size0 512)
(declare-const ___stack0_mems_5__size1 Int)
(set-info :example-___stack0_mems_5__size1 1)
(declare-const ___stack0_mems_5__size2 Int)
(set-info :example-___stack0_mems_5__size2 1024)
(declare-const ___stack0_mems_5__stride0 Int)
(set-info :example-___stack0_mems_5__stride0 1024)
(declare-const ___stack0_mems_5__stride1 Int)
(set-info :example-___stack0_mems_5__stride1 1024)
(declare-const ___stack0_mems_5__stride2 Int)
(set-info :example-___stack0_mems_5__stride2 1)
(declare-const ___stack0_mems_5__storage_offset Int)
(set-info :example-___stack0_mems_5__storage_offset 0)
(define-fun ge_24 () Bool (>= ___stack0_mems_5__size0 0))
(assert ge_24)
(define-fun ge_25 () Bool (>= ___stack0_mems_5__size1 0))
(assert ge_25)
(define-fun ge_26 () Bool (>= ___stack0_mems_5__size2 0))
(assert ge_26)
(define-fun eq_67 () Bool (= ___stack0_mems_5__size0 0))
(define-fun not__42 () Bool (not eq_67))
(assert not__42)
(define-fun sub_18 () Int (- ___stack0_mems_5__size0 1))
(define-fun mul_51 () Int (* ___stack0_mems_5__stride0 sub_18))
(define-fun add_24 () Int (+ 1 mul_51))
(define-fun eq_68 () Bool (= ___stack0_mems_5__size1 0))
(define-fun not__43 () Bool (not eq_68))
(assert not__43)
(define-fun sub_19 () Int (- ___stack0_mems_5__size1 1))
(define-fun mul_52 () Int (* ___stack0_mems_5__stride1 sub_19))
(define-fun add_25 () Int (+ add_24 mul_52))
(define-fun eq_69 () Bool (= ___stack0_mems_5__size2 0))
(define-fun not__44 () Bool (not eq_69))
(assert not__44)
(define-fun sub_20 () Int (- ___stack0_mems_5__size2 1))
(define-fun mul_53 () Int (* ___stack0_mems_5__stride2 sub_20))
(define-fun add_26 () Int (+ add_25 mul_53))
(define-fun mul_54 () Int (* 4 add_26))
(define-fun mul_55 () Int (* ___stack0_mems_5__size0 ___stack0_mems_5__size1))
(define-fun mul_56 () Int (* mul_55 ___stack0_mems_5__size2))
(define-fun eq_70 () Bool (= mul_56 0))
(define-fun not__45 () Bool (not eq_70))
(assert not__45)
(define-fun eq_71 () Bool (= ___stack0_mems_5__size2 1))
(define-fun not__46 () Bool (not eq_71))
(assert not__46)
(define-fun eq_72 () Bool (= ___stack0_mems_5__stride2 1))
(assert eq_72)
(define-fun eq_73 () Bool (= ___stack0_mems_5__size1 1))
(assert eq_73)
(define-fun eq_74 () Bool (= ___stack0_mems_5__size0 1))
(define-fun not__47 () Bool (not eq_74))
(assert not__47)
(define-fun eq_75 () Bool (= ___stack0_mems_5__stride0 ___stack0_mems_5__size2))
(assert eq_75)
(define-fun mul_57 () Int (* ___stack0_mems_5__size2 ___stack0_mems_5__size0))
(define-fun ge_27 () Bool (>= ___stack0_mems_5__storage_offset 0))
(assert ge_27)
(define-fun add_27 () Int (+ ___stack0_mems_5__storage_offset add_26))
(define-fun mul_58 () Int (* 4 add_27))
(declare-const ___stack0_mems_6__size0 Int)
(set-info :example-___stack0_mems_6__size0 512)
(declare-const ___stack0_mems_6__size1 Int)
(set-info :example-___stack0_mems_6__size1 1)
(declare-const ___stack0_mems_6__size2 Int)
(set-info :example-___stack0_mems_6__size2 1024)
(declare-const ___stack0_mems_6__stride0 Int)
(set-info :example-___stack0_mems_6__stride0 1024)
(declare-const ___stack0_mems_6__stride1 Int)
(set-info :example-___stack0_mems_6__stride1 1024)
(declare-const ___stack0_mems_6__stride2 Int)
(set-info :example-___stack0_mems_6__stride2 1)
(declare-const ___stack0_mems_6__storage_offset Int)
(set-info :example-___stack0_mems_6__storage_offset 0)
(define-fun ge_28 () Bool (>= ___stack0_mems_6__size0 0))
(assert ge_28)
(define-fun ge_29 () Bool (>= ___stack0_mems_6__size1 0))
(assert ge_29)
(define-fun ge_30 () Bool (>= ___stack0_mems_6__size2 0))
(assert ge_30)
(define-fun eq_76 () Bool (= ___stack0_mems_6__size0 0))
(define-fun not__48 () Bool (not eq_76))
(assert not__48)
(define-fun sub_21 () Int (- ___stack0_mems_6__size0 1))
(define-fun mul_59 () Int (* ___stack0_mems_6__stride0 sub_21))
(define-fun add_28 () Int (+ 1 mul_59))
(define-fun eq_77 () Bool (= ___stack0_mems_6__size1 0))
(define-fun not__49 () Bool (not eq_77))
(assert not__49)
(define-fun sub_22 () Int (- ___stack0_mems_6__size1 1))
(define-fun mul_60 () Int (* ___stack0_mems_6__stride1 sub_22))
(define-fun add_29 () Int (+ add_28 mul_60))
(define-fun eq_78 () Bool (= ___stack0_mems_6__size2 0))
(define-fun not__50 () Bool (not eq_78))
(assert not__50)
(define-fun sub_23 () Int (- ___stack0_mems_6__size2 1))
(define-fun mul_61 () Int (* ___stack0_mems_6__stride2 sub_23))
(define-fun add_30 () Int (+ add_29 mul_61))
(define-fun mul_62 () Int (* 4 add_30))
(define-fun mul_63 () Int (* ___stack0_mems_6__size0 ___stack0_mems_6__size1))
(define-fun mul_64 () Int (* mul_63 ___stack0_mems_6__size2))
(define-fun eq_79 () Bool (= mul_64 0))
(define-fun not__51 () Bool (not eq_79))
(assert not__51)
(define-fun eq_80 () Bool (= ___stack0_mems_6__size2 1))
(define-fun not__52 () Bool (not eq_80))
(assert not__52)
(define-fun eq_81 () Bool (= ___stack0_mems_6__stride2 1))
(assert eq_81)
(define-fun eq_82 () Bool (= ___stack0_mems_6__size1 1))
(assert eq_82)
(define-fun eq_83 () Bool (= ___stack0_mems_6__size0 1))
(define-fun not__53 () Bool (not eq_83))
(assert not__53)
(define-fun eq_84 () Bool (= ___stack0_mems_6__stride0 ___stack0_mems_6__size2))
(assert eq_84)
(define-fun mul_65 () Int (* ___stack0_mems_6__size2 ___stack0_mems_6__size0))
(define-fun ge_31 () Bool (>= ___stack0_mems_6__storage_offset 0))
(assert ge_31)
(define-fun add_31 () Int (+ ___stack0_mems_6__storage_offset add_30))
(define-fun mul_66 () Int (* 4 add_31))
(declare-const ___stack0_mems_7__size0 Int)
(set-info :example-___stack0_mems_7__size0 512)
(declare-const ___stack0_mems_7__size1 Int)
(set-info :example-___stack0_mems_7__size1 1)
(declare-const ___stack0_mems_7__size2 Int)
(set-info :example-___stack0_mems_7__size2 1024)
(declare-const ___stack0_mems_7__stride0 Int)
(set-info :example-___stack0_mems_7__stride0 1024)
(declare-const ___stack0_mems_7__stride1 Int)
(set-info :example-___stack0_mems_7__stride1 1024)
(declare-const ___stack0_mems_7__stride2 Int)
(set-info :example-___stack0_mems_7__stride2 1)
(declare-const ___stack0_mems_7__storage_offset Int)
(set-info :example-___stack0_mems_7__storage_offset 0)
(define-fun ge_32 () Bool (>= ___stack0_mems_7__size0 0))
(assert ge_32)
(define-fun ge_33 () Bool (>= ___stack0_mems_7__size1 0))
(assert ge_33)
(define-fun ge_34 () Bool (>= ___stack0_mems_7__size2 0))
(assert ge_34)
(define-fun eq_85 () Bool (= ___stack0_mems_7__size0 0))
(define-fun not__54 () Bool (not eq_85))
(assert not__54)
(define-fun sub_24 () Int (- ___stack0_mems_7__size0 1))
(define-fun mul_67 () Int (* ___stack0_mems_7__stride0 sub_24))
(define-fun add_32 () Int (+ 1 mul_67))
(define-fun eq_86 () Bool (= ___stack0_mems_7__size1 0))
(define-fun not__55 () Bool (not eq_86))
(assert not__55)
(define-fun sub_25 () Int (- ___stack0_mems_7__size1 1))
(define-fun mul_68 () Int (* ___stack0_mems_7__stride1 sub_25))
(define-fun add_33 () Int (+ add_32 mul_68))
(define-fun eq_87 () Bool (= ___stack0_mems_7__size2 0))
(define-fun not__56 () Bool (not eq_87))
(assert not__56)
(define-fun sub_26 () Int (- ___stack0_mems_7__size2 1))
(define-fun mul_69 () Int (* ___stack0_mems_7__stride2 sub_26))
(define-fun add_34 () Int (+ add_33 mul_69))
(define-fun mul_70 () Int (* 4 add_34))
(define-fun mul_71 () Int (* ___stack0_mems_7__size0 ___stack0_mems_7__size1))
(define-fun mul_72 () Int (* mul_71 ___stack0_mems_7__size2))
(define-fun eq_88 () Bool (= mul_72 0))
(define-fun not__57 () Bool (not eq_88))
(assert not__57)
(define-fun eq_89 () Bool (= ___stack0_mems_7__size2 1))
(define-fun not__58 () Bool (not eq_89))
(assert not__58)
(define-fun eq_90 () Bool (= ___stack0_mems_7__stride2 1))
(assert eq_90)
(define-fun eq_91 () Bool (= ___stack0_mems_7__size1 1))
(assert eq_91)
(define-fun eq_92 () Bool (= ___stack0_mems_7__size0 1))
(define-fun not__59 () Bool (not eq_92))
(assert not__59)
(define-fun eq_93 () Bool (= ___stack0_mems_7__stride0 ___stack0_mems_7__size2))
(assert eq_93)
(define-fun mul_73 () Int (* ___stack0_mems_7__size2 ___stack0_mems_7__size0))
(define-fun ge_35 () Bool (>= ___stack0_mems_7__storage_offset 0))
(assert ge_35)
(define-fun add_35 () Int (+ ___stack0_mems_7__storage_offset add_34))
(define-fun mul_74 () Int (* 4 add_35))
(declare-const ___stack0_mems_8__size0 Int)
(set-info :example-___stack0_mems_8__size0 512)
(declare-const ___stack0_mems_8__size1 Int)
(set-info :example-___stack0_mems_8__size1 1)
(declare-const ___stack0_mems_8__size2 Int)
(set-info :example-___stack0_mems_8__size2 1024)
(declare-const ___stack0_mems_8__stride0 Int)
(set-info :example-___stack0_mems_8__stride0 1024)
(declare-const ___stack0_mems_8__stride1 Int)
(set-info :example-___stack0_mems_8__stride1 1024)
(declare-const ___stack0_mems_8__stride2 Int)
(set-info :example-___stack0_mems_8__stride2 1)
(declare-const ___stack0_mems_8__storage_offset Int)
(set-info :example-___stack0_mems_8__storage_offset 0)
(define-fun ge_36 () Bool (>= ___stack0_mems_8__size0 0))
(assert ge_36)
(define-fun ge_37 () Bool (>= ___stack0_mems_8__size1 0))
(assert ge_37)
(define-fun ge_38 () Bool (>= ___stack0_mems_8__size2 0))
(assert ge_38)
(define-fun eq_94 () Bool (= ___stack0_mems_8__size0 0))
(define-fun not__60 () Bool (not eq_94))
(assert not__60)
(define-fun sub_27 () Int (- ___stack0_mems_8__size0 1))
(define-fun mul_75 () Int (* ___stack0_mems_8__stride0 sub_27))
(define-fun add_36 () Int (+ 1 mul_75))
(define-fun eq_95 () Bool (= ___stack0_mems_8__size1 0))
(define-fun not__61 () Bool (not eq_95))
(assert not__61)
(define-fun sub_28 () Int (- ___stack0_mems_8__size1 1))
(define-fun mul_76 () Int (* ___stack0_mems_8__stride1 sub_28))
(define-fun add_37 () Int (+ add_36 mul_76))
(define-fun eq_96 () Bool (= ___stack0_mems_8__size2 0))
(define-fun not__62 () Bool (not eq_96))
(assert not__62)
(define-fun sub_29 () Int (- ___stack0_mems_8__size2 1))
(define-fun mul_77 () Int (* ___stack0_mems_8__stride2 sub_29))
(define-fun add_38 () Int (+ add_37 mul_77))
(define-fun mul_78 () Int (* 4 add_38))
(define-fun mul_79 () Int (* ___stack0_mems_8__size0 ___stack0_mems_8__size1))
(define-fun mul_80 () Int (* mul_79 ___stack0_mems_8__size2))
(define-fun eq_97 () Bool (= mul_80 0))
(define-fun not__63 () Bool (not eq_97))
(assert not__63)
(define-fun eq_98 () Bool (= ___stack0_mems_8__size2 1))
(define-fun not__64 () Bool (not eq_98))
(assert not__64)
(define-fun eq_99 () Bool (= ___stack0_mems_8__stride2 1))
(assert eq_99)
(define-fun eq_100 () Bool (= ___stack0_mems_8__size1 1))
(assert eq_100)
(define-fun eq_101 () Bool (= ___stack0_mems_8__size0 1))
(define-fun not__65 () Bool (not eq_101))
(assert not__65)
(define-fun eq_102 () Bool (= ___stack0_mems_8__stride0 ___stack0_mems_8__size2))
(assert eq_102)
(define-fun mul_81 () Int (* ___stack0_mems_8__size2 ___stack0_mems_8__size0))
(define-fun ge_39 () Bool (>= ___stack0_mems_8__storage_offset 0))
(assert ge_39)
(define-fun add_39 () Int (+ ___stack0_mems_8__storage_offset add_38))
(define-fun mul_82 () Int (* 4 add_39))
(declare-const ___stack0_mems_9__size0 Int)
(set-info :example-___stack0_mems_9__size0 512)
(declare-const ___stack0_mems_9__size1 Int)
(set-info :example-___stack0_mems_9__size1 1)
(declare-const ___stack0_mems_9__size2 Int)
(set-info :example-___stack0_mems_9__size2 1024)
(declare-const ___stack0_mems_9__stride0 Int)
(set-info :example-___stack0_mems_9__stride0 1024)
(declare-const ___stack0_mems_9__stride1 Int)
(set-info :example-___stack0_mems_9__stride1 1024)
(declare-const ___stack0_mems_9__stride2 Int)
(set-info :example-___stack0_mems_9__stride2 1)
(declare-const ___stack0_mems_9__storage_offset Int)
(set-info :example-___stack0_mems_9__storage_offset 0)
(define-fun ge_40 () Bool (>= ___stack0_mems_9__size0 0))
(assert ge_40)
(define-fun ge_41 () Bool (>= ___stack0_mems_9__size1 0))
(assert ge_41)
(define-fun ge_42 () Bool (>= ___stack0_mems_9__size2 0))
(assert ge_42)
(define-fun eq_103 () Bool (= ___stack0_mems_9__size0 0))
(define-fun not__66 () Bool (not eq_103))
(assert not__66)
(define-fun sub_30 () Int (- ___stack0_mems_9__size0 1))
(define-fun mul_83 () Int (* ___stack0_mems_9__stride0 sub_30))
(define-fun add_40 () Int (+ 1 mul_83))
(define-fun eq_104 () Bool (= ___stack0_mems_9__size1 0))
(define-fun not__67 () Bool (not eq_104))
(assert not__67)
(define-fun sub_31 () Int (- ___stack0_mems_9__size1 1))
(define-fun mul_84 () Int (* ___stack0_mems_9__stride1 sub_31))
(define-fun add_41 () Int (+ add_40 mul_84))
(define-fun eq_105 () Bool (= ___stack0_mems_9__size2 0))
(define-fun not__68 () Bool (not eq_105))
(assert not__68)
(define-fun sub_32 () Int (- ___stack0_mems_9__size2 1))
(define-fun mul_85 () Int (* ___stack0_mems_9__stride2 sub_32))
(define-fun add_42 () Int (+ add_41 mul_85))
(define-fun mul_86 () Int (* 4 add_42))
(define-fun mul_87 () Int (* ___stack0_mems_9__size0 ___stack0_mems_9__size1))
(define-fun mul_88 () Int (* mul_87 ___stack0_mems_9__size2))
(define-fun eq_106 () Bool (= mul_88 0))
(define-fun not__69 () Bool (not eq_106))
(assert not__69)
(define-fun eq_107 () Bool (= ___stack0_mems_9__size2 1))
(define-fun not__70 () Bool (not eq_107))
(assert not__70)
(define-fun eq_108 () Bool (= ___stack0_mems_9__stride2 1))
(assert eq_108)
(define-fun eq_109 () Bool (= ___stack0_mems_9__size1 1))
(assert eq_109)
(define-fun eq_110 () Bool (= ___stack0_mems_9__size0 1))
(define-fun not__71 () Bool (not eq_110))
(assert not__71)
(define-fun eq_111 () Bool (= ___stack0_mems_9__stride0 ___stack0_mems_9__size2))
(assert eq_111)
(define-fun mul_89 () Int (* ___stack0_mems_9__size2 ___stack0_mems_9__size0))
(define-fun ge_43 () Bool (>= ___stack0_mems_9__storage_offset 0))
(assert ge_43)
(define-fun add_43 () Int (+ ___stack0_mems_9__storage_offset add_42))
(define-fun mul_90 () Int (* 4 add_43))
(declare-const ___stack0_mems_10__size0 Int)
(set-info :example-___stack0_mems_10__size0 512)
(declare-const ___stack0_mems_10__size1 Int)
(set-info :example-___stack0_mems_10__size1 1)
(declare-const ___stack0_mems_10__size2 Int)
(set-info :example-___stack0_mems_10__size2 1024)
(declare-const ___stack0_mems_10__stride0 Int)
(set-info :example-___stack0_mems_10__stride0 1024)
(declare-const ___stack0_mems_10__stride1 Int)
(set-info :example-___stack0_mems_10__stride1 1024)
(declare-const ___stack0_mems_10__stride2 Int)
(set-info :example-___stack0_mems_10__stride2 1)
(declare-const ___stack0_mems_10__storage_offset Int)
(set-info :example-___stack0_mems_10__storage_offset 0)
(define-fun ge_44 () Bool (>= ___stack0_mems_10__size0 0))
(assert ge_44)
(define-fun ge_45 () Bool (>= ___stack0_mems_10__size1 0))
(assert ge_45)
(define-fun ge_46 () Bool (>= ___stack0_mems_10__size2 0))
(assert ge_46)
(define-fun eq_112 () Bool (= ___stack0_mems_10__size0 0))
(define-fun not__72 () Bool (not eq_112))
(assert not__72)
(define-fun sub_33 () Int (- ___stack0_mems_10__size0 1))
(define-fun mul_91 () Int (* ___stack0_mems_10__stride0 sub_33))
(define-fun add_44 () Int (+ 1 mul_91))
(define-fun eq_113 () Bool (= ___stack0_mems_10__size1 0))
(define-fun not__73 () Bool (not eq_113))
(assert not__73)
(define-fun sub_34 () Int (- ___stack0_mems_10__size1 1))
(define-fun mul_92 () Int (* ___stack0_mems_10__stride1 sub_34))
(define-fun add_45 () Int (+ add_44 mul_92))
(define-fun eq_114 () Bool (= ___stack0_mems_10__size2 0))
(define-fun not__74 () Bool (not eq_114))
(assert not__74)
(define-fun sub_35 () Int (- ___stack0_mems_10__size2 1))
(define-fun mul_93 () Int (* ___stack0_mems_10__stride2 sub_35))
(define-fun add_46 () Int (+ add_45 mul_93))
(define-fun mul_94 () Int (* 4 add_46))
(define-fun mul_95 () Int (* ___stack0_mems_10__size0 ___stack0_mems_10__size1))
(define-fun mul_96 () Int (* mul_95 ___stack0_mems_10__size2))
(define-fun eq_115 () Bool (= mul_96 0))
(define-fun not__75 () Bool (not eq_115))
(assert not__75)
(define-fun eq_116 () Bool (= ___stack0_mems_10__size2 1))
(define-fun not__76 () Bool (not eq_116))
(assert not__76)
(define-fun eq_117 () Bool (= ___stack0_mems_10__stride2 1))
(assert eq_117)
(define-fun eq_118 () Bool (= ___stack0_mems_10__size1 1))
(assert eq_118)
(define-fun eq_119 () Bool (= ___stack0_mems_10__size0 1))
(define-fun not__77 () Bool (not eq_119))
(assert not__77)
(define-fun eq_120 () Bool (= ___stack0_mems_10__stride0 ___stack0_mems_10__size2))
(assert eq_120)
(define-fun mul_97 () Int (* ___stack0_mems_10__size2 ___stack0_mems_10__size0))
(define-fun ge_47 () Bool (>= ___stack0_mems_10__storage_offset 0))
(assert ge_47)
(define-fun add_47 () Int (+ ___stack0_mems_10__storage_offset add_46))
(define-fun mul_98 () Int (* 4 add_47))
(declare-const ___stack0_mems_11__size0 Int)
(set-info :example-___stack0_mems_11__size0 512)
(declare-const ___stack0_mems_11__size1 Int)
(set-info :example-___stack0_mems_11__size1 1)
(declare-const ___stack0_mems_11__size2 Int)
(set-info :example-___stack0_mems_11__size2 1024)
(declare-const ___stack0_mems_11__stride0 Int)
(set-info :example-___stack0_mems_11__stride0 1024)
(declare-const ___stack0_mems_11__stride1 Int)
(set-info :example-___stack0_mems_11__stride1 1024)
(declare-const ___stack0_mems_11__stride2 Int)
(set-info :example-___stack0_mems_11__stride2 1)
(declare-const ___stack0_mems_11__storage_offset Int)
(set-info :example-___stack0_mems_11__storage_offset 0)
(define-fun ge_48 () Bool (>= ___stack0_mems_11__size0 0))
(assert ge_48)
(define-fun ge_49 () Bool (>= ___stack0_mems_11__size1 0))
(assert ge_49)
(define-fun ge_50 () Bool (>= ___stack0_mems_11__size2 0))
(assert ge_50)
(define-fun eq_121 () Bool (= ___stack0_mems_11__size0 0))
(define-fun not__78 () Bool (not eq_121))
(assert not__78)
(define-fun sub_36 () Int (- ___stack0_mems_11__size0 1))
(define-fun mul_99 () Int (* ___stack0_mems_11__stride0 sub_36))
(define-fun add_48 () Int (+ 1 mul_99))
(define-fun eq_122 () Bool (= ___stack0_mems_11__size1 0))
(define-fun not__79 () Bool (not eq_122))
(assert not__79)
(define-fun sub_37 () Int (- ___stack0_mems_11__size1 1))
(define-fun mul_100 () Int (* ___stack0_mems_11__stride1 sub_37))
(define-fun add_49 () Int (+ add_48 mul_100))
(define-fun eq_123 () Bool (= ___stack0_mems_11__size2 0))
(define-fun not__80 () Bool (not eq_123))
(assert not__80)
(define-fun sub_38 () Int (- ___stack0_mems_11__size2 1))
(define-fun mul_101 () Int (* ___stack0_mems_11__stride2 sub_38))
(define-fun add_50 () Int (+ add_49 mul_101))
(define-fun mul_102 () Int (* 4 add_50))
(define-fun mul_103 () Int (* ___stack0_mems_11__size0 ___stack0_mems_11__size1))
(define-fun mul_104 () Int (* mul_103 ___stack0_mems_11__size2))
(define-fun eq_124 () Bool (= mul_104 0))
(define-fun not__81 () Bool (not eq_124))
(assert not__81)
(define-fun eq_125 () Bool (= ___stack0_mems_11__size2 1))
(define-fun not__82 () Bool (not eq_125))
(assert not__82)
(define-fun eq_126 () Bool (= ___stack0_mems_11__stride2 1))
(assert eq_126)
(define-fun eq_127 () Bool (= ___stack0_mems_11__size1 1))
(assert eq_127)
(define-fun eq_128 () Bool (= ___stack0_mems_11__size0 1))
(define-fun not__83 () Bool (not eq_128))
(assert not__83)
(define-fun eq_129 () Bool (= ___stack0_mems_11__stride0 ___stack0_mems_11__size2))
(assert eq_129)
(define-fun mul_105 () Int (* ___stack0_mems_11__size2 ___stack0_mems_11__size0))
(define-fun ge_51 () Bool (>= ___stack0_mems_11__storage_offset 0))
(assert ge_51)
(define-fun add_51 () Int (+ ___stack0_mems_11__storage_offset add_50))
(define-fun mul_106 () Int (* 4 add_51))
(declare-const ___stack0_mems_12__size0 Int)
(set-info :example-___stack0_mems_12__size0 512)
(declare-const ___stack0_mems_12__size1 Int)
(set-info :example-___stack0_mems_12__size1 1)
(declare-const ___stack0_mems_12__size2 Int)
(set-info :example-___stack0_mems_12__size2 1024)
(declare-const ___stack0_mems_12__stride0 Int)
(set-info :example-___stack0_mems_12__stride0 1024)
(declare-const ___stack0_mems_12__stride1 Int)
(set-info :example-___stack0_mems_12__stride1 1024)
(declare-const ___stack0_mems_12__stride2 Int)
(set-info :example-___stack0_mems_12__stride2 1)
(declare-const ___stack0_mems_12__storage_offset Int)
(set-info :example-___stack0_mems_12__storage_offset 0)
(define-fun ge_52 () Bool (>= ___stack0_mems_12__size0 0))
(assert ge_52)
(define-fun ge_53 () Bool (>= ___stack0_mems_12__size1 0))
(assert ge_53)
(define-fun ge_54 () Bool (>= ___stack0_mems_12__size2 0))
(assert ge_54)
(define-fun eq_130 () Bool (= ___stack0_mems_12__size0 0))
(define-fun not__84 () Bool (not eq_130))
(assert not__84)
(define-fun sub_39 () Int (- ___stack0_mems_12__size0 1))
(define-fun mul_107 () Int (* ___stack0_mems_12__stride0 sub_39))
(define-fun add_52 () Int (+ 1 mul_107))
(define-fun eq_131 () Bool (= ___stack0_mems_12__size1 0))
(define-fun not__85 () Bool (not eq_131))
(assert not__85)
(define-fun sub_40 () Int (- ___stack0_mems_12__size1 1))
(define-fun mul_108 () Int (* ___stack0_mems_12__stride1 sub_40))
(define-fun add_53 () Int (+ add_52 mul_108))
(define-fun eq_132 () Bool (= ___stack0_mems_12__size2 0))
(define-fun not__86 () Bool (not eq_132))
(assert not__86)
(define-fun sub_41 () Int (- ___stack0_mems_12__size2 1))
(define-fun mul_109 () Int (* ___stack0_mems_12__stride2 sub_41))
(define-fun add_54 () Int (+ add_53 mul_109))
(define-fun mul_110 () Int (* 4 add_54))
(define-fun mul_111 () Int (* ___stack0_mems_12__size0 ___stack0_mems_12__size1))
(define-fun mul_112 () Int (* mul_111 ___stack0_mems_12__size2))
(define-fun eq_133 () Bool (= mul_112 0))
(define-fun not__87 () Bool (not eq_133))
(assert not__87)
(define-fun eq_134 () Bool (= ___stack0_mems_12__size2 1))
(define-fun not__88 () Bool (not eq_134))
(assert not__88)
(define-fun eq_135 () Bool (= ___stack0_mems_12__stride2 1))
(assert eq_135)
(define-fun eq_136 () Bool (= ___stack0_mems_12__size1 1))
(assert eq_136)
(define-fun eq_137 () Bool (= ___stack0_mems_12__size0 1))
(define-fun not__89 () Bool (not eq_137))
(assert not__89)
(define-fun eq_138 () Bool (= ___stack0_mems_12__stride0 ___stack0_mems_12__size2))
(assert eq_138)
(define-fun mul_113 () Int (* ___stack0_mems_12__size2 ___stack0_mems_12__size0))
(define-fun ge_55 () Bool (>= ___stack0_mems_12__storage_offset 0))
(assert ge_55)
(define-fun add_55 () Int (+ ___stack0_mems_12__storage_offset add_54))
(define-fun mul_114 () Int (* 4 add_55))
(declare-const ___stack0_mems_13__size0 Int)
(set-info :example-___stack0_mems_13__size0 512)
(declare-const ___stack0_mems_13__size1 Int)
(set-info :example-___stack0_mems_13__size1 1)
(declare-const ___stack0_mems_13__size2 Int)
(set-info :example-___stack0_mems_13__size2 1024)
(declare-const ___stack0_mems_13__stride0 Int)
(set-info :example-___stack0_mems_13__stride0 1024)
(declare-const ___stack0_mems_13__stride1 Int)
(set-info :example-___stack0_mems_13__stride1 1024)
(declare-const ___stack0_mems_13__stride2 Int)
(set-info :example-___stack0_mems_13__stride2 1)
(declare-const ___stack0_mems_13__storage_offset Int)
(set-info :example-___stack0_mems_13__storage_offset 0)
(define-fun ge_56 () Bool (>= ___stack0_mems_13__size0 0))
(assert ge_56)
(define-fun ge_57 () Bool (>= ___stack0_mems_13__size1 0))
(assert ge_57)
(define-fun ge_58 () Bool (>= ___stack0_mems_13__size2 0))
(assert ge_58)
(define-fun eq_139 () Bool (= ___stack0_mems_13__size0 0))
(define-fun not__90 () Bool (not eq_139))
(assert not__90)
(define-fun sub_42 () Int (- ___stack0_mems_13__size0 1))
(define-fun mul_115 () Int (* ___stack0_mems_13__stride0 sub_42))
(define-fun add_56 () Int (+ 1 mul_115))
(define-fun eq_140 () Bool (= ___stack0_mems_13__size1 0))
(define-fun not__91 () Bool (not eq_140))
(assert not__91)
(define-fun sub_43 () Int (- ___stack0_mems_13__size1 1))
(define-fun mul_116 () Int (* ___stack0_mems_13__stride1 sub_43))
(define-fun add_57 () Int (+ add_56 mul_116))
(define-fun eq_141 () Bool (= ___stack0_mems_13__size2 0))
(define-fun not__92 () Bool (not eq_141))
(assert not__92)
(define-fun sub_44 () Int (- ___stack0_mems_13__size2 1))
(define-fun mul_117 () Int (* ___stack0_mems_13__stride2 sub_44))
(define-fun add_58 () Int (+ add_57 mul_117))
(define-fun mul_118 () Int (* 4 add_58))
(define-fun mul_119 () Int (* ___stack0_mems_13__size0 ___stack0_mems_13__size1))
(define-fun mul_120 () Int (* mul_119 ___stack0_mems_13__size2))
(define-fun eq_142 () Bool (= mul_120 0))
(define-fun not__93 () Bool (not eq_142))
(assert not__93)
(define-fun eq_143 () Bool (= ___stack0_mems_13__size2 1))
(define-fun not__94 () Bool (not eq_143))
(assert not__94)
(define-fun eq_144 () Bool (= ___stack0_mems_13__stride2 1))
(assert eq_144)
(define-fun eq_145 () Bool (= ___stack0_mems_13__size1 1))
(assert eq_145)
(define-fun eq_146 () Bool (= ___stack0_mems_13__size0 1))
(define-fun not__95 () Bool (not eq_146))
(assert not__95)
(define-fun eq_147 () Bool (= ___stack0_mems_13__stride0 ___stack0_mems_13__size2))
(assert eq_147)
(define-fun mul_121 () Int (* ___stack0_mems_13__size2 ___stack0_mems_13__size0))
(define-fun ge_59 () Bool (>= ___stack0_mems_13__storage_offset 0))
(assert ge_59)
(define-fun add_59 () Int (+ ___stack0_mems_13__storage_offset add_58))
(define-fun mul_122 () Int (* 4 add_59))
(declare-const ___stack0_mems_14__size0 Int)
(set-info :example-___stack0_mems_14__size0 512)
(declare-const ___stack0_mems_14__size1 Int)
(set-info :example-___stack0_mems_14__size1 1)
(declare-const ___stack0_mems_14__size2 Int)
(set-info :example-___stack0_mems_14__size2 1024)
(declare-const ___stack0_mems_14__stride0 Int)
(set-info :example-___stack0_mems_14__stride0 1024)
(declare-const ___stack0_mems_14__stride1 Int)
(set-info :example-___stack0_mems_14__stride1 1024)
(declare-const ___stack0_mems_14__stride2 Int)
(set-info :example-___stack0_mems_14__stride2 1)
(declare-const ___stack0_mems_14__storage_offset Int)
(set-info :example-___stack0_mems_14__storage_offset 0)
(define-fun ge_60 () Bool (>= ___stack0_mems_14__size0 0))
(assert ge_60)
(define-fun ge_61 () Bool (>= ___stack0_mems_14__size1 0))
(assert ge_61)
(define-fun ge_62 () Bool (>= ___stack0_mems_14__size2 0))
(assert ge_62)
(define-fun eq_148 () Bool (= ___stack0_mems_14__size0 0))
(define-fun not__96 () Bool (not eq_148))
(assert not__96)
(define-fun sub_45 () Int (- ___stack0_mems_14__size0 1))
(define-fun mul_123 () Int (* ___stack0_mems_14__stride0 sub_45))
(define-fun add_60 () Int (+ 1 mul_123))
(define-fun eq_149 () Bool (= ___stack0_mems_14__size1 0))
(define-fun not__97 () Bool (not eq_149))
(assert not__97)
(define-fun sub_46 () Int (- ___stack0_mems_14__size1 1))
(define-fun mul_124 () Int (* ___stack0_mems_14__stride1 sub_46))
(define-fun add_61 () Int (+ add_60 mul_124))
(define-fun eq_150 () Bool (= ___stack0_mems_14__size2 0))
(define-fun not__98 () Bool (not eq_150))
(assert not__98)
(define-fun sub_47 () Int (- ___stack0_mems_14__size2 1))
(define-fun mul_125 () Int (* ___stack0_mems_14__stride2 sub_47))
(define-fun add_62 () Int (+ add_61 mul_125))
(define-fun mul_126 () Int (* 4 add_62))
(define-fun mul_127 () Int (* ___stack0_mems_14__size0 ___stack0_mems_14__size1))
(define-fun mul_128 () Int (* mul_127 ___stack0_mems_14__size2))
(define-fun eq_151 () Bool (= mul_128 0))
(define-fun not__99 () Bool (not eq_151))
(assert not__99)
(define-fun eq_152 () Bool (= ___stack0_mems_14__size2 1))
(define-fun not__100 () Bool (not eq_152))
(assert not__100)
(define-fun eq_153 () Bool (= ___stack0_mems_14__stride2 1))
(assert eq_153)
(define-fun eq_154 () Bool (= ___stack0_mems_14__size1 1))
(assert eq_154)
(define-fun eq_155 () Bool (= ___stack0_mems_14__size0 1))
(define-fun not__101 () Bool (not eq_155))
(assert not__101)
(define-fun eq_156 () Bool (= ___stack0_mems_14__stride0 ___stack0_mems_14__size2))
(assert eq_156)
(define-fun mul_129 () Int (* ___stack0_mems_14__size2 ___stack0_mems_14__size0))
(define-fun ge_63 () Bool (>= ___stack0_mems_14__storage_offset 0))
(assert ge_63)
(define-fun add_63 () Int (+ ___stack0_mems_14__storage_offset add_62))
(define-fun mul_130 () Int (* 4 add_63))
(declare-const ___stack0_mems_15__size0 Int)
(set-info :example-___stack0_mems_15__size0 512)
(declare-const ___stack0_mems_15__size1 Int)
(set-info :example-___stack0_mems_15__size1 1)
(declare-const ___stack0_mems_15__size2 Int)
(set-info :example-___stack0_mems_15__size2 1024)
(declare-const ___stack0_mems_15__stride0 Int)
(set-info :example-___stack0_mems_15__stride0 1024)
(declare-const ___stack0_mems_15__stride1 Int)
(set-info :example-___stack0_mems_15__stride1 1024)
(declare-const ___stack0_mems_15__stride2 Int)
(set-info :example-___stack0_mems_15__stride2 1)
(declare-const ___stack0_mems_15__storage_offset Int)
(set-info :example-___stack0_mems_15__storage_offset 0)
(define-fun ge_64 () Bool (>= ___stack0_mems_15__size0 0))
(assert ge_64)
(define-fun ge_65 () Bool (>= ___stack0_mems_15__size1 0))
(assert ge_65)
(define-fun ge_66 () Bool (>= ___stack0_mems_15__size2 0))
(assert ge_66)
(define-fun eq_157 () Bool (= ___stack0_mems_15__size0 0))
(define-fun not__102 () Bool (not eq_157))
(assert not__102)
(define-fun sub_48 () Int (- ___stack0_mems_15__size0 1))
(define-fun mul_131 () Int (* ___stack0_mems_15__stride0 sub_48))
(define-fun add_64 () Int (+ 1 mul_131))
(define-fun eq_158 () Bool (= ___stack0_mems_15__size1 0))
(define-fun not__103 () Bool (not eq_158))
(assert not__103)
(define-fun sub_49 () Int (- ___stack0_mems_15__size1 1))
(define-fun mul_132 () Int (* ___stack0_mems_15__stride1 sub_49))
(define-fun add_65 () Int (+ add_64 mul_132))
(define-fun eq_159 () Bool (= ___stack0_mems_15__size2 0))
(define-fun not__104 () Bool (not eq_159))
(assert not__104)
(define-fun sub_50 () Int (- ___stack0_mems_15__size2 1))
(define-fun mul_133 () Int (* ___stack0_mems_15__stride2 sub_50))
(define-fun add_66 () Int (+ add_65 mul_133))
(define-fun mul_134 () Int (* 4 add_66))
(define-fun mul_135 () Int (* ___stack0_mems_15__size0 ___stack0_mems_15__size1))
(define-fun mul_136 () Int (* mul_135 ___stack0_mems_15__size2))
(define-fun eq_160 () Bool (= mul_136 0))
(define-fun not__105 () Bool (not eq_160))
(assert not__105)
(define-fun eq_161 () Bool (= ___stack0_mems_15__size2 1))
(define-fun not__106 () Bool (not eq_161))
(assert not__106)
(define-fun eq_162 () Bool (= ___stack0_mems_15__stride2 1))
(assert eq_162)
(define-fun eq_163 () Bool (= ___stack0_mems_15__size1 1))
(assert eq_163)
(define-fun eq_164 () Bool (= ___stack0_mems_15__size0 1))
(define-fun not__107 () Bool (not eq_164))
(assert not__107)
(define-fun eq_165 () Bool (= ___stack0_mems_15__stride0 ___stack0_mems_15__size2))
(assert eq_165)
(define-fun mul_137 () Int (* ___stack0_mems_15__size2 ___stack0_mems_15__size0))
(define-fun ge_67 () Bool (>= ___stack0_mems_15__storage_offset 0))
(assert ge_67)
(define-fun add_67 () Int (+ ___stack0_mems_15__storage_offset add_66))
(define-fun mul_138 () Int (* 4 add_67))
(declare-const ___stack0_mems_16__size0 Int)
(set-info :example-___stack0_mems_16__size0 512)
(declare-const ___stack0_mems_16__size1 Int)
(set-info :example-___stack0_mems_16__size1 1)
(declare-const ___stack0_mems_16__size2 Int)
(set-info :example-___stack0_mems_16__size2 1024)
(declare-const ___stack0_mems_16__stride0 Int)
(set-info :example-___stack0_mems_16__stride0 1024)
(declare-const ___stack0_mems_16__stride1 Int)
(set-info :example-___stack0_mems_16__stride1 1024)
(declare-const ___stack0_mems_16__stride2 Int)
(set-info :example-___stack0_mems_16__stride2 1)
(declare-const ___stack0_mems_16__storage_offset Int)
(set-info :example-___stack0_mems_16__storage_offset 0)
(define-fun ge_68 () Bool (>= ___stack0_mems_16__size0 0))
(assert ge_68)
(define-fun ge_69 () Bool (>= ___stack0_mems_16__size1 0))
(assert ge_69)
(define-fun ge_70 () Bool (>= ___stack0_mems_16__size2 0))
(assert ge_70)
(define-fun eq_166 () Bool (= ___stack0_mems_16__size0 0))
(define-fun not__108 () Bool (not eq_166))
(assert not__108)
(define-fun sub_51 () Int (- ___stack0_mems_16__size0 1))
(define-fun mul_139 () Int (* ___stack0_mems_16__stride0 sub_51))
(define-fun add_68 () Int (+ 1 mul_139))
(define-fun eq_167 () Bool (= ___stack0_mems_16__size1 0))
(define-fun not__109 () Bool (not eq_167))
(assert not__109)
(define-fun sub_52 () Int (- ___stack0_mems_16__size1 1))
(define-fun mul_140 () Int (* ___stack0_mems_16__stride1 sub_52))
(define-fun add_69 () Int (+ add_68 mul_140))
(define-fun eq_168 () Bool (= ___stack0_mems_16__size2 0))
(define-fun not__110 () Bool (not eq_168))
(assert not__110)
(define-fun sub_53 () Int (- ___stack0_mems_16__size2 1))
(define-fun mul_141 () Int (* ___stack0_mems_16__stride2 sub_53))
(define-fun add_70 () Int (+ add_69 mul_141))
(define-fun mul_142 () Int (* 4 add_70))
(define-fun mul_143 () Int (* ___stack0_mems_16__size0 ___stack0_mems_16__size1))
(define-fun mul_144 () Int (* mul_143 ___stack0_mems_16__size2))
(define-fun eq_169 () Bool (= mul_144 0))
(define-fun not__111 () Bool (not eq_169))
(assert not__111)
(define-fun eq_170 () Bool (= ___stack0_mems_16__size2 1))
(define-fun not__112 () Bool (not eq_170))
(assert not__112)
(define-fun eq_171 () Bool (= ___stack0_mems_16__stride2 1))
(assert eq_171)
(define-fun eq_172 () Bool (= ___stack0_mems_16__size1 1))
(assert eq_172)
(define-fun eq_173 () Bool (= ___stack0_mems_16__size0 1))
(define-fun not__113 () Bool (not eq_173))
(assert not__113)
(define-fun eq_174 () Bool (= ___stack0_mems_16__stride0 ___stack0_mems_16__size2))
(assert eq_174)
(define-fun mul_145 () Int (* ___stack0_mems_16__size2 ___stack0_mems_16__size0))
(define-fun ge_71 () Bool (>= ___stack0_mems_16__storage_offset 0))
(assert ge_71)
(define-fun add_71 () Int (+ ___stack0_mems_16__storage_offset add_70))
(define-fun mul_146 () Int (* 4 add_71))
(declare-const ___stack0_mems_17__size0 Int)
(set-info :example-___stack0_mems_17__size0 512)
(declare-const ___stack0_mems_17__size1 Int)
(set-info :example-___stack0_mems_17__size1 1)
(declare-const ___stack0_mems_17__size2 Int)
(set-info :example-___stack0_mems_17__size2 1024)
(declare-const ___stack0_mems_17__stride0 Int)
(set-info :example-___stack0_mems_17__stride0 1024)
(declare-const ___stack0_mems_17__stride1 Int)
(set-info :example-___stack0_mems_17__stride1 1024)
(declare-const ___stack0_mems_17__stride2 Int)
(set-info :example-___stack0_mems_17__stride2 1)
(declare-const ___stack0_mems_17__storage_offset Int)
(set-info :example-___stack0_mems_17__storage_offset 0)
(define-fun ge_72 () Bool (>= ___stack0_mems_17__size0 0))
(assert ge_72)
(define-fun ge_73 () Bool (>= ___stack0_mems_17__size1 0))
(assert ge_73)
(define-fun ge_74 () Bool (>= ___stack0_mems_17__size2 0))
(assert ge_74)
(define-fun eq_175 () Bool (= ___stack0_mems_17__size0 0))
(define-fun not__114 () Bool (not eq_175))
(assert not__114)
(define-fun sub_54 () Int (- ___stack0_mems_17__size0 1))
(define-fun mul_147 () Int (* ___stack0_mems_17__stride0 sub_54))
(define-fun add_72 () Int (+ 1 mul_147))
(define-fun eq_176 () Bool (= ___stack0_mems_17__size1 0))
(define-fun not__115 () Bool (not eq_176))
(assert not__115)
(define-fun sub_55 () Int (- ___stack0_mems_17__size1 1))
(define-fun mul_148 () Int (* ___stack0_mems_17__stride1 sub_55))
(define-fun add_73 () Int (+ add_72 mul_148))
(define-fun eq_177 () Bool (= ___stack0_mems_17__size2 0))
(define-fun not__116 () Bool (not eq_177))
(assert not__116)
(define-fun sub_56 () Int (- ___stack0_mems_17__size2 1))
(define-fun mul_149 () Int (* ___stack0_mems_17__stride2 sub_56))
(define-fun add_74 () Int (+ add_73 mul_149))
(define-fun mul_150 () Int (* 4 add_74))
(define-fun mul_151 () Int (* ___stack0_mems_17__size0 ___stack0_mems_17__size1))
(define-fun mul_152 () Int (* mul_151 ___stack0_mems_17__size2))
(define-fun eq_178 () Bool (= mul_152 0))
(define-fun not__117 () Bool (not eq_178))
(assert not__117)
(define-fun eq_179 () Bool (= ___stack0_mems_17__size2 1))
(define-fun not__118 () Bool (not eq_179))
(assert not__118)
(define-fun eq_180 () Bool (= ___stack0_mems_17__stride2 1))
(assert eq_180)
(define-fun eq_181 () Bool (= ___stack0_mems_17__size1 1))
(assert eq_181)
(define-fun eq_182 () Bool (= ___stack0_mems_17__size0 1))
(define-fun not__119 () Bool (not eq_182))
(assert not__119)
(define-fun eq_183 () Bool (= ___stack0_mems_17__stride0 ___stack0_mems_17__size2))
(assert eq_183)
(define-fun mul_153 () Int (* ___stack0_mems_17__size2 ___stack0_mems_17__size0))
(define-fun ge_75 () Bool (>= ___stack0_mems_17__storage_offset 0))
(assert ge_75)
(define-fun add_75 () Int (+ ___stack0_mems_17__storage_offset add_74))
(define-fun mul_154 () Int (* 4 add_75))
(declare-const ___stack0_mems_18__size0 Int)
(set-info :example-___stack0_mems_18__size0 512)
(declare-const ___stack0_mems_18__size1 Int)
(set-info :example-___stack0_mems_18__size1 1)
(declare-const ___stack0_mems_18__size2 Int)
(set-info :example-___stack0_mems_18__size2 1024)
(declare-const ___stack0_mems_18__stride0 Int)
(set-info :example-___stack0_mems_18__stride0 1024)
(declare-const ___stack0_mems_18__stride1 Int)
(set-info :example-___stack0_mems_18__stride1 1024)
(declare-const ___stack0_mems_18__stride2 Int)
(set-info :example-___stack0_mems_18__stride2 1)
(declare-const ___stack0_mems_18__storage_offset Int)
(set-info :example-___stack0_mems_18__storage_offset 0)
(define-fun ge_76 () Bool (>= ___stack0_mems_18__size0 0))
(assert ge_76)
(define-fun ge_77 () Bool (>= ___stack0_mems_18__size1 0))
(assert ge_77)
(define-fun ge_78 () Bool (>= ___stack0_mems_18__size2 0))
(assert ge_78)
(define-fun eq_184 () Bool (= ___stack0_mems_18__size0 0))
(define-fun not__120 () Bool (not eq_184))
(assert not__120)
(define-fun sub_57 () Int (- ___stack0_mems_18__size0 1))
(define-fun mul_155 () Int (* ___stack0_mems_18__stride0 sub_57))
(define-fun add_76 () Int (+ 1 mul_155))
(define-fun eq_185 () Bool (= ___stack0_mems_18__size1 0))
(define-fun not__121 () Bool (not eq_185))
(assert not__121)
(define-fun sub_58 () Int (- ___stack0_mems_18__size1 1))
(define-fun mul_156 () Int (* ___stack0_mems_18__stride1 sub_58))
(define-fun add_77 () Int (+ add_76 mul_156))
(define-fun eq_186 () Bool (= ___stack0_mems_18__size2 0))
(define-fun not__122 () Bool (not eq_186))
(assert not__122)
(define-fun sub_59 () Int (- ___stack0_mems_18__size2 1))
(define-fun mul_157 () Int (* ___stack0_mems_18__stride2 sub_59))
(define-fun add_78 () Int (+ add_77 mul_157))
(define-fun mul_158 () Int (* 4 add_78))
(define-fun mul_159 () Int (* ___stack0_mems_18__size0 ___stack0_mems_18__size1))
(define-fun mul_160 () Int (* mul_159 ___stack0_mems_18__size2))
(define-fun eq_187 () Bool (= mul_160 0))
(define-fun not__123 () Bool (not eq_187))
(assert not__123)
(define-fun eq_188 () Bool (= ___stack0_mems_18__size2 1))
(define-fun not__124 () Bool (not eq_188))
(assert not__124)
(define-fun eq_189 () Bool (= ___stack0_mems_18__stride2 1))
(assert eq_189)
(define-fun eq_190 () Bool (= ___stack0_mems_18__size1 1))
(assert eq_190)
(define-fun eq_191 () Bool (= ___stack0_mems_18__size0 1))
(define-fun not__125 () Bool (not eq_191))
(assert not__125)
(define-fun eq_192 () Bool (= ___stack0_mems_18__stride0 ___stack0_mems_18__size2))
(assert eq_192)
(define-fun mul_161 () Int (* ___stack0_mems_18__size2 ___stack0_mems_18__size0))
(define-fun ge_79 () Bool (>= ___stack0_mems_18__storage_offset 0))
(assert ge_79)
(define-fun add_79 () Int (+ ___stack0_mems_18__storage_offset add_78))
(define-fun mul_162 () Int (* 4 add_79))
(declare-const ___stack0_mems_19__size0 Int)
(set-info :example-___stack0_mems_19__size0 512)
(declare-const ___stack0_mems_19__size1 Int)
(set-info :example-___stack0_mems_19__size1 1)
(declare-const ___stack0_mems_19__size2 Int)
(set-info :example-___stack0_mems_19__size2 1024)
(declare-const ___stack0_mems_19__stride0 Int)
(set-info :example-___stack0_mems_19__stride0 1024)
(declare-const ___stack0_mems_19__stride1 Int)
(set-info :example-___stack0_mems_19__stride1 1024)
(declare-const ___stack0_mems_19__stride2 Int)
(set-info :example-___stack0_mems_19__stride2 1)
(declare-const ___stack0_mems_19__storage_offset Int)
(set-info :example-___stack0_mems_19__storage_offset 0)
(define-fun ge_80 () Bool (>= ___stack0_mems_19__size0 0))
(assert ge_80)
(define-fun ge_81 () Bool (>= ___stack0_mems_19__size1 0))
(assert ge_81)
(define-fun ge_82 () Bool (>= ___stack0_mems_19__size2 0))
(assert ge_82)
(define-fun eq_193 () Bool (= ___stack0_mems_19__size0 0))
(define-fun not__126 () Bool (not eq_193))
(assert not__126)
(define-fun sub_60 () Int (- ___stack0_mems_19__size0 1))
(define-fun mul_163 () Int (* ___stack0_mems_19__stride0 sub_60))
(define-fun add_80 () Int (+ 1 mul_163))
(define-fun eq_194 () Bool (= ___stack0_mems_19__size1 0))
(define-fun not__127 () Bool (not eq_194))
(assert not__127)
(define-fun sub_61 () Int (- ___stack0_mems_19__size1 1))
(define-fun mul_164 () Int (* ___stack0_mems_19__stride1 sub_61))
(define-fun add_81 () Int (+ add_80 mul_164))
(define-fun eq_195 () Bool (= ___stack0_mems_19__size2 0))
(define-fun not__128 () Bool (not eq_195))
(assert not__128)
(define-fun sub_62 () Int (- ___stack0_mems_19__size2 1))
(define-fun mul_165 () Int (* ___stack0_mems_19__stride2 sub_62))
(define-fun add_82 () Int (+ add_81 mul_165))
(define-fun mul_166 () Int (* 4 add_82))
(define-fun mul_167 () Int (* ___stack0_mems_19__size0 ___stack0_mems_19__size1))
(define-fun mul_168 () Int (* mul_167 ___stack0_mems_19__size2))
(define-fun eq_196 () Bool (= mul_168 0))
(define-fun not__129 () Bool (not eq_196))
(assert not__129)
(define-fun eq_197 () Bool (= ___stack0_mems_19__size2 1))
(define-fun not__130 () Bool (not eq_197))
(assert not__130)
(define-fun eq_198 () Bool (= ___stack0_mems_19__stride2 1))
(assert eq_198)
(define-fun eq_199 () Bool (= ___stack0_mems_19__size1 1))
(assert eq_199)
(define-fun eq_200 () Bool (= ___stack0_mems_19__size0 1))
(define-fun not__131 () Bool (not eq_200))
(assert not__131)
(define-fun eq_201 () Bool (= ___stack0_mems_19__stride0 ___stack0_mems_19__size2))
(assert eq_201)
(define-fun mul_169 () Int (* ___stack0_mems_19__size2 ___stack0_mems_19__size0))
(define-fun ge_83 () Bool (>= ___stack0_mems_19__storage_offset 0))
(assert ge_83)
(define-fun add_83 () Int (+ ___stack0_mems_19__storage_offset add_82))
(define-fun mul_170 () Int (* 4 add_83))
(declare-const ___stack0_mems_20__size0 Int)
(set-info :example-___stack0_mems_20__size0 512)
(declare-const ___stack0_mems_20__size1 Int)
(set-info :example-___stack0_mems_20__size1 1)
(declare-const ___stack0_mems_20__size2 Int)
(set-info :example-___stack0_mems_20__size2 1024)
(declare-const ___stack0_mems_20__stride0 Int)
(set-info :example-___stack0_mems_20__stride0 1024)
(declare-const ___stack0_mems_20__stride1 Int)
(set-info :example-___stack0_mems_20__stride1 1024)
(declare-const ___stack0_mems_20__stride2 Int)
(set-info :example-___stack0_mems_20__stride2 1)
(declare-const ___stack0_mems_20__storage_offset Int)
(set-info :example-___stack0_mems_20__storage_offset 0)
(define-fun ge_84 () Bool (>= ___stack0_mems_20__size0 0))
(assert ge_84)
(define-fun ge_85 () Bool (>= ___stack0_mems_20__size1 0))
(assert ge_85)
(define-fun ge_86 () Bool (>= ___stack0_mems_20__size2 0))
(assert ge_86)
(define-fun eq_202 () Bool (= ___stack0_mems_20__size0 0))
(define-fun not__132 () Bool (not eq_202))
(assert not__132)
(define-fun sub_63 () Int (- ___stack0_mems_20__size0 1))
(define-fun mul_171 () Int (* ___stack0_mems_20__stride0 sub_63))
(define-fun add_84 () Int (+ 1 mul_171))
(define-fun eq_203 () Bool (= ___stack0_mems_20__size1 0))
(define-fun not__133 () Bool (not eq_203))
(assert not__133)
(define-fun sub_64 () Int (- ___stack0_mems_20__size1 1))
(define-fun mul_172 () Int (* ___stack0_mems_20__stride1 sub_64))
(define-fun add_85 () Int (+ add_84 mul_172))
(define-fun eq_204 () Bool (= ___stack0_mems_20__size2 0))
(define-fun not__134 () Bool (not eq_204))
(assert not__134)
(define-fun sub_65 () Int (- ___stack0_mems_20__size2 1))
(define-fun mul_173 () Int (* ___stack0_mems_20__stride2 sub_65))
(define-fun add_86 () Int (+ add_85 mul_173))
(define-fun mul_174 () Int (* 4 add_86))
(define-fun mul_175 () Int (* ___stack0_mems_20__size0 ___stack0_mems_20__size1))
(define-fun mul_176 () Int (* mul_175 ___stack0_mems_20__size2))
(define-fun eq_205 () Bool (= mul_176 0))
(define-fun not__135 () Bool (not eq_205))
(assert not__135)
(define-fun eq_206 () Bool (= ___stack0_mems_20__size2 1))
(define-fun not__136 () Bool (not eq_206))
(assert not__136)
(define-fun eq_207 () Bool (= ___stack0_mems_20__stride2 1))
(assert eq_207)
(define-fun eq_208 () Bool (= ___stack0_mems_20__size1 1))
(assert eq_208)
(define-fun eq_209 () Bool (= ___stack0_mems_20__size0 1))
(define-fun not__137 () Bool (not eq_209))
(assert not__137)
(define-fun eq_210 () Bool (= ___stack0_mems_20__stride0 ___stack0_mems_20__size2))
(assert eq_210)
(define-fun mul_177 () Int (* ___stack0_mems_20__size2 ___stack0_mems_20__size0))
(define-fun ge_87 () Bool (>= ___stack0_mems_20__storage_offset 0))
(assert ge_87)
(define-fun add_87 () Int (+ ___stack0_mems_20__storage_offset add_86))
(define-fun mul_178 () Int (* 4 add_87))
(declare-const ___stack0_mems_21__size0 Int)
(set-info :example-___stack0_mems_21__size0 512)
(declare-const ___stack0_mems_21__size1 Int)
(set-info :example-___stack0_mems_21__size1 1)
(declare-const ___stack0_mems_21__size2 Int)
(set-info :example-___stack0_mems_21__size2 1024)
(declare-const ___stack0_mems_21__stride0 Int)
(set-info :example-___stack0_mems_21__stride0 1024)
(declare-const ___stack0_mems_21__stride1 Int)
(set-info :example-___stack0_mems_21__stride1 1024)
(declare-const ___stack0_mems_21__stride2 Int)
(set-info :example-___stack0_mems_21__stride2 1)
(declare-const ___stack0_mems_21__storage_offset Int)
(set-info :example-___stack0_mems_21__storage_offset 0)
(define-fun ge_88 () Bool (>= ___stack0_mems_21__size0 0))
(assert ge_88)
(define-fun ge_89 () Bool (>= ___stack0_mems_21__size1 0))
(assert ge_89)
(define-fun ge_90 () Bool (>= ___stack0_mems_21__size2 0))
(assert ge_90)
(define-fun eq_211 () Bool (= ___stack0_mems_21__size0 0))
(define-fun not__138 () Bool (not eq_211))
(assert not__138)
(define-fun sub_66 () Int (- ___stack0_mems_21__size0 1))
(define-fun mul_179 () Int (* ___stack0_mems_21__stride0 sub_66))
(define-fun add_88 () Int (+ 1 mul_179))
(define-fun eq_212 () Bool (= ___stack0_mems_21__size1 0))
(define-fun not__139 () Bool (not eq_212))
(assert not__139)
(define-fun sub_67 () Int (- ___stack0_mems_21__size1 1))
(define-fun mul_180 () Int (* ___stack0_mems_21__stride1 sub_67))
(define-fun add_89 () Int (+ add_88 mul_180))
(define-fun eq_213 () Bool (= ___stack0_mems_21__size2 0))
(define-fun not__140 () Bool (not eq_213))
(assert not__140)
(define-fun sub_68 () Int (- ___stack0_mems_21__size2 1))
(define-fun mul_181 () Int (* ___stack0_mems_21__stride2 sub_68))
(define-fun add_90 () Int (+ add_89 mul_181))
(define-fun mul_182 () Int (* 4 add_90))
(define-fun mul_183 () Int (* ___stack0_mems_21__size0 ___stack0_mems_21__size1))
(define-fun mul_184 () Int (* mul_183 ___stack0_mems_21__size2))
(define-fun eq_214 () Bool (= mul_184 0))
(define-fun not__141 () Bool (not eq_214))
(assert not__141)
(define-fun eq_215 () Bool (= ___stack0_mems_21__size2 1))
(define-fun not__142 () Bool (not eq_215))
(assert not__142)
(define-fun eq_216 () Bool (= ___stack0_mems_21__stride2 1))
(assert eq_216)
(define-fun eq_217 () Bool (= ___stack0_mems_21__size1 1))
(assert eq_217)
(define-fun eq_218 () Bool (= ___stack0_mems_21__size0 1))
(define-fun not__143 () Bool (not eq_218))
(assert not__143)
(define-fun eq_219 () Bool (= ___stack0_mems_21__stride0 ___stack0_mems_21__size2))
(assert eq_219)
(define-fun mul_185 () Int (* ___stack0_mems_21__size2 ___stack0_mems_21__size0))
(define-fun ge_91 () Bool (>= ___stack0_mems_21__storage_offset 0))
(assert ge_91)
(define-fun add_91 () Int (+ ___stack0_mems_21__storage_offset add_90))
(define-fun mul_186 () Int (* 4 add_91))
(declare-const ___stack0_mems_22__size0 Int)
(set-info :example-___stack0_mems_22__size0 512)
(declare-const ___stack0_mems_22__size1 Int)
(set-info :example-___stack0_mems_22__size1 1)
(declare-const ___stack0_mems_22__size2 Int)
(set-info :example-___stack0_mems_22__size2 1024)
(declare-const ___stack0_mems_22__stride0 Int)
(set-info :example-___stack0_mems_22__stride0 1024)
(declare-const ___stack0_mems_22__stride1 Int)
(set-info :example-___stack0_mems_22__stride1 1024)
(declare-const ___stack0_mems_22__stride2 Int)
(set-info :example-___stack0_mems_22__stride2 1)
(declare-const ___stack0_mems_22__storage_offset Int)
(set-info :example-___stack0_mems_22__storage_offset 0)
(define-fun ge_92 () Bool (>= ___stack0_mems_22__size0 0))
(assert ge_92)
(define-fun ge_93 () Bool (>= ___stack0_mems_22__size1 0))
(assert ge_93)
(define-fun ge_94 () Bool (>= ___stack0_mems_22__size2 0))
(assert ge_94)
(define-fun eq_220 () Bool (= ___stack0_mems_22__size0 0))
(define-fun not__144 () Bool (not eq_220))
(assert not__144)
(define-fun sub_69 () Int (- ___stack0_mems_22__size0 1))
(define-fun mul_187 () Int (* ___stack0_mems_22__stride0 sub_69))
(define-fun add_92 () Int (+ 1 mul_187))
(define-fun eq_221 () Bool (= ___stack0_mems_22__size1 0))
(define-fun not__145 () Bool (not eq_221))
(assert not__145)
(define-fun sub_70 () Int (- ___stack0_mems_22__size1 1))
(define-fun mul_188 () Int (* ___stack0_mems_22__stride1 sub_70))
(define-fun add_93 () Int (+ add_92 mul_188))
(define-fun eq_222 () Bool (= ___stack0_mems_22__size2 0))
(define-fun not__146 () Bool (not eq_222))
(assert not__146)
(define-fun sub_71 () Int (- ___stack0_mems_22__size2 1))
(define-fun mul_189 () Int (* ___stack0_mems_22__stride2 sub_71))
(define-fun add_94 () Int (+ add_93 mul_189))
(define-fun mul_190 () Int (* 4 add_94))
(define-fun mul_191 () Int (* ___stack0_mems_22__size0 ___stack0_mems_22__size1))
(define-fun mul_192 () Int (* mul_191 ___stack0_mems_22__size2))
(define-fun eq_223 () Bool (= mul_192 0))
(define-fun not__147 () Bool (not eq_223))
(assert not__147)
(define-fun eq_224 () Bool (= ___stack0_mems_22__size2 1))
(define-fun not__148 () Bool (not eq_224))
(assert not__148)
(define-fun eq_225 () Bool (= ___stack0_mems_22__stride2 1))
(assert eq_225)
(define-fun eq_226 () Bool (= ___stack0_mems_22__size1 1))
(assert eq_226)
(define-fun eq_227 () Bool (= ___stack0_mems_22__size0 1))
(define-fun not__149 () Bool (not eq_227))
(assert not__149)
(define-fun eq_228 () Bool (= ___stack0_mems_22__stride0 ___stack0_mems_22__size2))
(assert eq_228)
(define-fun mul_193 () Int (* ___stack0_mems_22__size2 ___stack0_mems_22__size0))
(define-fun ge_95 () Bool (>= ___stack0_mems_22__storage_offset 0))
(assert ge_95)
(define-fun add_95 () Int (+ ___stack0_mems_22__storage_offset add_94))
(define-fun mul_194 () Int (* 4 add_95))
(declare-const ___stack0_mems_23__size0 Int)
(set-info :example-___stack0_mems_23__size0 512)
(declare-const ___stack0_mems_23__size1 Int)
(set-info :example-___stack0_mems_23__size1 1)
(declare-const ___stack0_mems_23__size2 Int)
(set-info :example-___stack0_mems_23__size2 1024)
(declare-const ___stack0_mems_23__stride0 Int)
(set-info :example-___stack0_mems_23__stride0 1024)
(declare-const ___stack0_mems_23__stride1 Int)
(set-info :example-___stack0_mems_23__stride1 1024)
(declare-const ___stack0_mems_23__stride2 Int)
(set-info :example-___stack0_mems_23__stride2 1)
(declare-const ___stack0_mems_23__storage_offset Int)
(set-info :example-___stack0_mems_23__storage_offset 0)
(define-fun ge_96 () Bool (>= ___stack0_mems_23__size0 0))
(assert ge_96)
(define-fun ge_97 () Bool (>= ___stack0_mems_23__size1 0))
(assert ge_97)
(define-fun ge_98 () Bool (>= ___stack0_mems_23__size2 0))
(assert ge_98)
(define-fun eq_229 () Bool (= ___stack0_mems_23__size0 0))
(define-fun not__150 () Bool (not eq_229))
(assert not__150)
(define-fun sub_72 () Int (- ___stack0_mems_23__size0 1))
(define-fun mul_195 () Int (* ___stack0_mems_23__stride0 sub_72))
(define-fun add_96 () Int (+ 1 mul_195))
(define-fun eq_230 () Bool (= ___stack0_mems_23__size1 0))
(define-fun not__151 () Bool (not eq_230))
(assert not__151)
(define-fun sub_73 () Int (- ___stack0_mems_23__size1 1))
(define-fun mul_196 () Int (* ___stack0_mems_23__stride1 sub_73))
(define-fun add_97 () Int (+ add_96 mul_196))
(define-fun eq_231 () Bool (= ___stack0_mems_23__size2 0))
(define-fun not__152 () Bool (not eq_231))
(assert not__152)
(define-fun sub_74 () Int (- ___stack0_mems_23__size2 1))
(define-fun mul_197 () Int (* ___stack0_mems_23__stride2 sub_74))
(define-fun add_98 () Int (+ add_97 mul_197))
(define-fun mul_198 () Int (* 4 add_98))
(define-fun mul_199 () Int (* ___stack0_mems_23__size0 ___stack0_mems_23__size1))
(define-fun mul_200 () Int (* mul_199 ___stack0_mems_23__size2))
(define-fun eq_232 () Bool (= mul_200 0))
(define-fun not__153 () Bool (not eq_232))
(assert not__153)
(define-fun eq_233 () Bool (= ___stack0_mems_23__size2 1))
(define-fun not__154 () Bool (not eq_233))
(assert not__154)
(define-fun eq_234 () Bool (= ___stack0_mems_23__stride2 1))
(assert eq_234)
(define-fun eq_235 () Bool (= ___stack0_mems_23__size1 1))
(assert eq_235)
(define-fun eq_236 () Bool (= ___stack0_mems_23__size0 1))
(define-fun not__155 () Bool (not eq_236))
(assert not__155)
(define-fun eq_237 () Bool (= ___stack0_mems_23__stride0 ___stack0_mems_23__size2))
(assert eq_237)
(define-fun mul_201 () Int (* ___stack0_mems_23__size2 ___stack0_mems_23__size0))
(define-fun ge_99 () Bool (>= ___stack0_mems_23__storage_offset 0))
(assert ge_99)
(define-fun add_99 () Int (+ ___stack0_mems_23__storage_offset add_98))
(define-fun mul_202 () Int (* 4 add_99))
(declare-const labels_size0 Int)
(set-info :example-labels_size0 1)
(declare-const labels_size1 Int)
(set-info :example-labels_size1 512)
(declare-const labels_stride0 Int)
(set-info :example-labels_stride0 512)
(declare-const labels_stride1 Int)
(set-info :example-labels_stride1 1)
(declare-const labels_storage_offset Int)
(set-info :example-labels_storage_offset 0)
(define-fun ge_100 () Bool (>= labels_size0 0))
(assert ge_100)
(define-fun ge_101 () Bool (>= labels_size1 0))
(assert ge_101)
(define-fun eq_238 () Bool (= labels_size0 0))
(define-fun not__156 () Bool (not eq_238))
(assert not__156)
(define-fun sub_75 () Int (- labels_size0 1))
(define-fun mul_203 () Int (* labels_stride0 sub_75))
(define-fun add_100 () Int (+ 1 mul_203))
(define-fun eq_239 () Bool (= labels_size1 0))
(define-fun not__157 () Bool (not eq_239))
(assert not__157)
(define-fun sub_76 () Int (- labels_size1 1))
(define-fun mul_204 () Int (* labels_stride1 sub_76))
(define-fun add_101 () Int (+ add_100 mul_204))
(define-fun mul_205 () Int (* 8 add_101))
(define-fun mul_206 () Int (* labels_size0 labels_size1))
(define-fun eq_240 () Bool (= mul_206 0))
(define-fun not__158 () Bool (not eq_240))
(assert not__158)
(define-fun eq_241 () Bool (= labels_size1 1))
(define-fun not__159 () Bool (not eq_241))
(assert not__159)
(define-fun eq_242 () Bool (= labels_stride1 1))
(assert eq_242)
(define-fun eq_243 () Bool (= labels_size0 1))
(assert eq_243)
(define-fun ge_102 () Bool (>= labels_storage_offset 0))
(assert ge_102)
(define-fun add_102 () Int (+ labels_storage_offset add_101))
(define-fun mul_207 () Int (* 8 add_102))
(define-fun eq_244 () Bool (= mul_8 -1))
(define-fun not__160 () Bool (not eq_244))
(assert not__160)
(define-fun ge_103 () Bool (>= mul_8 0))
(assert ge_103)
(define-fun eq_245 () Bool (= ___stack0_last_hidden_state_size2 -1))
(define-fun not__161 () Bool (not eq_245))
(assert not__161)
(define-fun ge_104 () Bool (>= ___stack0_last_hidden_state_size2 0))
(assert ge_104)
(define-fun eq_246 () Bool (= mul_9 mul_9))
(assert eq_246)
(define-fun eq_247 () Bool (= ___stack0_last_hidden_state_size0 mul_8))
(define-fun not__162 () Bool (not eq_247))
(assert not__162)
(define-fun eq_248 () Bool (= mul_8 ___stack0_last_hidden_state_size0))
(define-fun not__163 () Bool (not eq_248))
(assert not__163)
(define-fun mod () Int (mod ___stack0_last_hidden_state_size0 mul_8))
(define-fun eq_249 () Bool (= mod 0))
(define-fun not__164 () Bool (not eq_249))
(assert not__164)
(define-fun mod_1 () Int (mod mul_8 mul_8))
(define-fun eq_250 () Bool (= mod_1 0))
(assert eq_250)
(define-fun eq_251 () Bool (= ___stack0_last_hidden_state_size0 0))
(define-fun not__165 () Bool (not eq_251))
(assert not__165)
(define-fun eq_252 () Bool (= ___stack0_last_hidden_state_size1 0))
(define-fun not__166 () Bool (not eq_252))
(assert not__166)
(define-fun mul_208 () Int (* ___stack0_last_hidden_state_size1 ___stack0_last_hidden_state_size2))
(define-fun eq_253 () Bool (= mul_208 0))
(define-fun not__167 () Bool (not eq_253))
(assert not__167)
(define-fun eq_254 () Bool (= mul_8 mul_8))
(assert eq_254)
(define-fun eq_255 () Bool (= ___stack0_last_hidden_state_size2 ___stack0_last_hidden_state_size2))
(assert eq_255)
(define-fun eq_256 () Bool (= ___stack0_last_hidden_state_size2 1024))
(assert eq_256)
(define-fun ge_105 () Bool (>= ___stack0_last_hidden_state_size1 0))
(assert ge_105)
(define-fun mul_209 () Int (* 32000 ___stack0_last_hidden_state_size1))
(define-fun sub_77 () Int (- ___stack0_last_hidden_state_size1 1))
(define-fun mul_210 () Int (* 32000 sub_77))
(define-fun add_103 () Int (+ 1 mul_210))
(define-fun add_104 () Int (+ add_103 31999))
(define-fun mul_211 () Int (* 4 add_104))
(define-fun mul_212 () Int (* ___stack0_last_hidden_state_size1 32000))
(define-fun eq_257 () Bool (= mul_212 0))
(define-fun not__168 () Bool (not eq_257))
(assert not__168)
(define-fun lt () Bool (< ___stack0_last_hidden_state_size1 0))
(define-fun not__169 () Bool (not lt))
(assert not__169)
(define-fun eq_258 () Bool (= ___stack0_last_hidden_state_size1 ___stack0_last_hidden_state_size1))
(assert eq_258)
(define-fun lt_1 () Bool (< ___stack0_last_hidden_state_size1 2))
(define-fun not__170 () Bool (not lt_1))
(assert not__170)
(define-fun eq_259 () Bool (= ___stack0_last_hidden_state_size0 -1))
(define-fun not__171 () Bool (not eq_259))
(assert not__171)
(define-fun ge_106 () Bool (>= ___stack0_last_hidden_state_size0 0))
(assert ge_106)
(define-fun eq_260 () Bool (= ___stack0_last_hidden_state_size1 -1))
(define-fun not__172 () Bool (not eq_260))
(assert not__172)
(define-fun mul_213 () Int (* mul_8 32000))
(define-fun eq_261 () Bool (= mul_212 mul_213))
(assert eq_261)
(define-fun eq_262 () Bool (= ___stack0_last_hidden_state_size1 ___stack0_last_hidden_state_size0))
(define-fun not__173 () Bool (not eq_262))
(assert not__173)
(define-fun eq_263 () Bool (= ___stack0_last_hidden_state_size0 ___stack0_last_hidden_state_size1))
(define-fun not__174 () Bool (not eq_263))
(assert not__174)
(define-fun mod_2 () Int (mod ___stack0_last_hidden_state_size1 ___stack0_last_hidden_state_size0))
(define-fun eq_264 () Bool (= mod_2 0))
(assert eq_264)
(define-fun floordiv () Int (div ___stack0_last_hidden_state_size1 ___stack0_last_hidden_state_size0))
(define-fun mul_214 () Int (* 32000 floordiv))
(define-fun mul_215 () Int (* ___stack0_last_hidden_state_size0 floordiv))
(define-fun mul_216 () Int (* mul_215 32000))
(define-fun eq_265 () Bool (= mul_216 0))
(define-fun not__175 () Bool (not eq_265))
(assert not__175)
(define-fun eq_266 () Bool (= floordiv 1))
(define-fun not__176 () Bool (not eq_266))
(assert not__176)
(define-fun eq_267 () Bool (= ___stack0_last_hidden_state_size1 floordiv))
(assert eq_267)
(define-fun eq_268 () Bool (= mul_216 32000))
(define-fun not__177 () Bool (not eq_268))
(assert not__177)
(define-fun mod_3 () Int (mod mul_216 32000))
(define-fun eq_269 () Bool (= mod_3 0))
(assert eq_269)
(define-fun floordiv_1 () Int (div mul_216 32000))
(define-fun eq_270 () Bool (= ___stack0_last_hidden_state_size0 floordiv_1))
(define-fun not__178 () Bool (not eq_270))
(assert not__178)
(define-fun eq_271 () Bool (= floordiv_1 ___stack0_last_hidden_state_size0))
(define-fun not__179 () Bool (not eq_271))
(assert not__179)
(define-fun mod_4 () Int (mod ___stack0_last_hidden_state_size0 floordiv_1))
(define-fun eq_272 () Bool (= mod_4 0))
(define-fun not__180 () Bool (not eq_272))
(assert not__180)
(define-fun mod_5 () Int (mod mul_215 floordiv_1))
(define-fun eq_273 () Bool (= mod_5 0))
(assert eq_273)
(define-fun eq_274 () Bool (= floordiv 0))
(define-fun not__181 () Bool (not eq_274))
(assert not__181)
(define-fun mul_217 () Int (* floordiv 32000))
(define-fun eq_275 () Bool (= mul_217 0))
(define-fun not__182 () Bool (not eq_275))
(assert not__182)
(define-fun eq_276 () Bool (= mul_215 floordiv_1))
(assert eq_276)
(define-fun eq_277 () Bool (= mul_206 1))
(define-fun not__183 () Bool (not eq_277))
(assert not__183)
(define-fun mod_6 () Int (mod mul_206 1))
(define-fun eq_278 () Bool (= mod_6 0))
(assert eq_278)
(define-fun floordiv_2 () Int (div mul_206 1))
(define-fun eq_279 () Bool (= labels_size0 floordiv_2))
(define-fun not__184 () Bool (not eq_279))
(assert not__184)
(define-fun eq_280 () Bool (= floordiv_2 labels_size0))
(define-fun not__185 () Bool (not eq_280))
(assert not__185)
(define-fun mod_7 () Int (mod labels_size0 floordiv_2))
(define-fun eq_281 () Bool (= mod_7 0))
(define-fun not__186 () Bool (not eq_281))
(assert not__186)
(define-fun mod_8 () Int (mod mul_206 floordiv_2))
(define-fun eq_282 () Bool (= mod_8 0))
(assert eq_282)
(define-fun eq_283 () Bool (= mul_206 floordiv_2))
(assert eq_283)
(define-fun ge_107 () Bool (>= floordiv 0))
(assert ge_107)
(define-fun sub_78 () Int (- floordiv 1))
(define-fun add_105 () Int (+ 1 sub_78))
(define-fun mul_218 () Int (* 4 add_105))
(define-fun eq_284 () Bool (= floordiv floordiv))
(assert eq_284)
(define-fun lt_2 () Bool (< floordiv 0))
(define-fun not__187 () Bool (not lt_2))
(assert not__187)
(define-fun eq_285 () Bool (= floordiv -1))
(define-fun not__188 () Bool (not eq_285))
(assert not__188)
(define-fun lt_3 () Bool (< floordiv 2))
(define-fun not__189 () Bool (not lt_3))
(assert not__189)
(define-fun mul_219 () Int (* 32000 sub_78))
(define-fun add_106 () Int (+ 1 mul_219))
(define-fun add_107 () Int (+ add_106 31999))
(define-fun mul_220 () Int (* 4 add_107))
(define-fun lt_4 () Bool (< floordiv 1))
(define-fun not__190 () Bool (not lt_4))
(assert not__190)
(define-fun eq_286 () Bool (= mul_217 mul_217))
(assert eq_286)
(define-fun eq_287 () Bool (= floordiv labels_size1))
(assert eq_287)
(define-fun eq_288 () Bool (= labels_size1 labels_size1))
(assert eq_288)
(define-fun le () Bool (<= labels_size1 floordiv))
(assert le)
(define-fun add_108 () Int (+ 1 sub_76))
(define-fun mul_221 () Int (* 4 add_108))
(define-fun mul_222 () Real (* 1.0 labels_size1))
(define-fun sym_float () Real (to_real labels_size1))
(define-fun eq_289 () Bool (= mul_7 0))
(define-fun not__191 () Bool (not eq_289))
(assert not__191)
(define-fun eq_290 () Bool (= mul_207 0))
(define-fun not__192 () Bool (not eq_290))
(assert not__192)
(define-fun eq_291 () Bool (= mul_211 0))
(define-fun not__193 () Bool (not eq_291))
(assert not__193)
(define-fun output0_storage_offset () Int 0)
(define-fun output1_size0 () Int ___stack0_last_hidden_state_size0)
(define-fun output1_size1 () Int floordiv)
(define-fun output1_size2 () Int 32000)
(define-fun output1_stride0 () Int mul_214)
(define-fun output1_stride1 () Int 32000)
(define-fun output1_stride2 () Int 1)
(define-fun output1_storage_offset () Int 0)
(check-sat)
(get-value (___stack0_last_hidden_state__base_size0 ___stack0_last_hidden_state__base_size1 ___stack0_last_hidden_state__base_size2 ___stack0_last_hidden_state__base_stride0 ___stack0_last_hidden_state__base_stride1 ___stack0_last_hidden_state__base_stride2 ___stack0_last_hidden_state__base_storage_offset ___stack0_last_hidden_state_size0 ___stack0_last_hidden_state_size1 ___stack0_last_hidden_state_size2 ___stack0_last_hidden_state_stride0 ___stack0_last_hidden_state_stride1 ___stack0_last_hidden_state_stride2 ___stack0_last_hidden_state_storage_offset ___stack0_mems_0__size0 ___stack0_mems_0__size1 ___stack0_mems_0__size2 ___stack0_mems_0__stride0 ___stack0_mems_0__stride1 ___stack0_mems_0__stride2 ___stack0_mems_0__storage_offset ___stack0_mems_1__size0 ___stack0_mems_1__size1 ___stack0_mems_1__size2 ___stack0_mems_1__stride0 ___stack0_mems_1__stride1 ___stack0_mems_1__stride2 ___stack0_mems_1__storage_offset ___stack0_mems_2__size0 ___stack0_mems_2__size1 ___stack0_mems_2__size2 ___stack0_mems_2__stride0 ___stack0_mems_2__stride1 ___stack0_mems_2__stride2 ___stack0_mems_2__storage_offset ___stack0_mems_3__size0 ___stack0_mems_3__size1 ___stack0_mems_3__size2 ___stack0_mems_3__stride0 ___stack0_mems_3__stride1 ___stack0_mems_3__stride2 ___stack0_mems_3__storage_offset ___stack0_mems_4__size0 ___stack0_mems_4__size1 ___stack0_mems_4__size2 ___stack0_mems_4__stride0 ___stack0_mems_4__stride1 ___stack0_mems_4__stride2 ___stack0_mems_4__storage_offset ___stack0_mems_5__size0 ___stack0_mems_5__size1 ___stack0_mems_5__size2 ___stack0_mems_5__stride0 ___stack0_mems_5__stride1 ___stack0_mems_5__stride2 ___stack0_mems_5__storage_offset ___stack0_mems_6__size0 ___stack0_mems_6__size1 ___stack0_mems_6__size2 ___stack0_mems_6__stride0 ___stack0_mems_6__stride1 ___stack0_mems_6__stride2 ___stack0_mems_6__storage_offset ___stack0_mems_7__size0 ___stack0_mems_7__size1 ___stack0_mems_7__size2 ___stack0_mems_7__stride0 ___stack0_mems_7__stride1 ___stack0_mems_7__stride2 ___stack0_mems_7__storage_offset ___stack0_mems_8__size0 ___stack0_mems_8__size1 ___stack0_mems_8__size2 ___stack0_mems_8__stride0 ___stack0_mems_8__stride1 ___stack0_mems_8__stride2 ___stack0_mems_8__storage_offset ___stack0_mems_9__size0 ___stack0_mems_9__size1 ___stack0_mems_9__size2 ___stack0_mems_9__stride0 ___stack0_mems_9__stride1 ___stack0_mems_9__stride2 ___stack0_mems_9__storage_offset ___stack0_mems_10__size0 ___stack0_mems_10__size1 ___stack0_mems_10__size2 ___stack0_mems_10__stride0 ___stack0_mems_10__stride1 ___stack0_mems_10__stride2 ___stack0_mems_10__storage_offset ___stack0_mems_11__size0 ___stack0_mems_11__size1 ___stack0_mems_11__size2 ___stack0_mems_11__stride0 ___stack0_mems_11__stride1 ___stack0_mems_11__stride2 ___stack0_mems_11__storage_offset ___stack0_mems_12__size0 ___stack0_mems_12__size1 ___stack0_mems_12__size2 ___stack0_mems_12__stride0 ___stack0_mems_12__stride1 ___stack0_mems_12__stride2 ___stack0_mems_12__storage_offset ___stack0_mems_13__size0 ___stack0_mems_13__size1 ___stack0_mems_13__size2 ___stack0_mems_13__stride0 ___stack0_mems_13__stride1 ___stack0_mems_13__stride2 ___stack0_mems_13__storage_offset ___stack0_mems_14__size0 ___stack0_mems_14__size1 ___stack0_mems_14__size2 ___stack0_mems_14__stride0 ___stack0_mems_14__stride1 ___stack0_mems_14__stride2 ___stack0_mems_14__storage_offset ___stack0_mems_15__size0 ___stack0_mems_15__size1 ___stack0_mems_15__size2 ___stack0_mems_15__stride0 ___stack0_mems_15__stride1 ___stack0_mems_15__stride2 ___stack0_mems_15__storage_offset ___stack0_mems_16__size0 ___stack0_mems_16__size1 ___stack0_mems_16__size2 ___stack0_mems_16__stride0 ___stack0_mems_16__stride1 ___stack0_mems_16__stride2 ___stack0_mems_16__storage_offset ___stack0_mems_17__size0 ___stack0_mems_17__size1 ___stack0_mems_17__size2 ___stack0_mems_17__stride0 ___stack0_mems_17__stride1 ___stack0_mems_17__stride2 ___stack0_mems_17__storage_offset ___stack0_mems_18__size0 ___stack0_mems_18__size1 ___stack0_mems_18__size2 ___stack0_mems_18__stride0 ___stack0_mems_18__stride1 ___stack0_mems_18__stride2 ___stack0_mems_18__storage_offset ___stack0_mems_19__size0 ___stack0_mems_19__size1 ___stack0_mems_19__size2 ___stack0_mems_19__stride0 ___stack0_mems_19__stride1 ___stack0_mems_19__stride2 ___stack0_mems_19__storage_offset ___stack0_mems_20__size0 ___stack0_mems_20__size1 ___stack0_mems_20__size2 ___stack0_mems_20__stride0 ___stack0_mems_20__stride1 ___stack0_mems_20__stride2 ___stack0_mems_20__storage_offset ___stack0_mems_21__size0 ___stack0_mems_21__size1 ___stack0_mems_21__size2 ___stack0_mems_21__stride0 ___stack0_mems_21__stride1 ___stack0_mems_21__stride2 ___stack0_mems_21__storage_offset ___stack0_mems_22__size0 ___stack0_mems_22__size1 ___stack0_mems_22__size2 ___stack0_mems_22__stride0 ___stack0_mems_22__stride1 ___stack0_mems_22__stride2 ___stack0_mems_22__storage_offset ___stack0_mems_23__size0 ___stack0_mems_23__size1 ___stack0_mems_23__size2 ___stack0_mems_23__stride0 ___stack0_mems_23__stride1 ___stack0_mems_23__stride2 ___stack0_mems_23__storage_offset labels_size0 labels_size1 labels_stride0 labels_stride1 labels_storage_offset output0_storage_offset output1_size0 output1_size1 output1_size2 output1_stride0 output1_stride1 output1_stride2 output1_storage_offset))

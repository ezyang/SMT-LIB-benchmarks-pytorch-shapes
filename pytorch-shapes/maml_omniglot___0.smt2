(set-option :produce-models true)
(declare-const input_size0 Int)
(declare-const input_size1 Int)
(declare-const input_size2 Int)
(declare-const input_size3 Int)
(declare-const input_stride0 Int)
(declare-const input_stride1 Int)
(declare-const input_stride2 Int)
(declare-const input_stride3 Int)
(declare-const input_storage_offset Int)
(define-fun ge () Bool (>= input_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= input_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= input_size2 0))
(assert ge_2)
(define-fun ge_3 () Bool (>= input_size3 0))
(assert ge_3)
(define-fun eq () Bool (= input_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- input_size0 1))
(define-fun mul () Int (* input_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= input_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- input_size1 1))
(define-fun mul_1 () Int (* input_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= input_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- input_size2 1))
(define-fun mul_2 () Int (* input_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun eq_3 () Bool (= input_size3 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun sub_3 () Int (- input_size3 1))
(define-fun mul_3 () Int (* input_stride3 sub_3))
(define-fun add_3 () Int (+ add_2 mul_3))
(define-fun mul_4 () Int (* 4 add_3))
(define-fun mul_5 () Int (* input_size0 input_size1))
(define-fun mul_6 () Int (* mul_5 input_size2))
(define-fun mul_7 () Int (* mul_6 input_size3))
(define-fun eq_4 () Bool (= mul_7 0))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= input_size3 1))
(define-fun not__5 () Bool (not eq_5))
(assert not__5)
(define-fun eq_6 () Bool (= input_stride3 1))
(assert eq_6)
(define-fun eq_7 () Bool (= input_size2 1))
(define-fun not__6 () Bool (not eq_7))
(assert not__6)
(define-fun eq_8 () Bool (= input_stride2 input_size3))
(assert eq_8)
(define-fun mul_8 () Int (* input_size3 input_size2))
(define-fun eq_9 () Bool (= input_size1 1))
(assert eq_9)
(define-fun eq_10 () Bool (= input_size0 1))
(define-fun not__7 () Bool (not eq_10))
(assert not__7)
(define-fun eq_11 () Bool (= input_stride0 mul_8))
(assert eq_11)
(define-fun mul_9 () Int (* mul_8 input_size0))
(define-fun eq_12 () Bool (= input_stride1 0))
(define-fun not__8 () Bool (not eq_12))
(assert not__8)
(define-fun lt () Bool (< input_stride1 0))
(define-fun not__9 () Bool (not lt))
(assert not__9)
(define-fun gt () Bool (> input_size1 1))
(define-fun not__10 () Bool (not gt))
(assert not__10)
(define-fun lt_1 () Bool (< input_stride3 input_stride1))
(assert lt_1)
(define-fun ge_4 () Bool (>= input_storage_offset 0))
(assert ge_4)
(define-fun add_4 () Int (+ input_storage_offset add_3))
(define-fun mul_10 () Int (* 4 add_4))
(define-fun lt_2 () Bool (< input_size2 3))
(define-fun not__11 () Bool (not lt_2))
(assert not__11)
(define-fun lt_3 () Bool (< input_size3 3))
(define-fun not__12 () Bool (not lt_3))
(assert not__12)
(define-fun floordiv () Int (div mul_7 input_size0))
(define-fun gt_1 () Bool (> floordiv 2147483647))
(define-fun not__13 () Bool (not gt_1))
(assert not__13)
(define-fun sub_4 () Int (- input_size2 3))
(define-fun floordiv_1 () Int (div sub_4 1))
(define-fun add_5 () Int (+ floordiv_1 1))
(define-fun sub_5 () Int (- input_size3 3))
(define-fun floordiv_2 () Int (div sub_5 1))
(define-fun add_6 () Int (+ floordiv_2 1))
(define-fun mul_11 () Int (* 64 add_5))
(define-fun mul_12 () Int (* mul_11 add_6))
(define-fun gt_2 () Bool (> mul_12 2147483647))
(define-fun not__14 () Bool (not gt_2))
(assert not__14)
(define-fun sub_6 () Int (- input_size2 2))
(define-fun sub_7 () Int (- sub_6 1))
(define-fun floordiv_3 () Int (div sub_7 1))
(define-fun add_7 () Int (+ floordiv_3 1))
(define-fun sub_8 () Int (- input_size3 2))
(define-fun sub_9 () Int (- sub_8 1))
(define-fun floordiv_4 () Int (div sub_9 1))
(define-fun add_8 () Int (+ floordiv_4 1))
(define-fun ge_5 () Bool (>= add_7 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= add_8 0))
(assert ge_6)
(define-fun eq_13 () Bool (= add_8 0))
(define-fun not__15 () Bool (not eq_13))
(assert not__15)
(define-fun eq_14 () Bool (= add_7 0))
(define-fun not__16 () Bool (not eq_14))
(assert not__16)
(define-fun mul_13 () Int (* add_8 add_7))
(define-fun mul_14 () Int (* mul_13 64))
(define-fun mul_15 () Int (* mul_14 input_size0))
(define-fun mul_16 () Int (* mul_14 sub))
(define-fun add_9 () Int (+ 1 mul_16))
(define-fun mul_17 () Int (* mul_13 63))
(define-fun add_10 () Int (+ add_9 mul_17))
(define-fun sub_10 () Int (- add_7 1))
(define-fun mul_18 () Int (* add_8 sub_10))
(define-fun add_11 () Int (+ add_10 mul_18))
(define-fun sub_11 () Int (- add_8 1))
(define-fun add_12 () Int (+ add_11 sub_11))
(define-fun mul_19 () Int (* 4 add_12))
(define-fun mul_20 () Int (* input_size0 64))
(define-fun mul_21 () Int (* mul_20 add_7))
(define-fun mul_22 () Int (* mul_21 add_8))
(define-fun eq_15 () Bool (= mul_22 0))
(define-fun not__17 () Bool (not eq_15))
(assert not__17)
(define-fun eq_16 () Bool (= add_8 1))
(define-fun not__18 () Bool (not eq_16))
(assert not__18)
(define-fun eq_17 () Bool (= add_7 1))
(define-fun not__19 () Bool (not eq_17))
(assert not__19)
(define-fun eq_18 () Bool (= add_8 add_8))
(assert eq_18)
(define-fun eq_19 () Bool (= mul_13 mul_13))
(assert eq_19)
(define-fun eq_20 () Bool (= mul_14 mul_14))
(assert eq_20)
(define-fun eq_21 () Bool (= mul_13 1))
(define-fun not__20 () Bool (not eq_21))
(assert not__20)
(define-fun eq_22 () Bool (= mul_13 0))
(define-fun not__21 () Bool (not eq_22))
(assert not__21)
(define-fun lt_4 () Bool (< mul_13 0))
(define-fun not__22 () Bool (not lt_4))
(assert not__22)
(define-fun lt_5 () Bool (< 1 mul_14))
(assert lt_5)
(define-fun gt_3 () Bool (> input_stride1 1))
(assert gt_3)
(define-fun mul_23 () Int (* input_stride1 input_size1))
(define-fun lt_6 () Bool (< input_stride3 mul_23))
(assert lt_6)
(define-fun le () Bool (<= input_size0 880801))
(assert le)
(define-fun le_1 () Bool (<= input_size0 65535))
(assert le_1)
(define-fun lt_7 () Bool (< mul_22 2147483647))
(assert lt_7)
(define-fun lt_8 () Bool (< add_8 0))
(define-fun not__23 () Bool (not lt_8))
(assert not__23)
(define-fun lt_9 () Bool (< add_7 0))
(define-fun not__24 () Bool (not lt_9))
(assert not__24)
(define-fun lt_10 () Bool (< input_size0 0))
(define-fun not__25 () Bool (not lt_10))
(assert not__25)
(define-fun eq_23 () Bool (= input_size0 input_size0))
(assert eq_23)
(define-fun eq_24 () Bool (= add_7 add_7))
(assert eq_24)
(define-fun eq_25 () Bool (= add_7 -1))
(define-fun not__26 () Bool (not eq_25))
(assert not__26)
(define-fun eq_26 () Bool (= add_8 -1))
(define-fun not__27 () Bool (not eq_26))
(assert not__27)
(define-fun lt_11 () Bool (< input_size0 2))
(define-fun not__28 () Bool (not lt_11))
(assert not__28)
(define-fun lt_12 () Bool (< add_7 2))
(define-fun not__29 () Bool (not lt_12))
(assert not__29)
(define-fun lt_13 () Bool (< add_8 2))
(define-fun not__30 () Bool (not lt_13))
(assert not__30)
(define-fun gt_4 () Bool (> add_8 1))
(assert gt_4)
(define-fun lt_14 () Bool (< add_8 mul_13))
(assert lt_14)
(define-fun eq_27 () Bool (= mul_14 0))
(define-fun not__31 () Bool (not eq_27))
(assert not__31)
(define-fun lt_15 () Bool (< mul_13 mul_14))
(assert lt_15)
(define-fun eq_28 () Bool (= input_size0 -1))
(define-fun not__32 () Bool (not eq_28))
(assert not__32)
(define-fun eq_29 () Bool (= mul_22 mul_22))
(assert eq_29)
(define-fun gt_5 () Bool (> mul_13 1))
(assert gt_5)
(define-fun gt_6 () Bool (> mul_14 1))
(assert gt_6)
(define-fun sub_12 () Int (- sub_10 1))
(define-fun floordiv_5 () Int (div sub_12 2))
(define-fun mod () Int (mod sub_12 2))
(define-fun eq_30 () Bool (= mod 0))
(assert eq_30)
(define-fun add_13 () Int (+ floordiv_5 1))
(define-fun sub_13 () Int (- sub_11 1))
(define-fun floordiv_6 () Int (div sub_13 2))
(define-fun mod_1 () Int (mod sub_13 2))
(define-fun eq_31 () Bool (= mod_1 0))
(assert eq_31)
(define-fun add_14 () Int (+ floordiv_6 1))
(define-fun ge_7 () Bool (>= add_14 1))
(assert ge_7)
(define-fun ge_8 () Bool (>= add_13 1))
(assert ge_8)
(define-fun ge_9 () Bool (>= add_13 0))
(assert ge_9)
(define-fun ge_10 () Bool (>= add_14 0))
(assert ge_10)
(define-fun eq_32 () Bool (= add_14 0))
(define-fun not__33 () Bool (not eq_32))
(assert not__33)
(define-fun eq_33 () Bool (= add_13 0))
(define-fun not__34 () Bool (not eq_33))
(assert not__34)
(define-fun mul_24 () Int (* add_14 add_13))
(define-fun mul_25 () Int (* mul_24 64))
(define-fun mul_26 () Int (* mul_25 input_size0))
(define-fun mul_27 () Int (* mul_25 sub))
(define-fun add_15 () Int (+ 1 mul_27))
(define-fun mul_28 () Int (* mul_24 63))
(define-fun add_16 () Int (+ add_15 mul_28))
(define-fun sub_14 () Int (- add_13 1))
(define-fun mul_29 () Int (* add_14 sub_14))
(define-fun add_17 () Int (+ add_16 mul_29))
(define-fun sub_15 () Int (- add_14 1))
(define-fun add_18 () Int (+ add_17 sub_15))
(define-fun mul_30 () Int (* 4 add_18))
(define-fun mul_31 () Int (* mul_20 add_13))
(define-fun mul_32 () Int (* mul_31 add_14))
(define-fun eq_34 () Bool (= mul_32 0))
(define-fun not__35 () Bool (not eq_34))
(assert not__35)
(define-fun eq_35 () Bool (= add_14 1))
(define-fun not__36 () Bool (not eq_35))
(assert not__36)
(define-fun eq_36 () Bool (= add_13 1))
(define-fun not__37 () Bool (not eq_36))
(assert not__37)
(define-fun eq_37 () Bool (= add_14 add_14))
(assert eq_37)
(define-fun eq_38 () Bool (= mul_24 mul_24))
(assert eq_38)
(define-fun eq_39 () Bool (= mul_25 mul_25))
(assert eq_39)
(define-fun eq_40 () Bool (= mul_24 1))
(define-fun not__38 () Bool (not eq_40))
(assert not__38)
(define-fun eq_41 () Bool (= mul_24 0))
(define-fun not__39 () Bool (not eq_41))
(assert not__39)
(define-fun lt_16 () Bool (< mul_24 0))
(define-fun not__40 () Bool (not lt_16))
(assert not__40)
(define-fun lt_17 () Bool (< 1 mul_25))
(assert lt_17)
(define-fun mul_33 () Int (* 8 add_18))
(define-fun lt_18 () Bool (< add_13 3))
(define-fun not__41 () Bool (not lt_18))
(assert not__41)
(define-fun lt_19 () Bool (< add_14 3))
(define-fun not__42 () Bool (not lt_19))
(assert not__42)
(define-fun floordiv_7 () Int (div mul_32 input_size0))
(define-fun gt_7 () Bool (> floordiv_7 2147483647))
(define-fun not__43 () Bool (not gt_7))
(assert not__43)
(define-fun sub_16 () Int (- add_13 3))
(define-fun floordiv_8 () Int (div sub_16 1))
(define-fun add_19 () Int (+ floordiv_8 1))
(define-fun sub_17 () Int (- add_14 3))
(define-fun floordiv_9 () Int (div sub_17 1))
(define-fun add_20 () Int (+ floordiv_9 1))
(define-fun mul_34 () Int (* 64 add_19))
(define-fun mul_35 () Int (* mul_34 add_20))
(define-fun gt_8 () Bool (> mul_35 2147483647))
(define-fun not__44 () Bool (not gt_8))
(assert not__44)
(define-fun sub_18 () Int (- add_13 2))
(define-fun sub_19 () Int (- sub_18 1))
(define-fun floordiv_10 () Int (div sub_19 1))
(define-fun add_21 () Int (+ floordiv_10 1))
(define-fun sub_20 () Int (- add_14 2))
(define-fun sub_21 () Int (- sub_20 1))
(define-fun floordiv_11 () Int (div sub_21 1))
(define-fun add_22 () Int (+ floordiv_11 1))
(define-fun ge_11 () Bool (>= add_21 0))
(assert ge_11)
(define-fun ge_12 () Bool (>= add_22 0))
(assert ge_12)
(define-fun eq_42 () Bool (= add_22 0))
(define-fun not__45 () Bool (not eq_42))
(assert not__45)
(define-fun eq_43 () Bool (= add_21 0))
(define-fun not__46 () Bool (not eq_43))
(assert not__46)
(define-fun mul_36 () Int (* add_22 add_21))
(define-fun mul_37 () Int (* mul_36 64))
(define-fun mul_38 () Int (* mul_37 input_size0))
(define-fun mul_39 () Int (* mul_37 sub))
(define-fun add_23 () Int (+ 1 mul_39))
(define-fun mul_40 () Int (* mul_36 63))
(define-fun add_24 () Int (+ add_23 mul_40))
(define-fun sub_22 () Int (- add_21 1))
(define-fun mul_41 () Int (* add_22 sub_22))
(define-fun add_25 () Int (+ add_24 mul_41))
(define-fun sub_23 () Int (- add_22 1))
(define-fun add_26 () Int (+ add_25 sub_23))
(define-fun mul_42 () Int (* 4 add_26))
(define-fun mul_43 () Int (* mul_20 add_21))
(define-fun mul_44 () Int (* mul_43 add_22))
(define-fun eq_44 () Bool (= mul_44 0))
(define-fun not__47 () Bool (not eq_44))
(assert not__47)
(define-fun eq_45 () Bool (= add_22 1))
(define-fun not__48 () Bool (not eq_45))
(assert not__48)
(define-fun eq_46 () Bool (= add_21 1))
(define-fun not__49 () Bool (not eq_46))
(assert not__49)
(define-fun eq_47 () Bool (= add_22 add_22))
(assert eq_47)
(define-fun eq_48 () Bool (= mul_36 mul_36))
(assert eq_48)
(define-fun eq_49 () Bool (= mul_37 mul_37))
(assert eq_49)
(define-fun eq_50 () Bool (= mul_36 1))
(define-fun not__50 () Bool (not eq_50))
(assert not__50)
(define-fun eq_51 () Bool (= mul_36 0))
(define-fun not__51 () Bool (not eq_51))
(assert not__51)
(define-fun lt_20 () Bool (< mul_36 0))
(define-fun not__52 () Bool (not lt_20))
(assert not__52)
(define-fun lt_21 () Bool (< 1 mul_37))
(assert lt_21)
(define-fun gt_9 () Bool (> mul_24 1))
(assert gt_9)
(define-fun gt_10 () Bool (> mul_25 1))
(assert gt_10)
(define-fun lt_22 () Bool (< mul_44 2147483647))
(assert lt_22)
(define-fun lt_23 () Bool (< add_22 0))
(define-fun not__53 () Bool (not lt_23))
(assert not__53)
(define-fun lt_24 () Bool (< add_21 0))
(define-fun not__54 () Bool (not lt_24))
(assert not__54)
(define-fun eq_52 () Bool (= add_21 add_21))
(assert eq_52)
(define-fun eq_53 () Bool (= add_21 -1))
(define-fun not__55 () Bool (not eq_53))
(assert not__55)
(define-fun eq_54 () Bool (= add_22 -1))
(define-fun not__56 () Bool (not eq_54))
(assert not__56)
(define-fun lt_25 () Bool (< add_21 2))
(define-fun not__57 () Bool (not lt_25))
(assert not__57)
(define-fun lt_26 () Bool (< add_22 2))
(define-fun not__58 () Bool (not lt_26))
(assert not__58)
(define-fun gt_11 () Bool (> add_22 1))
(assert gt_11)
(define-fun lt_27 () Bool (< add_22 mul_36))
(assert lt_27)
(define-fun eq_55 () Bool (= mul_37 0))
(define-fun not__59 () Bool (not eq_55))
(assert not__59)
(define-fun lt_28 () Bool (< mul_36 mul_37))
(assert lt_28)
(define-fun eq_56 () Bool (= mul_44 mul_44))
(assert eq_56)
(define-fun gt_12 () Bool (> mul_36 1))
(assert gt_12)
(define-fun gt_13 () Bool (> mul_37 1))
(assert gt_13)
(define-fun sub_24 () Int (- sub_22 1))
(define-fun floordiv_12 () Int (div sub_24 2))
(define-fun mod_2 () Int (mod sub_24 2))
(define-fun eq_57 () Bool (= mod_2 0))
(define-fun not__60 () Bool (not eq_57))
(assert not__60)
(define-fun lt_29 () Bool (< mod_2 0))
(define-fun not__61 () Bool (not lt_29))
(assert not__61)
(define-fun add_27 () Int (+ floordiv_12 1))
(define-fun sub_25 () Int (- sub_23 1))
(define-fun floordiv_13 () Int (div sub_25 2))
(define-fun mod_3 () Int (mod sub_25 2))
(define-fun eq_58 () Bool (= mod_3 0))
(define-fun not__62 () Bool (not eq_58))
(assert not__62)
(define-fun lt_30 () Bool (< mod_3 0))
(define-fun not__63 () Bool (not lt_30))
(assert not__63)
(define-fun add_28 () Int (+ floordiv_13 1))
(define-fun ge_13 () Bool (>= add_28 1))
(assert ge_13)
(define-fun ge_14 () Bool (>= add_27 1))
(assert ge_14)
(define-fun ge_15 () Bool (>= add_27 0))
(assert ge_15)
(define-fun ge_16 () Bool (>= add_28 0))
(assert ge_16)
(define-fun eq_59 () Bool (= add_28 0))
(define-fun not__64 () Bool (not eq_59))
(assert not__64)
(define-fun eq_60 () Bool (= add_27 0))
(define-fun not__65 () Bool (not eq_60))
(assert not__65)
(define-fun mul_45 () Int (* add_28 add_27))
(define-fun mul_46 () Int (* mul_45 64))
(define-fun mul_47 () Int (* mul_46 input_size0))
(define-fun mul_48 () Int (* mul_46 sub))
(define-fun add_29 () Int (+ 1 mul_48))
(define-fun mul_49 () Int (* mul_45 63))
(define-fun add_30 () Int (+ add_29 mul_49))
(define-fun sub_26 () Int (- add_27 1))
(define-fun mul_50 () Int (* add_28 sub_26))
(define-fun add_31 () Int (+ add_30 mul_50))
(define-fun sub_27 () Int (- add_28 1))
(define-fun add_32 () Int (+ add_31 sub_27))
(define-fun mul_51 () Int (* 4 add_32))
(define-fun mul_52 () Int (* mul_20 add_27))
(define-fun mul_53 () Int (* mul_52 add_28))
(define-fun eq_61 () Bool (= mul_53 0))
(define-fun not__66 () Bool (not eq_61))
(assert not__66)
(define-fun eq_62 () Bool (= add_28 1))
(define-fun not__67 () Bool (not eq_62))
(assert not__67)
(define-fun eq_63 () Bool (= add_27 1))
(define-fun not__68 () Bool (not eq_63))
(assert not__68)
(define-fun eq_64 () Bool (= add_28 add_28))
(assert eq_64)
(define-fun eq_65 () Bool (= mul_45 mul_45))
(assert eq_65)
(define-fun eq_66 () Bool (= mul_46 mul_46))
(assert eq_66)
(define-fun eq_67 () Bool (= mul_45 1))
(define-fun not__69 () Bool (not eq_67))
(assert not__69)
(define-fun eq_68 () Bool (= mul_45 0))
(define-fun not__70 () Bool (not eq_68))
(assert not__70)
(define-fun lt_31 () Bool (< mul_45 0))
(define-fun not__71 () Bool (not lt_31))
(assert not__71)
(define-fun lt_32 () Bool (< 1 mul_46))
(assert lt_32)
(define-fun mul_54 () Int (* 8 add_32))
(define-fun lt_33 () Bool (< add_27 3))
(define-fun not__72 () Bool (not lt_33))
(assert not__72)
(define-fun lt_34 () Bool (< add_28 3))
(define-fun not__73 () Bool (not lt_34))
(assert not__73)
(define-fun floordiv_14 () Int (div mul_53 input_size0))
(define-fun gt_14 () Bool (> floordiv_14 2147483647))
(define-fun not__74 () Bool (not gt_14))
(assert not__74)
(define-fun sub_28 () Int (- add_27 3))
(define-fun floordiv_15 () Int (div sub_28 1))
(define-fun add_33 () Int (+ floordiv_15 1))
(define-fun sub_29 () Int (- add_28 3))
(define-fun floordiv_16 () Int (div sub_29 1))
(define-fun add_34 () Int (+ floordiv_16 1))
(define-fun mul_55 () Int (* 64 add_33))
(define-fun mul_56 () Int (* mul_55 add_34))
(define-fun gt_15 () Bool (> mul_56 2147483647))
(define-fun not__75 () Bool (not gt_15))
(assert not__75)
(define-fun sub_30 () Int (- add_27 2))
(define-fun sub_31 () Int (- sub_30 1))
(define-fun floordiv_17 () Int (div sub_31 1))
(define-fun add_35 () Int (+ floordiv_17 1))
(define-fun sub_32 () Int (- add_28 2))
(define-fun sub_33 () Int (- sub_32 1))
(define-fun floordiv_18 () Int (div sub_33 1))
(define-fun add_36 () Int (+ floordiv_18 1))
(define-fun ge_17 () Bool (>= add_35 0))
(assert ge_17)
(define-fun ge_18 () Bool (>= add_36 0))
(assert ge_18)
(define-fun eq_69 () Bool (= add_36 0))
(define-fun not__76 () Bool (not eq_69))
(assert not__76)
(define-fun eq_70 () Bool (= add_35 0))
(define-fun not__77 () Bool (not eq_70))
(assert not__77)
(define-fun mul_57 () Int (* add_36 add_35))
(define-fun mul_58 () Int (* mul_57 64))
(define-fun mul_59 () Int (* mul_58 input_size0))
(define-fun mul_60 () Int (* mul_58 sub))
(define-fun add_37 () Int (+ 1 mul_60))
(define-fun mul_61 () Int (* mul_57 63))
(define-fun add_38 () Int (+ add_37 mul_61))
(define-fun sub_34 () Int (- add_35 1))
(define-fun mul_62 () Int (* add_36 sub_34))
(define-fun add_39 () Int (+ add_38 mul_62))
(define-fun sub_35 () Int (- add_36 1))
(define-fun add_40 () Int (+ add_39 sub_35))
(define-fun mul_63 () Int (* 4 add_40))
(define-fun mul_64 () Int (* mul_20 add_35))
(define-fun mul_65 () Int (* mul_64 add_36))
(define-fun eq_71 () Bool (= mul_65 0))
(define-fun not__78 () Bool (not eq_71))
(assert not__78)
(define-fun eq_72 () Bool (= add_36 1))
(define-fun not__79 () Bool (not eq_72))
(assert not__79)
(define-fun eq_73 () Bool (= add_35 1))
(define-fun not__80 () Bool (not eq_73))
(assert not__80)
(define-fun eq_74 () Bool (= add_36 add_36))
(assert eq_74)
(define-fun eq_75 () Bool (= mul_57 mul_57))
(assert eq_75)
(define-fun eq_76 () Bool (= mul_58 mul_58))
(assert eq_76)
(define-fun eq_77 () Bool (= mul_57 1))
(define-fun not__81 () Bool (not eq_77))
(assert not__81)
(define-fun eq_78 () Bool (= mul_57 0))
(define-fun not__82 () Bool (not eq_78))
(assert not__82)
(define-fun lt_35 () Bool (< mul_57 0))
(define-fun not__83 () Bool (not lt_35))
(assert not__83)
(define-fun lt_36 () Bool (< 1 mul_58))
(assert lt_36)
(define-fun gt_16 () Bool (> mul_45 1))
(assert gt_16)
(define-fun gt_17 () Bool (> mul_46 1))
(assert gt_17)
(define-fun lt_37 () Bool (< mul_65 2147483647))
(assert lt_37)
(define-fun lt_38 () Bool (< add_36 0))
(define-fun not__84 () Bool (not lt_38))
(assert not__84)
(define-fun lt_39 () Bool (< add_35 0))
(define-fun not__85 () Bool (not lt_39))
(assert not__85)
(define-fun eq_79 () Bool (= add_35 add_35))
(assert eq_79)
(define-fun eq_80 () Bool (= add_35 -1))
(define-fun not__86 () Bool (not eq_80))
(assert not__86)
(define-fun eq_81 () Bool (= add_36 -1))
(define-fun not__87 () Bool (not eq_81))
(assert not__87)
(define-fun lt_40 () Bool (< add_35 2))
(define-fun not__88 () Bool (not lt_40))
(assert not__88)
(define-fun lt_41 () Bool (< add_36 2))
(define-fun not__89 () Bool (not lt_41))
(assert not__89)
(define-fun gt_18 () Bool (> add_36 1))
(assert gt_18)
(define-fun lt_42 () Bool (< add_36 mul_57))
(assert lt_42)
(define-fun eq_82 () Bool (= mul_58 0))
(define-fun not__90 () Bool (not eq_82))
(assert not__90)
(define-fun lt_43 () Bool (< mul_57 mul_58))
(assert lt_43)
(define-fun eq_83 () Bool (= mul_65 mul_65))
(assert eq_83)
(define-fun gt_19 () Bool (> mul_57 1))
(assert gt_19)
(define-fun gt_20 () Bool (> mul_58 1))
(assert gt_20)
(define-fun sub_36 () Int (- sub_34 1))
(define-fun floordiv_19 () Int (div sub_36 2))
(define-fun mod_4 () Int (mod sub_36 2))
(define-fun eq_84 () Bool (= mod_4 0))
(define-fun not__91 () Bool (not eq_84))
(assert not__91)
(define-fun lt_44 () Bool (< mod_4 0))
(define-fun not__92 () Bool (not lt_44))
(assert not__92)
(define-fun add_41 () Int (+ floordiv_19 1))
(define-fun sub_37 () Int (- sub_35 1))
(define-fun floordiv_20 () Int (div sub_37 2))
(define-fun mod_5 () Int (mod sub_37 2))
(define-fun eq_85 () Bool (= mod_5 0))
(define-fun not__93 () Bool (not eq_85))
(assert not__93)
(define-fun lt_45 () Bool (< mod_5 0))
(define-fun not__94 () Bool (not lt_45))
(assert not__94)
(define-fun add_42 () Int (+ floordiv_20 1))
(define-fun ge_19 () Bool (>= add_42 1))
(assert ge_19)
(define-fun ge_20 () Bool (>= add_41 1))
(assert ge_20)
(define-fun ge_21 () Bool (>= add_41 0))
(assert ge_21)
(define-fun ge_22 () Bool (>= add_42 0))
(assert ge_22)
(define-fun eq_86 () Bool (= add_42 0))
(define-fun not__95 () Bool (not eq_86))
(assert not__95)
(define-fun eq_87 () Bool (= add_41 0))
(define-fun not__96 () Bool (not eq_87))
(assert not__96)
(define-fun mul_66 () Int (* add_42 add_41))
(define-fun mul_67 () Int (* mul_66 64))
(define-fun mul_68 () Int (* mul_67 input_size0))
(define-fun mul_69 () Int (* mul_67 sub))
(define-fun add_43 () Int (+ 1 mul_69))
(define-fun mul_70 () Int (* mul_66 63))
(define-fun add_44 () Int (+ add_43 mul_70))
(define-fun sub_38 () Int (- add_41 1))
(define-fun mul_71 () Int (* add_42 sub_38))
(define-fun add_45 () Int (+ add_44 mul_71))
(define-fun sub_39 () Int (- add_42 1))
(define-fun add_46 () Int (+ add_45 sub_39))
(define-fun mul_72 () Int (* 4 add_46))
(define-fun mul_73 () Int (* mul_20 add_41))
(define-fun mul_74 () Int (* mul_73 add_42))
(define-fun eq_88 () Bool (= mul_74 0))
(define-fun not__97 () Bool (not eq_88))
(assert not__97)
(define-fun eq_89 () Bool (= add_42 1))
(assert eq_89)
(define-fun eq_90 () Bool (= add_41 1))
(assert eq_90)
(define-fun eq_91 () Bool (= mul_66 1))
(assert eq_91)
(define-fun eq_92 () Bool (= mul_67 64))
(assert eq_92)
(define-fun mul_75 () Int (* 64 input_size0))
(define-fun eq_93 () Bool (= mul_66 0))
(define-fun not__98 () Bool (not eq_93))
(assert not__98)
(define-fun lt_46 () Bool (< mul_66 0))
(define-fun not__99 () Bool (not lt_46))
(assert not__99)
(define-fun lt_47 () Bool (< 1 mul_67))
(assert lt_47)
(define-fun mul_76 () Int (* 8 add_46))
(define-fun mul_77 () Int (* 64 add_41))
(define-fun mul_78 () Int (* mul_77 add_42))
(define-fun eq_94 () Bool (= mul_78 -1))
(define-fun not__100 () Bool (not eq_94))
(assert not__100)
(define-fun ge_23 () Bool (>= mul_78 0))
(assert ge_23)
(define-fun mul_79 () Int (* input_size0 mul_78))
(define-fun eq_95 () Bool (= mul_74 mul_79))
(assert eq_95)
(define-fun eq_96 () Bool (= mul_66 mul_66))
(assert eq_96)
(define-fun eq_97 () Bool (= mul_67 mul_67))
(assert eq_97)
(define-fun lt_48 () Bool (< 1 mul_68))
(assert lt_48)
(define-fun lt_49 () Bool (< mul_78 mul_68))
(assert lt_49)
(define-fun mul_80 () Int (* mul_78 input_size0))
(define-fun eq_98 () Bool (= mul_80 mul_68))
(assert eq_98)
(define-fun eq_99 () Bool (= mul_78 64))
(assert eq_99)
(define-fun mul_81 () Int (* mul_20 add_42))
(define-fun eq_100 () Bool (= mul_81 0))
(define-fun not__101 () Bool (not eq_100))
(assert not__101)
(define-fun eq_101 () Bool (= mul_20 0))
(define-fun not__102 () Bool (not eq_101))
(assert not__102)
(define-fun mul_82 () Int (* 5 input_size0))
(define-fun mul_83 () Int (* 5 sub))
(define-fun add_47 () Int (+ 1 mul_83))
(define-fun add_48 () Int (+ add_47 4))
(define-fun mul_84 () Int (* 4 add_48))
(define-fun mul_85 () Int (* input_size0 5))
(define-fun eq_102 () Bool (= mul_85 0))
(define-fun not__103 () Bool (not eq_102))
(assert not__103)
(define-fun eq_103 () Bool (= mul_10 0))
(define-fun not__104 () Bool (not eq_103))
(assert not__104)
(define-fun eq_104 () Bool (= mul_84 0))
(define-fun not__105 () Bool (not eq_104))
(assert not__105)
(define-fun output0_size0 () Int 64)
(define-fun output0_stride0 () Int 1)
(define-fun output0_storage_offset () Int 0)
(define-fun output1_size0 () Int 64)
(define-fun output1_stride0 () Int 1)
(define-fun output1_storage_offset () Int 0)
(define-fun output2_size0 () Int 64)
(define-fun output2_stride0 () Int 1)
(define-fun output2_storage_offset () Int 0)
(define-fun output3_size0 () Int 64)
(define-fun output3_stride0 () Int 1)
(define-fun output3_storage_offset () Int 0)
(define-fun output4_size0 () Int 64)
(define-fun output4_stride0 () Int 1)
(define-fun output4_storage_offset () Int 0)
(define-fun output5_size0 () Int 64)
(define-fun output5_stride0 () Int 1)
(define-fun output5_storage_offset () Int 0)
(define-fun output6_size0 () Int input_size0)
(define-fun output6_size1 () Int 5)
(define-fun output6_stride0 () Int 5)
(define-fun output6_stride1 () Int 1)
(define-fun output6_storage_offset () Int 0)
(check-sat)
(get-model)

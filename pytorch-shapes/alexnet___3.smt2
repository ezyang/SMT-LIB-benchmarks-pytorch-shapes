(set-option :produce-models true)
(declare-const x_size0 Int)
(declare-const x_size1 Int)
(declare-const x_size2 Int)
(declare-const x_size3 Int)
(declare-const x_stride0 Int)
(declare-const x_stride1 Int)
(declare-const x_stride2 Int)
(declare-const x_stride3 Int)
(declare-const x_storage_offset Int)
(define-fun ge () Bool (>= x_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= x_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= x_size2 0))
(assert ge_2)
(define-fun ge_3 () Bool (>= x_size3 0))
(assert ge_3)
(define-fun eq () Bool (= x_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- x_size0 1))
(define-fun mul () Int (* x_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= x_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- x_size1 1))
(define-fun mul_1 () Int (* x_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= x_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- x_size2 1))
(define-fun mul_2 () Int (* x_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun eq_3 () Bool (= x_size3 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun sub_3 () Int (- x_size3 1))
(define-fun mul_3 () Int (* x_stride3 sub_3))
(define-fun add_3 () Int (+ add_2 mul_3))
(define-fun mul_4 () Int (* 4 add_3))
(define-fun mul_5 () Int (* x_size0 x_size1))
(define-fun mul_6 () Int (* mul_5 x_size2))
(define-fun mul_7 () Int (* mul_6 x_size3))
(define-fun eq_4 () Bool (= mul_7 0))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= x_size3 1))
(define-fun not__5 () Bool (not eq_5))
(assert not__5)
(define-fun eq_6 () Bool (= x_stride3 1))
(assert eq_6)
(define-fun eq_7 () Bool (= x_size2 1))
(define-fun not__6 () Bool (not eq_7))
(assert not__6)
(define-fun eq_8 () Bool (= x_stride2 x_size3))
(assert eq_8)
(define-fun mul_8 () Int (* x_size3 x_size2))
(define-fun eq_9 () Bool (= x_size1 1))
(define-fun not__7 () Bool (not eq_9))
(assert not__7)
(define-fun eq_10 () Bool (= x_stride1 mul_8))
(assert eq_10)
(define-fun mul_9 () Int (* mul_8 x_size1))
(define-fun eq_11 () Bool (= x_size0 1))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun eq_12 () Bool (= x_stride0 mul_9))
(assert eq_12)
(define-fun mul_10 () Int (* mul_9 x_size0))
(define-fun eq_13 () Bool (= x_stride1 1))
(define-fun not__9 () Bool (not eq_13))
(assert not__9)
(define-fun eq_14 () Bool (= x_stride1 0))
(define-fun not__10 () Bool (not eq_14))
(assert not__10)
(define-fun lt () Bool (< x_stride1 0))
(define-fun not__11 () Bool (not lt))
(assert not__11)
(define-fun gt () Bool (> x_size1 1))
(assert gt)
(define-fun mul_11 () Int (* x_stride1 x_size1))
(define-fun lt_1 () Bool (< x_stride3 mul_11))
(assert lt_1)
(define-fun ge_4 () Bool (>= x_storage_offset 0))
(assert ge_4)
(define-fun add_4 () Int (+ x_storage_offset add_3))
(define-fun mul_12 () Int (* 4 add_4))
(define-fun eq_15 () Bool (= x_size1 3))
(assert eq_15)
(define-fun add_5 () Int (+ x_size2 4))
(define-fun lt_2 () Bool (< add_5 11))
(define-fun not__12 () Bool (not lt_2))
(assert not__12)
(define-fun add_6 () Int (+ x_size3 4))
(define-fun lt_3 () Bool (< add_6 11))
(define-fun not__13 () Bool (not lt_3))
(assert not__13)
(define-fun floordiv () Int (div mul_7 x_size0))
(define-fun gt_1 () Bool (> floordiv 2147483647))
(define-fun not__14 () Bool (not gt_1))
(assert not__14)
(define-fun sub_4 () Int (- add_5 11))
(define-fun floordiv_1 () Int (div sub_4 4))
(define-fun add_7 () Int (+ floordiv_1 1))
(define-fun sub_5 () Int (- add_6 11))
(define-fun floordiv_2 () Int (div sub_5 4))
(define-fun add_8 () Int (+ floordiv_2 1))
(define-fun mul_13 () Int (* 64 add_7))
(define-fun mul_14 () Int (* mul_13 add_8))
(define-fun gt_2 () Bool (> mul_14 2147483647))
(define-fun not__15 () Bool (not gt_2))
(assert not__15)
(define-fun sub_6 () Int (- add_5 10))
(define-fun sub_7 () Int (- sub_6 1))
(define-fun floordiv_3 () Int (div sub_7 4))
(define-fun add_9 () Int (+ floordiv_3 1))
(define-fun sub_8 () Int (- add_6 10))
(define-fun sub_9 () Int (- sub_8 1))
(define-fun floordiv_4 () Int (div sub_9 4))
(define-fun add_10 () Int (+ floordiv_4 1))
(define-fun ge_5 () Bool (>= add_9 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= add_10 0))
(assert ge_6)
(define-fun eq_16 () Bool (= add_10 0))
(define-fun not__16 () Bool (not eq_16))
(assert not__16)
(define-fun eq_17 () Bool (= add_9 0))
(define-fun not__17 () Bool (not eq_17))
(assert not__17)
(define-fun mul_15 () Int (* add_10 add_9))
(define-fun mul_16 () Int (* mul_15 64))
(define-fun mul_17 () Int (* mul_16 x_size0))
(define-fun mul_18 () Int (* mul_16 sub))
(define-fun add_11 () Int (+ 1 mul_18))
(define-fun mul_19 () Int (* mul_15 63))
(define-fun add_12 () Int (+ add_11 mul_19))
(define-fun sub_10 () Int (- add_9 1))
(define-fun mul_20 () Int (* add_10 sub_10))
(define-fun add_13 () Int (+ add_12 mul_20))
(define-fun sub_11 () Int (- add_10 1))
(define-fun add_14 () Int (+ add_13 sub_11))
(define-fun mul_21 () Int (* 4 add_14))
(define-fun mul_22 () Int (* x_size0 64))
(define-fun mul_23 () Int (* mul_22 add_9))
(define-fun mul_24 () Int (* mul_23 add_10))
(define-fun eq_18 () Bool (= mul_24 0))
(define-fun not__18 () Bool (not eq_18))
(assert not__18)
(define-fun eq_19 () Bool (= add_10 1))
(define-fun not__19 () Bool (not eq_19))
(assert not__19)
(define-fun eq_20 () Bool (= add_9 1))
(define-fun not__20 () Bool (not eq_20))
(assert not__20)
(define-fun eq_21 () Bool (= add_10 add_10))
(assert eq_21)
(define-fun eq_22 () Bool (= mul_15 mul_15))
(assert eq_22)
(define-fun eq_23 () Bool (= mul_16 mul_16))
(assert eq_23)
(define-fun eq_24 () Bool (= mul_15 1))
(define-fun not__21 () Bool (not eq_24))
(assert not__21)
(define-fun eq_25 () Bool (= mul_15 0))
(define-fun not__22 () Bool (not eq_25))
(assert not__22)
(define-fun lt_4 () Bool (< mul_15 0))
(define-fun not__23 () Bool (not lt_4))
(assert not__23)
(define-fun lt_5 () Bool (< 1 mul_16))
(assert lt_5)
(define-fun gt_3 () Bool (> x_stride1 1))
(assert gt_3)
(define-fun eq_26 () Bool (= x_size0 -1))
(define-fun not__24 () Bool (not eq_26))
(assert not__24)
(define-fun eq_27 () Bool (= add_9 -1))
(define-fun not__25 () Bool (not eq_27))
(assert not__25)
(define-fun eq_28 () Bool (= add_10 -1))
(define-fun not__26 () Bool (not eq_28))
(assert not__26)
(define-fun eq_29 () Bool (= mul_24 mul_24))
(assert eq_29)
(define-fun eq_30 () Bool (= x_size0 x_size0))
(assert eq_30)
(define-fun eq_31 () Bool (= add_9 add_9))
(assert eq_31)
(define-fun gt_4 () Bool (> mul_15 1))
(assert gt_4)
(define-fun gt_5 () Bool (> mul_16 1))
(assert gt_5)
(define-fun sub_12 () Int (- add_9 2))
(define-fun sub_13 () Int (- sub_12 1))
(define-fun floordiv_5 () Int (div sub_13 2))
(define-fun mod () Int (mod sub_13 2))
(define-fun eq_32 () Bool (= mod 0))
(assert eq_32)
(define-fun add_15 () Int (+ floordiv_5 1))
(define-fun sub_14 () Int (- add_10 2))
(define-fun sub_15 () Int (- sub_14 1))
(define-fun floordiv_6 () Int (div sub_15 2))
(define-fun mod_1 () Int (mod sub_15 2))
(define-fun eq_33 () Bool (= mod_1 0))
(assert eq_33)
(define-fun add_16 () Int (+ floordiv_6 1))
(define-fun ge_7 () Bool (>= add_16 1))
(assert ge_7)
(define-fun ge_8 () Bool (>= add_15 1))
(assert ge_8)
(define-fun ge_9 () Bool (>= add_15 0))
(assert ge_9)
(define-fun ge_10 () Bool (>= add_16 0))
(assert ge_10)
(define-fun eq_34 () Bool (= add_16 0))
(define-fun not__27 () Bool (not eq_34))
(assert not__27)
(define-fun eq_35 () Bool (= add_15 0))
(define-fun not__28 () Bool (not eq_35))
(assert not__28)
(define-fun mul_25 () Int (* add_16 add_15))
(define-fun mul_26 () Int (* mul_25 64))
(define-fun mul_27 () Int (* mul_26 x_size0))
(define-fun mul_28 () Int (* mul_26 sub))
(define-fun add_17 () Int (+ 1 mul_28))
(define-fun mul_29 () Int (* mul_25 63))
(define-fun add_18 () Int (+ add_17 mul_29))
(define-fun sub_16 () Int (- add_15 1))
(define-fun mul_30 () Int (* add_16 sub_16))
(define-fun add_19 () Int (+ add_18 mul_30))
(define-fun sub_17 () Int (- add_16 1))
(define-fun add_20 () Int (+ add_19 sub_17))
(define-fun mul_31 () Int (* 4 add_20))
(define-fun mul_32 () Int (* mul_22 add_15))
(define-fun mul_33 () Int (* mul_32 add_16))
(define-fun eq_36 () Bool (= mul_33 0))
(define-fun not__29 () Bool (not eq_36))
(assert not__29)
(define-fun eq_37 () Bool (= add_16 1))
(define-fun not__30 () Bool (not eq_37))
(assert not__30)
(define-fun eq_38 () Bool (= add_15 1))
(define-fun not__31 () Bool (not eq_38))
(assert not__31)
(define-fun eq_39 () Bool (= add_16 add_16))
(assert eq_39)
(define-fun eq_40 () Bool (= mul_25 mul_25))
(assert eq_40)
(define-fun eq_41 () Bool (= mul_26 mul_26))
(assert eq_41)
(define-fun eq_42 () Bool (= mul_25 1))
(define-fun not__32 () Bool (not eq_42))
(assert not__32)
(define-fun eq_43 () Bool (= mul_25 0))
(define-fun not__33 () Bool (not eq_43))
(assert not__33)
(define-fun lt_6 () Bool (< mul_25 0))
(define-fun not__34 () Bool (not lt_6))
(assert not__34)
(define-fun lt_7 () Bool (< 1 mul_26))
(assert lt_7)
(define-fun mul_34 () Int (* 8 add_20))
(define-fun add_21 () Int (+ add_15 4))
(define-fun lt_8 () Bool (< add_21 5))
(define-fun not__35 () Bool (not lt_8))
(assert not__35)
(define-fun add_22 () Int (+ add_16 4))
(define-fun lt_9 () Bool (< add_22 5))
(define-fun not__36 () Bool (not lt_9))
(assert not__36)
(define-fun floordiv_7 () Int (div mul_33 x_size0))
(define-fun gt_6 () Bool (> floordiv_7 2147483647))
(define-fun not__37 () Bool (not gt_6))
(assert not__37)
(define-fun sub_18 () Int (- add_21 5))
(define-fun floordiv_8 () Int (div sub_18 1))
(define-fun add_23 () Int (+ floordiv_8 1))
(define-fun sub_19 () Int (- add_22 5))
(define-fun floordiv_9 () Int (div sub_19 1))
(define-fun add_24 () Int (+ floordiv_9 1))
(define-fun mul_35 () Int (* 192 add_23))
(define-fun mul_36 () Int (* mul_35 add_24))
(define-fun gt_7 () Bool (> mul_36 2147483647))
(define-fun not__38 () Bool (not gt_7))
(assert not__38)
(define-fun sub_20 () Int (- add_21 4))
(define-fun sub_21 () Int (- sub_20 1))
(define-fun floordiv_10 () Int (div sub_21 1))
(define-fun add_25 () Int (+ floordiv_10 1))
(define-fun sub_22 () Int (- add_22 4))
(define-fun sub_23 () Int (- sub_22 1))
(define-fun floordiv_11 () Int (div sub_23 1))
(define-fun add_26 () Int (+ floordiv_11 1))
(define-fun ge_11 () Bool (>= add_25 0))
(assert ge_11)
(define-fun ge_12 () Bool (>= add_26 0))
(assert ge_12)
(define-fun eq_44 () Bool (= add_26 0))
(define-fun not__39 () Bool (not eq_44))
(assert not__39)
(define-fun eq_45 () Bool (= add_25 0))
(define-fun not__40 () Bool (not eq_45))
(assert not__40)
(define-fun mul_37 () Int (* add_26 add_25))
(define-fun mul_38 () Int (* mul_37 192))
(define-fun mul_39 () Int (* mul_38 x_size0))
(define-fun mul_40 () Int (* mul_38 sub))
(define-fun add_27 () Int (+ 1 mul_40))
(define-fun mul_41 () Int (* mul_37 191))
(define-fun add_28 () Int (+ add_27 mul_41))
(define-fun sub_24 () Int (- add_25 1))
(define-fun mul_42 () Int (* add_26 sub_24))
(define-fun add_29 () Int (+ add_28 mul_42))
(define-fun sub_25 () Int (- add_26 1))
(define-fun add_30 () Int (+ add_29 sub_25))
(define-fun mul_43 () Int (* 4 add_30))
(define-fun mul_44 () Int (* x_size0 192))
(define-fun mul_45 () Int (* mul_44 add_25))
(define-fun mul_46 () Int (* mul_45 add_26))
(define-fun eq_46 () Bool (= mul_46 0))
(define-fun not__41 () Bool (not eq_46))
(assert not__41)
(define-fun eq_47 () Bool (= add_26 1))
(define-fun not__42 () Bool (not eq_47))
(assert not__42)
(define-fun eq_48 () Bool (= add_25 1))
(define-fun not__43 () Bool (not eq_48))
(assert not__43)
(define-fun eq_49 () Bool (= add_26 add_26))
(assert eq_49)
(define-fun eq_50 () Bool (= mul_37 mul_37))
(assert eq_50)
(define-fun eq_51 () Bool (= mul_38 mul_38))
(assert eq_51)
(define-fun eq_52 () Bool (= mul_37 1))
(define-fun not__44 () Bool (not eq_52))
(assert not__44)
(define-fun eq_53 () Bool (= mul_37 0))
(define-fun not__45 () Bool (not eq_53))
(assert not__45)
(define-fun lt_10 () Bool (< mul_37 0))
(define-fun not__46 () Bool (not lt_10))
(assert not__46)
(define-fun lt_11 () Bool (< 1 mul_38))
(assert lt_11)
(define-fun gt_8 () Bool (> mul_25 1))
(assert gt_8)
(define-fun gt_9 () Bool (> mul_26 1))
(assert gt_9)
(define-fun eq_54 () Bool (= add_25 -1))
(define-fun not__47 () Bool (not eq_54))
(assert not__47)
(define-fun eq_55 () Bool (= add_26 -1))
(define-fun not__48 () Bool (not eq_55))
(assert not__48)
(define-fun eq_56 () Bool (= mul_46 mul_46))
(assert eq_56)
(define-fun eq_57 () Bool (= add_25 add_25))
(assert eq_57)
(define-fun gt_10 () Bool (> mul_37 1))
(assert gt_10)
(define-fun gt_11 () Bool (> mul_38 1))
(assert gt_11)
(define-fun sub_26 () Int (- add_25 2))
(define-fun sub_27 () Int (- sub_26 1))
(define-fun floordiv_12 () Int (div sub_27 2))
(define-fun mod_2 () Int (mod sub_27 2))
(define-fun eq_58 () Bool (= mod_2 0))
(assert eq_58)
(define-fun add_31 () Int (+ floordiv_12 1))
(define-fun sub_28 () Int (- add_26 2))
(define-fun sub_29 () Int (- sub_28 1))
(define-fun floordiv_13 () Int (div sub_29 2))
(define-fun mod_3 () Int (mod sub_29 2))
(define-fun eq_59 () Bool (= mod_3 0))
(assert eq_59)
(define-fun add_32 () Int (+ floordiv_13 1))
(define-fun ge_13 () Bool (>= add_32 1))
(assert ge_13)
(define-fun ge_14 () Bool (>= add_31 1))
(assert ge_14)
(define-fun ge_15 () Bool (>= add_31 0))
(assert ge_15)
(define-fun ge_16 () Bool (>= add_32 0))
(assert ge_16)
(define-fun eq_60 () Bool (= add_32 0))
(define-fun not__49 () Bool (not eq_60))
(assert not__49)
(define-fun eq_61 () Bool (= add_31 0))
(define-fun not__50 () Bool (not eq_61))
(assert not__50)
(define-fun mul_47 () Int (* add_32 add_31))
(define-fun mul_48 () Int (* mul_47 192))
(define-fun mul_49 () Int (* mul_48 x_size0))
(define-fun mul_50 () Int (* mul_48 sub))
(define-fun add_33 () Int (+ 1 mul_50))
(define-fun mul_51 () Int (* mul_47 191))
(define-fun add_34 () Int (+ add_33 mul_51))
(define-fun sub_30 () Int (- add_31 1))
(define-fun mul_52 () Int (* add_32 sub_30))
(define-fun add_35 () Int (+ add_34 mul_52))
(define-fun sub_31 () Int (- add_32 1))
(define-fun add_36 () Int (+ add_35 sub_31))
(define-fun mul_53 () Int (* 4 add_36))
(define-fun mul_54 () Int (* mul_44 add_31))
(define-fun mul_55 () Int (* mul_54 add_32))
(define-fun eq_62 () Bool (= mul_55 0))
(define-fun not__51 () Bool (not eq_62))
(assert not__51)
(define-fun eq_63 () Bool (= add_32 1))
(define-fun not__52 () Bool (not eq_63))
(assert not__52)
(define-fun eq_64 () Bool (= add_31 1))
(define-fun not__53 () Bool (not eq_64))
(assert not__53)
(define-fun eq_65 () Bool (= add_32 add_32))
(assert eq_65)
(define-fun eq_66 () Bool (= mul_47 mul_47))
(assert eq_66)
(define-fun eq_67 () Bool (= mul_48 mul_48))
(assert eq_67)
(define-fun eq_68 () Bool (= mul_47 1))
(define-fun not__54 () Bool (not eq_68))
(assert not__54)
(define-fun eq_69 () Bool (= mul_47 0))
(define-fun not__55 () Bool (not eq_69))
(assert not__55)
(define-fun lt_12 () Bool (< mul_47 0))
(define-fun not__56 () Bool (not lt_12))
(assert not__56)
(define-fun lt_13 () Bool (< 1 mul_48))
(assert lt_13)
(define-fun mul_56 () Int (* 8 add_36))
(define-fun add_37 () Int (+ add_31 2))
(define-fun lt_14 () Bool (< add_37 3))
(define-fun not__57 () Bool (not lt_14))
(assert not__57)
(define-fun add_38 () Int (+ add_32 2))
(define-fun lt_15 () Bool (< add_38 3))
(define-fun not__58 () Bool (not lt_15))
(assert not__58)
(define-fun floordiv_14 () Int (div mul_55 x_size0))
(define-fun gt_12 () Bool (> floordiv_14 2147483647))
(define-fun not__59 () Bool (not gt_12))
(assert not__59)
(define-fun sub_32 () Int (- add_37 3))
(define-fun floordiv_15 () Int (div sub_32 1))
(define-fun add_39 () Int (+ floordiv_15 1))
(define-fun sub_33 () Int (- add_38 3))
(define-fun floordiv_16 () Int (div sub_33 1))
(define-fun add_40 () Int (+ floordiv_16 1))
(define-fun mul_57 () Int (* 384 add_39))
(define-fun mul_58 () Int (* mul_57 add_40))
(define-fun gt_13 () Bool (> mul_58 2147483647))
(define-fun not__60 () Bool (not gt_13))
(assert not__60)
(define-fun sub_34 () Int (- add_37 2))
(define-fun sub_35 () Int (- sub_34 1))
(define-fun floordiv_17 () Int (div sub_35 1))
(define-fun add_41 () Int (+ floordiv_17 1))
(define-fun sub_36 () Int (- add_38 2))
(define-fun sub_37 () Int (- sub_36 1))
(define-fun floordiv_18 () Int (div sub_37 1))
(define-fun add_42 () Int (+ floordiv_18 1))
(define-fun ge_17 () Bool (>= add_41 0))
(assert ge_17)
(define-fun ge_18 () Bool (>= add_42 0))
(assert ge_18)
(define-fun eq_70 () Bool (= add_42 0))
(define-fun not__61 () Bool (not eq_70))
(assert not__61)
(define-fun eq_71 () Bool (= add_41 0))
(define-fun not__62 () Bool (not eq_71))
(assert not__62)
(define-fun mul_59 () Int (* add_42 add_41))
(define-fun mul_60 () Int (* mul_59 384))
(define-fun mul_61 () Int (* mul_60 x_size0))
(define-fun mul_62 () Int (* mul_60 sub))
(define-fun add_43 () Int (+ 1 mul_62))
(define-fun mul_63 () Int (* mul_59 383))
(define-fun add_44 () Int (+ add_43 mul_63))
(define-fun sub_38 () Int (- add_41 1))
(define-fun mul_64 () Int (* add_42 sub_38))
(define-fun add_45 () Int (+ add_44 mul_64))
(define-fun sub_39 () Int (- add_42 1))
(define-fun add_46 () Int (+ add_45 sub_39))
(define-fun mul_65 () Int (* 4 add_46))
(define-fun mul_66 () Int (* x_size0 384))
(define-fun mul_67 () Int (* mul_66 add_41))
(define-fun mul_68 () Int (* mul_67 add_42))
(define-fun eq_72 () Bool (= mul_68 0))
(define-fun not__63 () Bool (not eq_72))
(assert not__63)
(define-fun eq_73 () Bool (= add_42 1))
(define-fun not__64 () Bool (not eq_73))
(assert not__64)
(define-fun eq_74 () Bool (= add_41 1))
(define-fun not__65 () Bool (not eq_74))
(assert not__65)
(define-fun eq_75 () Bool (= add_42 add_42))
(assert eq_75)
(define-fun eq_76 () Bool (= mul_59 mul_59))
(assert eq_76)
(define-fun eq_77 () Bool (= mul_60 mul_60))
(assert eq_77)
(define-fun eq_78 () Bool (= mul_59 1))
(define-fun not__66 () Bool (not eq_78))
(assert not__66)
(define-fun eq_79 () Bool (= mul_59 0))
(define-fun not__67 () Bool (not eq_79))
(assert not__67)
(define-fun lt_16 () Bool (< mul_59 0))
(define-fun not__68 () Bool (not lt_16))
(assert not__68)
(define-fun lt_17 () Bool (< 1 mul_60))
(assert lt_17)
(define-fun gt_14 () Bool (> mul_47 1))
(assert gt_14)
(define-fun gt_15 () Bool (> mul_48 1))
(assert gt_15)
(define-fun eq_80 () Bool (= add_41 -1))
(define-fun not__69 () Bool (not eq_80))
(assert not__69)
(define-fun eq_81 () Bool (= add_42 -1))
(define-fun not__70 () Bool (not eq_81))
(assert not__70)
(define-fun eq_82 () Bool (= mul_68 mul_68))
(assert eq_82)
(define-fun eq_83 () Bool (= add_41 add_41))
(assert eq_83)
(define-fun add_47 () Int (+ add_41 2))
(define-fun lt_18 () Bool (< add_47 3))
(define-fun not__71 () Bool (not lt_18))
(assert not__71)
(define-fun add_48 () Int (+ add_42 2))
(define-fun lt_19 () Bool (< add_48 3))
(define-fun not__72 () Bool (not lt_19))
(assert not__72)
(define-fun floordiv_19 () Int (div mul_68 x_size0))
(define-fun gt_16 () Bool (> floordiv_19 2147483647))
(define-fun not__73 () Bool (not gt_16))
(assert not__73)
(define-fun sub_40 () Int (- add_47 3))
(define-fun floordiv_20 () Int (div sub_40 1))
(define-fun add_49 () Int (+ floordiv_20 1))
(define-fun sub_41 () Int (- add_48 3))
(define-fun floordiv_21 () Int (div sub_41 1))
(define-fun add_50 () Int (+ floordiv_21 1))
(define-fun mul_69 () Int (* 256 add_49))
(define-fun mul_70 () Int (* mul_69 add_50))
(define-fun gt_17 () Bool (> mul_70 2147483647))
(define-fun not__74 () Bool (not gt_17))
(assert not__74)
(define-fun sub_42 () Int (- add_47 2))
(define-fun sub_43 () Int (- sub_42 1))
(define-fun floordiv_22 () Int (div sub_43 1))
(define-fun add_51 () Int (+ floordiv_22 1))
(define-fun sub_44 () Int (- add_48 2))
(define-fun sub_45 () Int (- sub_44 1))
(define-fun floordiv_23 () Int (div sub_45 1))
(define-fun add_52 () Int (+ floordiv_23 1))
(define-fun ge_19 () Bool (>= add_51 0))
(assert ge_19)
(define-fun ge_20 () Bool (>= add_52 0))
(assert ge_20)
(define-fun eq_84 () Bool (= add_52 0))
(define-fun not__75 () Bool (not eq_84))
(assert not__75)
(define-fun eq_85 () Bool (= add_51 0))
(define-fun not__76 () Bool (not eq_85))
(assert not__76)
(define-fun mul_71 () Int (* add_52 add_51))
(define-fun mul_72 () Int (* mul_71 256))
(define-fun mul_73 () Int (* mul_72 x_size0))
(define-fun mul_74 () Int (* mul_72 sub))
(define-fun add_53 () Int (+ 1 mul_74))
(define-fun mul_75 () Int (* mul_71 255))
(define-fun add_54 () Int (+ add_53 mul_75))
(define-fun sub_46 () Int (- add_51 1))
(define-fun mul_76 () Int (* add_52 sub_46))
(define-fun add_55 () Int (+ add_54 mul_76))
(define-fun sub_47 () Int (- add_52 1))
(define-fun add_56 () Int (+ add_55 sub_47))
(define-fun mul_77 () Int (* 4 add_56))
(define-fun mul_78 () Int (* x_size0 256))
(define-fun mul_79 () Int (* mul_78 add_51))
(define-fun mul_80 () Int (* mul_79 add_52))
(define-fun eq_86 () Bool (= mul_80 0))
(define-fun not__77 () Bool (not eq_86))
(assert not__77)
(define-fun eq_87 () Bool (= add_52 1))
(define-fun not__78 () Bool (not eq_87))
(assert not__78)
(define-fun eq_88 () Bool (= add_51 1))
(define-fun not__79 () Bool (not eq_88))
(assert not__79)
(define-fun eq_89 () Bool (= add_52 add_52))
(assert eq_89)
(define-fun eq_90 () Bool (= mul_71 mul_71))
(assert eq_90)
(define-fun eq_91 () Bool (= mul_72 mul_72))
(assert eq_91)
(define-fun eq_92 () Bool (= mul_71 1))
(define-fun not__80 () Bool (not eq_92))
(assert not__80)
(define-fun eq_93 () Bool (= mul_71 0))
(define-fun not__81 () Bool (not eq_93))
(assert not__81)
(define-fun lt_20 () Bool (< mul_71 0))
(define-fun not__82 () Bool (not lt_20))
(assert not__82)
(define-fun lt_21 () Bool (< 1 mul_72))
(assert lt_21)
(define-fun gt_18 () Bool (> mul_59 1))
(assert gt_18)
(define-fun gt_19 () Bool (> mul_60 1))
(assert gt_19)
(define-fun eq_94 () Bool (= add_51 -1))
(define-fun not__83 () Bool (not eq_94))
(assert not__83)
(define-fun eq_95 () Bool (= add_52 -1))
(define-fun not__84 () Bool (not eq_95))
(assert not__84)
(define-fun eq_96 () Bool (= mul_80 mul_80))
(assert eq_96)
(define-fun eq_97 () Bool (= add_51 add_51))
(assert eq_97)
(define-fun add_57 () Int (+ add_51 2))
(define-fun lt_22 () Bool (< add_57 3))
(define-fun not__85 () Bool (not lt_22))
(assert not__85)
(define-fun add_58 () Int (+ add_52 2))
(define-fun lt_23 () Bool (< add_58 3))
(define-fun not__86 () Bool (not lt_23))
(assert not__86)
(define-fun floordiv_24 () Int (div mul_80 x_size0))
(define-fun gt_20 () Bool (> floordiv_24 2147483647))
(define-fun not__87 () Bool (not gt_20))
(assert not__87)
(define-fun sub_48 () Int (- add_57 3))
(define-fun floordiv_25 () Int (div sub_48 1))
(define-fun add_59 () Int (+ floordiv_25 1))
(define-fun sub_49 () Int (- add_58 3))
(define-fun floordiv_26 () Int (div sub_49 1))
(define-fun add_60 () Int (+ floordiv_26 1))
(define-fun mul_81 () Int (* 256 add_59))
(define-fun mul_82 () Int (* mul_81 add_60))
(define-fun gt_21 () Bool (> mul_82 2147483647))
(define-fun not__88 () Bool (not gt_21))
(assert not__88)
(define-fun sub_50 () Int (- add_57 2))
(define-fun sub_51 () Int (- sub_50 1))
(define-fun floordiv_27 () Int (div sub_51 1))
(define-fun add_61 () Int (+ floordiv_27 1))
(define-fun sub_52 () Int (- add_58 2))
(define-fun sub_53 () Int (- sub_52 1))
(define-fun floordiv_28 () Int (div sub_53 1))
(define-fun add_62 () Int (+ floordiv_28 1))
(define-fun ge_21 () Bool (>= add_61 0))
(assert ge_21)
(define-fun ge_22 () Bool (>= add_62 0))
(assert ge_22)
(define-fun eq_98 () Bool (= add_62 0))
(define-fun not__89 () Bool (not eq_98))
(assert not__89)
(define-fun eq_99 () Bool (= add_61 0))
(define-fun not__90 () Bool (not eq_99))
(assert not__90)
(define-fun mul_83 () Int (* add_62 add_61))
(define-fun mul_84 () Int (* mul_83 256))
(define-fun mul_85 () Int (* mul_84 x_size0))
(define-fun mul_86 () Int (* mul_84 sub))
(define-fun add_63 () Int (+ 1 mul_86))
(define-fun mul_87 () Int (* mul_83 255))
(define-fun add_64 () Int (+ add_63 mul_87))
(define-fun sub_54 () Int (- add_61 1))
(define-fun mul_88 () Int (* add_62 sub_54))
(define-fun add_65 () Int (+ add_64 mul_88))
(define-fun sub_55 () Int (- add_62 1))
(define-fun add_66 () Int (+ add_65 sub_55))
(define-fun mul_89 () Int (* 4 add_66))
(define-fun mul_90 () Int (* mul_78 add_61))
(define-fun mul_91 () Int (* mul_90 add_62))
(define-fun eq_100 () Bool (= mul_91 0))
(define-fun not__91 () Bool (not eq_100))
(assert not__91)
(define-fun eq_101 () Bool (= add_62 1))
(define-fun not__92 () Bool (not eq_101))
(assert not__92)
(define-fun eq_102 () Bool (= add_61 1))
(define-fun not__93 () Bool (not eq_102))
(assert not__93)
(define-fun eq_103 () Bool (= add_62 add_62))
(assert eq_103)
(define-fun eq_104 () Bool (= mul_83 mul_83))
(assert eq_104)
(define-fun eq_105 () Bool (= mul_84 mul_84))
(assert eq_105)
(define-fun eq_106 () Bool (= mul_83 1))
(define-fun not__94 () Bool (not eq_106))
(assert not__94)
(define-fun eq_107 () Bool (= mul_83 0))
(define-fun not__95 () Bool (not eq_107))
(assert not__95)
(define-fun lt_24 () Bool (< mul_83 0))
(define-fun not__96 () Bool (not lt_24))
(assert not__96)
(define-fun lt_25 () Bool (< 1 mul_84))
(assert lt_25)
(define-fun gt_22 () Bool (> mul_71 1))
(assert gt_22)
(define-fun gt_23 () Bool (> mul_72 1))
(assert gt_23)
(define-fun eq_108 () Bool (= add_61 -1))
(define-fun not__97 () Bool (not eq_108))
(assert not__97)
(define-fun eq_109 () Bool (= add_62 -1))
(define-fun not__98 () Bool (not eq_109))
(assert not__98)
(define-fun eq_110 () Bool (= mul_91 mul_91))
(assert eq_110)
(define-fun eq_111 () Bool (= add_61 add_61))
(assert eq_111)
(define-fun gt_24 () Bool (> mul_83 1))
(assert gt_24)
(define-fun gt_25 () Bool (> mul_84 1))
(assert gt_25)
(define-fun sub_56 () Int (- add_61 2))
(define-fun sub_57 () Int (- sub_56 1))
(define-fun floordiv_29 () Int (div sub_57 2))
(define-fun mod_4 () Int (mod sub_57 2))
(define-fun eq_112 () Bool (= mod_4 0))
(assert eq_112)
(define-fun add_67 () Int (+ floordiv_29 1))
(define-fun sub_58 () Int (- add_62 2))
(define-fun sub_59 () Int (- sub_58 1))
(define-fun floordiv_30 () Int (div sub_59 2))
(define-fun mod_5 () Int (mod sub_59 2))
(define-fun eq_113 () Bool (= mod_5 0))
(assert eq_113)
(define-fun add_68 () Int (+ floordiv_30 1))
(define-fun ge_23 () Bool (>= add_68 1))
(assert ge_23)
(define-fun ge_24 () Bool (>= add_67 1))
(assert ge_24)
(define-fun ge_25 () Bool (>= add_67 0))
(assert ge_25)
(define-fun ge_26 () Bool (>= add_68 0))
(assert ge_26)
(define-fun eq_114 () Bool (= add_68 0))
(define-fun not__99 () Bool (not eq_114))
(assert not__99)
(define-fun eq_115 () Bool (= add_67 0))
(define-fun not__100 () Bool (not eq_115))
(assert not__100)
(define-fun mul_92 () Int (* add_68 add_67))
(define-fun mul_93 () Int (* mul_92 256))
(define-fun mul_94 () Int (* mul_93 x_size0))
(define-fun mul_95 () Int (* mul_93 sub))
(define-fun add_69 () Int (+ 1 mul_95))
(define-fun mul_96 () Int (* mul_92 255))
(define-fun add_70 () Int (+ add_69 mul_96))
(define-fun sub_60 () Int (- add_67 1))
(define-fun mul_97 () Int (* add_68 sub_60))
(define-fun add_71 () Int (+ add_70 mul_97))
(define-fun sub_61 () Int (- add_68 1))
(define-fun add_72 () Int (+ add_71 sub_61))
(define-fun mul_98 () Int (* 4 add_72))
(define-fun mul_99 () Int (* mul_78 add_67))
(define-fun mul_100 () Int (* mul_99 add_68))
(define-fun eq_116 () Bool (= mul_100 0))
(define-fun not__101 () Bool (not eq_116))
(assert not__101)
(define-fun eq_117 () Bool (= add_68 1))
(define-fun not__102 () Bool (not eq_117))
(assert not__102)
(define-fun eq_118 () Bool (= add_67 1))
(define-fun not__103 () Bool (not eq_118))
(assert not__103)
(define-fun eq_119 () Bool (= add_68 add_68))
(assert eq_119)
(define-fun eq_120 () Bool (= mul_92 mul_92))
(assert eq_120)
(define-fun eq_121 () Bool (= mul_93 mul_93))
(assert eq_121)
(define-fun eq_122 () Bool (= mul_92 1))
(define-fun not__104 () Bool (not eq_122))
(assert not__104)
(define-fun eq_123 () Bool (= mul_92 0))
(define-fun not__105 () Bool (not eq_123))
(assert not__105)
(define-fun lt_26 () Bool (< mul_92 0))
(define-fun not__106 () Bool (not lt_26))
(assert not__106)
(define-fun lt_27 () Bool (< 1 mul_93))
(assert lt_27)
(define-fun mul_101 () Int (* 8 add_72))
(define-fun gt_26 () Bool (> mul_92 1))
(assert gt_26)
(define-fun gt_27 () Bool (> mul_93 1))
(assert gt_27)
(define-fun mul_102 () Int (* 9216 x_size0))
(define-fun mul_103 () Int (* 9216 sub))
(define-fun add_73 () Int (+ 1 mul_103))
(define-fun add_74 () Int (+ add_73 9180))
(define-fun add_75 () Int (+ add_74 30))
(define-fun add_76 () Int (+ add_75 5))
(define-fun mul_104 () Int (* 4 add_76))
(define-fun mul_105 () Int (* mul_78 6))
(define-fun mul_106 () Int (* mul_105 6))
(define-fun eq_124 () Bool (= mul_106 0))
(define-fun not__107 () Bool (not eq_124))
(assert not__107)
(define-fun mul_107 () Int (* x_size0 9216))
(define-fun eq_125 () Bool (= mul_106 mul_107))
(assert eq_125)
(define-fun lt_28 () Bool (< 1 mul_102))
(assert lt_28)
(define-fun lt_29 () Bool (< 9216 mul_102))
(assert lt_29)
(define-fun eq_126 () Bool (= mul_102 mul_102))
(assert eq_126)
(define-fun gt_28 () Bool (> mul_106 0))
(assert gt_28)
(define-fun eq_127 () Bool (= mul_107 0))
(define-fun not__108 () Bool (not eq_127))
(assert not__108)
(define-fun mul_108 () Int (* 4096 x_size0))
(define-fun mul_109 () Int (* 4096 sub))
(define-fun add_77 () Int (+ 1 mul_109))
(define-fun add_78 () Int (+ add_77 4095))
(define-fun mul_110 () Int (* 4 add_78))
(define-fun mul_111 () Int (* x_size0 4096))
(define-fun eq_128 () Bool (= mul_111 0))
(define-fun not__109 () Bool (not eq_128))
(assert not__109)
(define-fun lt_30 () Bool (< x_size0 0))
(define-fun not__110 () Bool (not lt_30))
(assert not__110)
(define-fun lt_31 () Bool (< x_size0 2))
(define-fun not__111 () Bool (not lt_31))
(assert not__111)
(define-fun eq_129 () Bool (= mul_111 mul_111))
(assert eq_129)
(define-fun mul_112 () Int (* 1000 x_size0))
(define-fun mul_113 () Int (* 1000 sub))
(define-fun add_79 () Int (+ 1 mul_113))
(define-fun add_80 () Int (+ add_79 999))
(define-fun mul_114 () Int (* 4 add_80))
(define-fun mul_115 () Int (* x_size0 1000))
(define-fun eq_130 () Bool (= mul_115 0))
(define-fun not__112 () Bool (not eq_130))
(assert not__112)
(define-fun lt_32 () Bool (< add_10 0))
(define-fun not__113 () Bool (not lt_32))
(assert not__113)
(define-fun lt_33 () Bool (< add_9 0))
(define-fun not__114 () Bool (not lt_33))
(assert not__114)
(define-fun gt_29 () Bool (> add_10 1))
(assert gt_29)
(define-fun lt_34 () Bool (< add_10 mul_15))
(assert lt_34)
(define-fun eq_131 () Bool (= mul_16 0))
(define-fun not__115 () Bool (not eq_131))
(assert not__115)
(define-fun lt_35 () Bool (< mul_15 mul_16))
(assert lt_35)
(define-fun lt_36 () Bool (< add_26 0))
(define-fun not__116 () Bool (not lt_36))
(assert not__116)
(define-fun lt_37 () Bool (< add_25 0))
(define-fun not__117 () Bool (not lt_37))
(assert not__117)
(define-fun gt_30 () Bool (> add_26 1))
(assert gt_30)
(define-fun lt_38 () Bool (< add_26 mul_37))
(assert lt_38)
(define-fun eq_132 () Bool (= mul_38 0))
(define-fun not__118 () Bool (not eq_132))
(assert not__118)
(define-fun lt_39 () Bool (< mul_37 mul_38))
(assert lt_39)
(define-fun lt_40 () Bool (< add_42 0))
(define-fun not__119 () Bool (not lt_40))
(assert not__119)
(define-fun lt_41 () Bool (< add_41 0))
(define-fun not__120 () Bool (not lt_41))
(assert not__120)
(define-fun gt_31 () Bool (> add_42 1))
(assert gt_31)
(define-fun lt_42 () Bool (< add_42 mul_59))
(assert lt_42)
(define-fun eq_133 () Bool (= mul_60 0))
(define-fun not__121 () Bool (not eq_133))
(assert not__121)
(define-fun lt_43 () Bool (< mul_59 mul_60))
(assert lt_43)
(define-fun lt_44 () Bool (< add_52 0))
(define-fun not__122 () Bool (not lt_44))
(assert not__122)
(define-fun lt_45 () Bool (< add_51 0))
(define-fun not__123 () Bool (not lt_45))
(assert not__123)
(define-fun gt_32 () Bool (> add_52 1))
(assert gt_32)
(define-fun lt_46 () Bool (< add_52 mul_71))
(assert lt_46)
(define-fun eq_134 () Bool (= mul_72 0))
(define-fun not__124 () Bool (not eq_134))
(assert not__124)
(define-fun lt_47 () Bool (< mul_71 mul_72))
(assert lt_47)
(define-fun lt_48 () Bool (< add_62 0))
(define-fun not__125 () Bool (not lt_48))
(assert not__125)
(define-fun lt_49 () Bool (< add_61 0))
(define-fun not__126 () Bool (not lt_49))
(assert not__126)
(define-fun gt_33 () Bool (> add_62 1))
(assert gt_33)
(define-fun lt_50 () Bool (< add_62 mul_83))
(assert lt_50)
(define-fun eq_135 () Bool (= mul_84 0))
(define-fun not__127 () Bool (not eq_135))
(assert not__127)
(define-fun lt_51 () Bool (< mul_83 mul_84))
(assert lt_51)
(define-fun eq_136 () Bool (= mul_12 0))
(define-fun not__128 () Bool (not eq_136))
(assert not__128)
(define-fun eq_137 () Bool (= mul_114 0))
(define-fun not__129 () Bool (not eq_137))
(assert not__129)
(define-fun output0_size0 () Int x_size0)
(define-fun output0_size1 () Int 1000)
(define-fun output0_stride0 () Int 1000)
(define-fun output0_stride1 () Int 1)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-model)

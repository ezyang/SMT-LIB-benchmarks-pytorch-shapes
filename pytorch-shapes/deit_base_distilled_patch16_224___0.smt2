(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const x_size0 Int)
(set-info :example-x_size0 8)
(declare-const x_size1 Int)
(set-info :example-x_size1 3)
(declare-const x_size2 Int)
(set-info :example-x_size2 224)
(declare-const x_size3 Int)
(set-info :example-x_size3 224)
(declare-const x_stride0 Int)
(set-info :example-x_stride0 150528)
(declare-const x_stride1 Int)
(set-info :example-x_stride1 50176)
(declare-const x_stride2 Int)
(set-info :example-x_stride2 224)
(declare-const x_stride3 Int)
(set-info :example-x_stride3 1)
(declare-const x_storage_offset Int)
(set-info :example-x_storage_offset 0)
(define-fun ge () Bool (>= x_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= x_size1 0))
(assert ge_1)
(define-fun ge_2 () Bool (>= x_size2 0))
(assert ge_2)
(define-fun ge_3 () Bool (>= x_size3 0))
(assert ge_3)
(define-fun eq () Bool (= x_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- x_size0 1))
(define-fun mul () Int (* x_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= x_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- x_size1 1))
(define-fun mul_1 () Int (* x_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun eq_2 () Bool (= x_size2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun sub_2 () Int (- x_size2 1))
(define-fun mul_2 () Int (* x_stride2 sub_2))
(define-fun add_2 () Int (+ add_1 mul_2))
(define-fun eq_3 () Bool (= x_size3 0))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun sub_3 () Int (- x_size3 1))
(define-fun mul_3 () Int (* x_stride3 sub_3))
(define-fun add_3 () Int (+ add_2 mul_3))
(define-fun mul_4 () Int (* 4 add_3))
(define-fun mul_5 () Int (* x_size0 x_size1))
(define-fun mul_6 () Int (* mul_5 x_size2))
(define-fun mul_7 () Int (* mul_6 x_size3))
(define-fun eq_4 () Bool (= mul_7 0))
(define-fun not__4 () Bool (not eq_4))
(assert not__4)
(define-fun eq_5 () Bool (= x_size3 1))
(define-fun not__5 () Bool (not eq_5))
(assert not__5)
(define-fun eq_6 () Bool (= x_stride3 1))
(assert eq_6)
(define-fun eq_7 () Bool (= x_size2 1))
(define-fun not__6 () Bool (not eq_7))
(assert not__6)
(define-fun eq_8 () Bool (= x_stride2 x_size3))
(assert eq_8)
(define-fun mul_8 () Int (* x_size3 x_size2))
(define-fun eq_9 () Bool (= x_size1 1))
(define-fun not__7 () Bool (not eq_9))
(assert not__7)
(define-fun eq_10 () Bool (= x_stride1 mul_8))
(assert eq_10)
(define-fun mul_9 () Int (* mul_8 x_size1))
(define-fun eq_11 () Bool (= x_size0 1))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun eq_12 () Bool (= x_stride0 mul_9))
(assert eq_12)
(define-fun mul_10 () Int (* mul_9 x_size0))
(define-fun eq_13 () Bool (= x_stride1 1))
(define-fun not__9 () Bool (not eq_13))
(assert not__9)
(define-fun eq_14 () Bool (= x_stride1 0))
(define-fun not__10 () Bool (not eq_14))
(assert not__10)
(define-fun lt () Bool (< x_stride1 0))
(define-fun not__11 () Bool (not lt))
(assert not__11)
(define-fun gt () Bool (> x_size1 1))
(assert gt)
(define-fun mul_11 () Int (* x_stride1 x_size1))
(define-fun lt_1 () Bool (< x_stride3 mul_11))
(assert lt_1)
(define-fun ge_4 () Bool (>= x_storage_offset 0))
(assert ge_4)
(define-fun add_4 () Int (+ x_storage_offset add_3))
(define-fun mul_12 () Int (* 4 add_4))
(define-fun eq_15 () Bool (= x_size2 224))
(assert eq_15)
(define-fun eq_16 () Bool (= x_size3 224))
(assert eq_16)
(define-fun eq_17 () Bool (= x_size1 3))
(assert eq_17)
(define-fun lt_2 () Bool (< x_size2 16))
(define-fun not__12 () Bool (not lt_2))
(assert not__12)
(define-fun lt_3 () Bool (< x_size3 16))
(define-fun not__13 () Bool (not lt_3))
(assert not__13)
(define-fun floordiv () Int (div mul_7 x_size0))
(define-fun gt_1 () Bool (> floordiv 2147483647))
(define-fun not__14 () Bool (not gt_1))
(assert not__14)
(define-fun sub_4 () Int (- x_size2 16))
(define-fun floordiv_1 () Int (div sub_4 16))
(define-fun add_5 () Int (+ floordiv_1 1))
(define-fun sub_5 () Int (- x_size3 16))
(define-fun floordiv_2 () Int (div sub_5 16))
(define-fun add_6 () Int (+ floordiv_2 1))
(define-fun mul_13 () Int (* 768 add_5))
(define-fun mul_14 () Int (* mul_13 add_6))
(define-fun gt_2 () Bool (> mul_14 2147483647))
(define-fun not__15 () Bool (not gt_2))
(assert not__15)
(define-fun sub_6 () Int (- x_size2 15))
(define-fun sub_7 () Int (- sub_6 1))
(define-fun floordiv_3 () Int (div sub_7 16))
(define-fun add_7 () Int (+ floordiv_3 1))
(define-fun sub_8 () Int (- x_size3 15))
(define-fun sub_9 () Int (- sub_8 1))
(define-fun floordiv_4 () Int (div sub_9 16))
(define-fun add_8 () Int (+ floordiv_4 1))
(define-fun ge_5 () Bool (>= add_7 0))
(assert ge_5)
(define-fun ge_6 () Bool (>= add_8 0))
(assert ge_6)
(define-fun eq_18 () Bool (= add_8 0))
(define-fun not__16 () Bool (not eq_18))
(assert not__16)
(define-fun eq_19 () Bool (= add_7 0))
(define-fun not__17 () Bool (not eq_19))
(assert not__17)
(define-fun mul_15 () Int (* add_8 add_7))
(define-fun mul_16 () Int (* mul_15 768))
(define-fun mul_17 () Int (* mul_16 x_size0))
(define-fun mul_18 () Int (* mul_16 sub))
(define-fun add_9 () Int (+ 1 mul_18))
(define-fun mul_19 () Int (* mul_15 767))
(define-fun add_10 () Int (+ add_9 mul_19))
(define-fun sub_10 () Int (- add_7 1))
(define-fun mul_20 () Int (* add_8 sub_10))
(define-fun add_11 () Int (+ add_10 mul_20))
(define-fun sub_11 () Int (- add_8 1))
(define-fun add_12 () Int (+ add_11 sub_11))
(define-fun mul_21 () Int (* 4 add_12))
(define-fun mul_22 () Int (* x_size0 768))
(define-fun mul_23 () Int (* mul_22 add_7))
(define-fun mul_24 () Int (* mul_23 add_8))
(define-fun eq_20 () Bool (= mul_24 0))
(define-fun not__18 () Bool (not eq_20))
(assert not__18)
(define-fun eq_21 () Bool (= add_8 1))
(define-fun not__19 () Bool (not eq_21))
(assert not__19)
(define-fun eq_22 () Bool (= add_7 1))
(define-fun not__20 () Bool (not eq_22))
(assert not__20)
(define-fun eq_23 () Bool (= add_8 add_8))
(assert eq_23)
(define-fun eq_24 () Bool (= mul_15 mul_15))
(assert eq_24)
(define-fun eq_25 () Bool (= mul_16 mul_16))
(assert eq_25)
(define-fun eq_26 () Bool (= mul_15 1))
(define-fun not__21 () Bool (not eq_26))
(assert not__21)
(define-fun eq_27 () Bool (= mul_15 0))
(define-fun not__22 () Bool (not eq_27))
(assert not__22)
(define-fun lt_4 () Bool (< mul_15 0))
(define-fun not__23 () Bool (not lt_4))
(assert not__23)
(define-fun lt_5 () Bool (< 1 mul_16))
(assert lt_5)
(define-fun gt_3 () Bool (> x_stride1 1))
(assert gt_3)
(define-fun mul_25 () Int (* add_7 add_8))
(define-fun eq_28 () Bool (= x_size0 -1))
(define-fun not__24 () Bool (not eq_28))
(assert not__24)
(define-fun eq_29 () Bool (= mul_25 -1))
(define-fun not__25 () Bool (not eq_29))
(assert not__25)
(define-fun ge_7 () Bool (>= mul_25 0))
(assert ge_7)
(define-fun mul_26 () Int (* mul_22 mul_25))
(define-fun eq_30 () Bool (= mul_24 mul_26))
(assert eq_30)
(define-fun lt_6 () Bool (< 1 mul_17))
(assert lt_6)
(define-fun lt_7 () Bool (< mul_25 mul_17))
(assert lt_7)
(define-fun mul_27 () Int (* mul_25 768))
(define-fun lt_8 () Bool (< mul_27 mul_17))
(assert lt_8)
(define-fun mul_28 () Int (* mul_27 x_size0))
(define-fun eq_31 () Bool (= mul_28 mul_17))
(assert eq_31)
(define-fun eq_32 () Bool (= x_size0 x_size0))
(assert eq_32)
(define-fun eq_33 () Bool (= add_7 mul_25))
(define-fun not__26 () Bool (not eq_33))
(assert not__26)
(define-fun eq_34 () Bool (= mul_25 add_7))
(define-fun not__27 () Bool (not eq_34))
(assert not__27)
(define-fun mod () Int (mod add_7 mul_25))
(define-fun eq_35 () Bool (= mod 0))
(define-fun not__28 () Bool (not eq_35))
(assert not__28)
(define-fun mod_1 () Int (mod mul_25 mul_25))
(define-fun eq_36 () Bool (= mod_1 0))
(assert eq_36)
(define-fun lt_9 () Bool (< add_8 1))
(define-fun not__29 () Bool (not lt_9))
(assert not__29)
(define-fun gt_4 () Bool (> mul_24 0))
(assert gt_4)
(define-fun mul_29 () Int (* mul_22 mul_15))
(define-fun eq_37 () Bool (= mul_29 0))
(define-fun not__30 () Bool (not eq_37))
(assert not__30)
(define-fun eq_38 () Bool (= mul_25 mul_25))
(assert eq_38)
(define-fun mul_30 () Int (* x_size0 mul_15))
(define-fun mul_31 () Int (* mul_30 768))
(define-fun eq_39 () Bool (= mul_31 0))
(define-fun not__31 () Bool (not eq_39))
(assert not__31)
(define-fun lt_10 () Bool (< mul_15 2))
(define-fun not__32 () Bool (not lt_10))
(assert not__32)
(define-fun lt_11 () Bool (< x_size0 2))
(define-fun not__33 () Bool (not lt_11))
(assert not__33)
(define-fun lt_12 () Bool (< mul_15 1))
(define-fun not__34 () Bool (not lt_12))
(assert not__34)
(define-fun lt_13 () Bool (< mul_15 mul_16))
(assert lt_13)
(define-fun eq_40 () Bool (= mul_22 0))
(define-fun not__35 () Bool (not eq_40))
(assert not__35)
(define-fun add_13 () Int (+ 2 mul_15))
(define-fun ge_8 () Bool (>= add_13 0))
(assert ge_8)
(define-fun eq_41 () Bool (= add_13 0))
(define-fun not__36 () Bool (not eq_41))
(assert not__36)
(define-fun mul_32 () Int (* 768 add_13))
(define-fun mul_33 () Int (* mul_32 x_size0))
(define-fun mul_34 () Int (* mul_32 sub))
(define-fun add_14 () Int (+ 1 mul_34))
(define-fun sub_12 () Int (- add_13 1))
(define-fun mul_35 () Int (* 768 sub_12))
(define-fun add_15 () Int (+ add_14 mul_35))
(define-fun add_16 () Int (+ add_15 767))
(define-fun mul_36 () Int (* 4 add_16))
(define-fun mul_37 () Int (* x_size0 add_13))
(define-fun mul_38 () Int (* mul_37 768))
(define-fun eq_42 () Bool (= mul_38 0))
(define-fun not__37 () Bool (not eq_42))
(assert not__37)
(define-fun eq_43 () Bool (= add_13 1))
(define-fun not__38 () Bool (not eq_43))
(assert not__38)
(define-fun eq_44 () Bool (= mul_32 mul_32))
(assert eq_44)
(define-fun lt_14 () Bool (< add_13 0))
(define-fun not__39 () Bool (not lt_14))
(assert not__39)
(define-fun lt_15 () Bool (< x_size0 0))
(define-fun not__40 () Bool (not lt_15))
(assert not__40)
(define-fun eq_45 () Bool (= add_13 198))
(assert eq_45)
(define-fun eq_46 () Bool (= add_13 add_13))
(assert eq_46)
(define-fun eq_47 () Bool (= add_13 -1))
(define-fun not__41 () Bool (not eq_47))
(assert not__41)
(define-fun eq_48 () Bool (= 0 mul_32))
(define-fun not__42 () Bool (not eq_48))
(assert not__42)
(define-fun lt_16 () Bool (< add_13 2))
(define-fun not__43 () Bool (not lt_16))
(assert not__43)
(define-fun eq_49 () Bool (= mul_32 0))
(define-fun not__44 () Bool (not eq_49))
(assert not__44)
(define-fun gt_5 () Bool (> mul_32 768))
(assert gt_5)
(define-fun mul_39 () Int (* add_13 x_size0))
(define-fun mul_40 () Int (* add_13 sub))
(define-fun add_17 () Int (+ 1 mul_40))
(define-fun add_18 () Int (+ add_17 sub_12))
(define-fun mul_41 () Int (* 4 add_18))
(define-fun eq_50 () Bool (= mul_37 0))
(define-fun not__45 () Bool (not eq_50))
(assert not__45)
(define-fun lt_17 () Bool (< add_13 1))
(define-fun not__46 () Bool (not lt_17))
(assert not__46)
(define-fun gt_6 () Bool (> add_13 1))
(assert gt_6)
(define-fun lt_18 () Bool (< 1 add_13))
(assert lt_18)
(define-fun eq_51 () Bool (= mul_37 -1))
(define-fun not__47 () Bool (not eq_51))
(assert not__47)
(define-fun ge_9 () Bool (>= mul_37 0))
(assert ge_9)
(define-fun eq_52 () Bool (= mul_38 mul_38))
(assert eq_52)
(define-fun eq_53 () Bool (= x_size0 mul_37))
(define-fun not__48 () Bool (not eq_53))
(assert not__48)
(define-fun eq_54 () Bool (= mul_37 x_size0))
(define-fun not__49 () Bool (not eq_54))
(assert not__49)
(define-fun mod_2 () Int (mod x_size0 mul_37))
(define-fun eq_55 () Bool (= mod_2 0))
(define-fun not__50 () Bool (not eq_55))
(assert not__50)
(define-fun mod_3 () Int (mod mul_37 mul_37))
(define-fun eq_56 () Bool (= mod_3 0))
(assert eq_56)
(define-fun lt_19 () Bool (< mul_32 768))
(define-fun not__51 () Bool (not lt_19))
(assert not__51)
(define-fun gt_7 () Bool (> mul_38 0))
(assert gt_7)
(define-fun mul_42 () Int (* mul_39 768))
(define-fun eq_57 () Bool (= mul_42 0))
(define-fun not__52 () Bool (not eq_57))
(assert not__52)
(define-fun eq_58 () Bool (= mul_39 1))
(define-fun not__53 () Bool (not eq_58))
(assert not__53)
(define-fun mul_43 () Int (* 768 mul_39))
(define-fun eq_59 () Bool (= mul_37 mul_37))
(assert eq_59)
(define-fun ge_10 () Bool (>= mul_39 0))
(assert ge_10)
(define-fun eq_60 () Bool (= mul_39 0))
(define-fun not__54 () Bool (not eq_60))
(assert not__54)
(define-fun mul_44 () Int (* 2304 mul_39))
(define-fun sub_13 () Int (- mul_39 1))
(define-fun mul_45 () Int (* 2304 sub_13))
(define-fun add_19 () Int (+ 1 mul_45))
(define-fun add_20 () Int (+ add_19 2303))
(define-fun mul_46 () Int (* 4 add_20))
(define-fun mul_47 () Int (* mul_39 2304))
(define-fun eq_61 () Bool (= mul_47 0))
(define-fun not__55 () Bool (not eq_61))
(assert not__55)
(define-fun lt_20 () Bool (< mul_39 0))
(define-fun not__56 () Bool (not lt_20))
(assert not__56)
(define-fun eq_62 () Bool (= mul_39 mul_39))
(assert eq_62)
(define-fun lt_21 () Bool (< mul_39 2))
(define-fun not__57 () Bool (not lt_21))
(assert not__57)
(define-fun mul_48 () Int (* mul_37 2304))
(define-fun eq_63 () Bool (= mul_47 mul_48))
(assert eq_63)
(define-fun eq_64 () Bool (= mul_39 x_size0))
(define-fun not__58 () Bool (not eq_64))
(assert not__58)
(define-fun eq_65 () Bool (= x_size0 mul_39))
(define-fun not__59 () Bool (not eq_65))
(assert not__59)
(define-fun mod_4 () Int (mod mul_39 x_size0))
(define-fun eq_66 () Bool (= mod_4 0))
(assert eq_66)
(define-fun floordiv_5 () Int (div mul_39 x_size0))
(define-fun mul_49 () Int (* 2304 floordiv_5))
(define-fun mul_50 () Int (* x_size0 floordiv_5))
(define-fun mul_51 () Int (* mul_50 2304))
(define-fun eq_67 () Bool (= mul_51 0))
(define-fun not__60 () Bool (not eq_67))
(assert not__60)
(define-fun eq_68 () Bool (= floordiv_5 1))
(define-fun not__61 () Bool (not eq_68))
(assert not__61)
(define-fun eq_69 () Bool (= mul_49 mul_49))
(assert eq_69)
(define-fun mul_52 () Int (* mul_49 x_size0))
(define-fun eq_70 () Bool (= add_13 floordiv_5))
(assert eq_70)
(define-fun mul_53 () Int (* mul_37 3))
(define-fun mul_54 () Int (* mul_53 12))
(define-fun mul_55 () Int (* mul_54 64))
(define-fun eq_71 () Bool (= mul_51 mul_55))
(assert eq_71)
(define-fun lt_22 () Bool (< 1 mul_52))
(assert lt_22)
(define-fun lt_23 () Bool (< 64 mul_52))
(assert lt_23)
(define-fun lt_24 () Bool (< 768 mul_52))
(assert lt_24)
(define-fun lt_25 () Bool (< 2304 mul_52))
(assert lt_25)
(define-fun mul_56 () Int (* 2304 add_13))
(define-fun lt_26 () Bool (< mul_56 mul_52))
(assert lt_26)
(define-fun mul_57 () Int (* mul_56 x_size0))
(define-fun eq_72 () Bool (= mul_57 mul_52))
(assert eq_72)
(define-fun eq_73 () Bool (= floordiv_5 add_13))
(assert eq_73)
(define-fun mul_58 () Int (* mul_50 3))
(define-fun mul_59 () Int (* mul_58 768))
(define-fun eq_74 () Bool (= mul_59 0))
(define-fun not__62 () Bool (not eq_74))
(assert not__62)
(define-fun eq_75 () Bool (= floordiv_5 0))
(define-fun not__63 () Bool (not eq_75))
(assert not__63)
(define-fun gt_8 () Bool (> floordiv_5 1))
(assert gt_8)
(define-fun lt_27 () Bool (< 1 mul_49))
(assert lt_27)
(define-fun mul_60 () Int (* mul_58 12))
(define-fun mul_61 () Int (* mul_60 64))
(define-fun eq_76 () Bool (= mul_61 0))
(define-fun not__64 () Bool (not eq_76))
(assert not__64)
(define-fun mul_62 () Int (* 3 x_size0))
(define-fun mul_63 () Int (* mul_62 12))
(define-fun mul_64 () Int (* mul_63 floordiv_5))
(define-fun mul_65 () Int (* mul_64 64))
(define-fun eq_77 () Bool (= mul_65 0))
(define-fun not__65 () Bool (not eq_77))
(assert not__65)
(define-fun eq_78 () Bool (= mul_49 1))
(define-fun not__66 () Bool (not eq_78))
(assert not__66)
(define-fun eq_79 () Bool (= mul_49 0))
(define-fun not__67 () Bool (not eq_79))
(assert not__67)
(define-fun lt_28 () Bool (< mul_49 0))
(define-fun not__68 () Bool (not lt_28))
(assert not__68)
(define-fun gt_9 () Bool (> x_size0 1))
(assert gt_9)
(define-fun lt_29 () Bool (< mul_49 768))
(define-fun not__69 () Bool (not lt_29))
(assert not__69)
(define-fun lt_30 () Bool (< floordiv_5 2))
(define-fun not__70 () Bool (not lt_30))
(assert not__70)
(define-fun lt_31 () Bool (< 2304 mul_49))
(assert lt_31)
(define-fun mul_66 () Int (* x_size0 12))
(define-fun mul_67 () Int (* mul_66 floordiv_5))
(define-fun mul_68 () Int (* mul_67 64))
(define-fun eq_80 () Bool (= mul_68 0))
(define-fun not__71 () Bool (not eq_80))
(assert not__71)
(define-fun lt_32 () Bool (< 64 mul_49))
(assert lt_32)
(define-fun mul_69 () Int (* mul_66 64))
(define-fun mul_70 () Int (* mul_69 floordiv_5))
(define-fun eq_81 () Bool (= mul_70 0))
(define-fun not__72 () Bool (not eq_81))
(assert not__72)
(define-fun eq_82 () Bool (= floordiv_5 floordiv_5))
(assert eq_82)
(define-fun eq_83 () Bool (= floordiv_5 -1))
(define-fun not__73 () Bool (not eq_83))
(assert not__73)
(define-fun ge_11 () Bool (>= floordiv_5 0))
(assert ge_11)
(define-fun eq_84 () Bool (= mul_66 -1))
(define-fun not__74 () Bool (not eq_84))
(assert not__74)
(define-fun ge_12 () Bool (>= mul_66 0))
(assert ge_12)
(define-fun eq_85 () Bool (= mul_68 mul_68))
(assert eq_85)
(define-fun mul_71 () Int (* floordiv_5 2304))
(define-fun eq_86 () Bool (= 64 mul_71))
(define-fun not__75 () Bool (not eq_86))
(assert not__75)
(define-fun lt_33 () Bool (< 1 floordiv_5))
(assert lt_33)
(define-fun lt_34 () Bool (< floordiv_5 floordiv_5))
(define-fun not__76 () Bool (not lt_34))
(assert not__76)
(define-fun eq_87 () Bool (= mul_66 1))
(define-fun not__77 () Bool (not eq_87))
(assert not__77)
(define-fun eq_88 () Bool (= mul_49 768))
(define-fun not__78 () Bool (not eq_88))
(assert not__78)
(define-fun eq_89 () Bool (= mul_66 12))
(define-fun not__79 () Bool (not eq_89))
(assert not__79)
(define-fun mul_72 () Int (* 64 floordiv_5))
(define-fun mul_73 () Int (* mul_72 12))
(define-fun mul_74 () Int (* mul_73 x_size0))
(define-fun mul_75 () Int (* mul_73 sub))
(define-fun add_21 () Int (+ 1 mul_75))
(define-fun mul_76 () Int (* mul_72 11))
(define-fun add_22 () Int (+ add_21 mul_76))
(define-fun sub_14 () Int (- floordiv_5 1))
(define-fun mul_77 () Int (* 64 sub_14))
(define-fun add_23 () Int (+ add_22 mul_77))
(define-fun add_24 () Int (+ add_23 63))
(define-fun mul_78 () Int (* 4 add_24))
(define-fun eq_90 () Bool (= mul_72 mul_72))
(assert eq_90)
(define-fun eq_91 () Bool (= mul_73 mul_73))
(assert eq_91)
(define-fun eq_92 () Bool (= mul_72 1))
(define-fun not__80 () Bool (not eq_92))
(assert not__80)
(define-fun eq_93 () Bool (= mul_72 0))
(define-fun not__81 () Bool (not eq_93))
(assert not__81)
(define-fun lt_35 () Bool (< mul_72 0))
(define-fun not__82 () Bool (not lt_35))
(assert not__82)
(define-fun lt_36 () Bool (< 1 mul_73))
(assert lt_36)
(define-fun eq_94 () Bool (= x_size0 mul_66))
(define-fun not__83 () Bool (not eq_94))
(assert not__83)
(define-fun eq_95 () Bool (= mul_66 x_size0))
(define-fun not__84 () Bool (not eq_95))
(assert not__84)
(define-fun mod_5 () Int (mod x_size0 mul_66))
(define-fun eq_96 () Bool (= mod_5 0))
(define-fun not__85 () Bool (not eq_96))
(assert not__85)
(define-fun mod_6 () Int (mod mul_66 mul_66))
(define-fun eq_97 () Bool (= mod_6 0))
(assert eq_97)
(define-fun mul_79 () Int (* 12 x_size0))
(define-fun lt_37 () Bool (< mul_73 mul_72))
(define-fun not__86 () Bool (not lt_37))
(assert not__86)
(define-fun gt_10 () Bool (> mul_68 0))
(assert gt_10)
(define-fun mul_80 () Int (* mul_79 floordiv_5))
(define-fun mul_81 () Int (* mul_80 64))
(define-fun eq_98 () Bool (= mul_81 0))
(define-fun not__87 () Bool (not eq_98))
(assert not__87)
(define-fun eq_99 () Bool (= mul_79 1))
(define-fun not__88 () Bool (not eq_99))
(assert not__88)
(define-fun mul_82 () Int (* mul_72 mul_79))
(define-fun eq_100 () Bool (= mul_66 mul_66))
(assert eq_100)
(define-fun eq_101 () Bool (= mul_70 mul_70))
(assert eq_101)
(define-fun eq_102 () Bool (= 1 mul_71))
(define-fun not__89 () Bool (not eq_102))
(assert not__89)
(define-fun mul_83 () Int (* 64 mul_66))
(define-fun eq_103 () Bool (= mul_83 768))
(define-fun not__90 () Bool (not eq_103))
(assert not__90)
(define-fun mul_84 () Int (* floordiv_5 64))
(define-fun mul_85 () Int (* mul_84 12))
(define-fun mul_86 () Int (* mul_85 x_size0))
(define-fun mul_87 () Int (* mul_85 sub))
(define-fun add_25 () Int (+ 1 mul_87))
(define-fun mul_88 () Int (* mul_84 11))
(define-fun add_26 () Int (+ add_25 mul_88))
(define-fun mul_89 () Int (* floordiv_5 63))
(define-fun add_27 () Int (+ add_26 mul_89))
(define-fun add_28 () Int (+ add_27 sub_14))
(define-fun mul_90 () Int (* 4 add_28))
(define-fun eq_104 () Bool (= mul_84 mul_84))
(assert eq_104)
(define-fun eq_105 () Bool (= mul_85 mul_85))
(assert eq_105)
(define-fun eq_106 () Bool (= mul_84 1))
(define-fun not__91 () Bool (not eq_106))
(assert not__91)
(define-fun eq_107 () Bool (= mul_84 0))
(define-fun not__92 () Bool (not eq_107))
(assert not__92)
(define-fun lt_38 () Bool (< mul_84 0))
(define-fun not__93 () Bool (not lt_38))
(assert not__93)
(define-fun lt_39 () Bool (< 1 mul_85))
(assert lt_39)
(define-fun lt_40 () Bool (< mul_85 mul_84))
(define-fun not__94 () Bool (not lt_40))
(assert not__94)
(define-fun gt_11 () Bool (> mul_70 0))
(assert gt_11)
(define-fun mul_91 () Int (* mul_79 64))
(define-fun mul_92 () Int (* mul_91 floordiv_5))
(define-fun eq_108 () Bool (= mul_92 0))
(define-fun not__95 () Bool (not eq_108))
(assert not__95)
(define-fun mul_93 () Int (* mul_84 mul_79))
(define-fun eq_109 () Bool (= mul_79 mul_79))
(assert eq_109)
(define-fun ge_13 () Bool (>= mul_79 0))
(assert ge_13)
(define-fun mul_94 () Int (* floordiv_5 floordiv_5))
(define-fun eq_110 () Bool (= mul_79 0))
(define-fun not__96 () Bool (not eq_110))
(assert not__96)
(define-fun mul_95 () Int (* mul_94 mul_79))
(define-fun sub_15 () Int (- mul_79 1))
(define-fun mul_96 () Int (* mul_94 sub_15))
(define-fun add_29 () Int (+ 1 mul_96))
(define-fun mul_97 () Int (* floordiv_5 sub_14))
(define-fun add_30 () Int (+ add_29 mul_97))
(define-fun add_31 () Int (+ add_30 sub_14))
(define-fun mul_98 () Int (* 4 add_31))
(define-fun mul_99 () Int (* mul_80 floordiv_5))
(define-fun eq_111 () Bool (= mul_99 0))
(define-fun not__97 () Bool (not eq_111))
(assert not__97)
(define-fun eq_112 () Bool (= mul_94 mul_94))
(assert eq_112)
(define-fun mul_100 () Int (* mul_67 floordiv_5))
(define-fun eq_113 () Bool (= mul_99 mul_100))
(assert eq_113)
(define-fun eq_114 () Bool (= mul_79 x_size0))
(define-fun not__98 () Bool (not eq_114))
(assert not__98)
(define-fun eq_115 () Bool (= x_size0 mul_79))
(define-fun not__99 () Bool (not eq_115))
(assert not__99)
(define-fun mod_7 () Int (mod mul_79 x_size0))
(define-fun eq_116 () Bool (= mod_7 0))
(assert eq_116)
(define-fun floordiv_6 () Int (div mul_79 x_size0))
(define-fun mul_101 () Int (* mul_94 floordiv_6))
(define-fun mul_102 () Int (* x_size0 floordiv_6))
(define-fun mul_103 () Int (* mul_102 floordiv_5))
(define-fun mul_104 () Int (* mul_103 floordiv_5))
(define-fun eq_117 () Bool (= mul_104 0))
(define-fun not__100 () Bool (not eq_117))
(assert not__100)
(define-fun eq_118 () Bool (= floordiv_6 1))
(define-fun not__101 () Bool (not eq_118))
(assert not__101)
(define-fun eq_119 () Bool (= mul_101 mul_101))
(assert eq_119)
(define-fun mul_105 () Int (* mul_101 x_size0))
(define-fun eq_120 () Bool (= mul_94 1))
(define-fun not__102 () Bool (not eq_120))
(assert not__102)
(define-fun eq_121 () Bool (= mul_94 0))
(define-fun not__103 () Bool (not eq_121))
(assert not__103)
(define-fun eq_122 () Bool (= floordiv_6 0))
(define-fun not__104 () Bool (not eq_122))
(assert not__104)
(define-fun lt_41 () Bool (< mul_94 0))
(define-fun not__105 () Bool (not lt_41))
(assert not__105)
(define-fun gt_12 () Bool (> floordiv_6 1))
(assert gt_12)
(define-fun lt_42 () Bool (< 1 mul_101))
(assert lt_42)
(define-fun eq_123 () Bool (= floordiv_6 12))
(assert eq_123)
(define-fun lt_43 () Bool (< floordiv_5 0))
(define-fun not__106 () Bool (not lt_43))
(assert not__106)
(define-fun lt_44 () Bool (< floordiv_6 0))
(define-fun not__107 () Bool (not lt_44))
(assert not__107)
(define-fun eq_124 () Bool (= floordiv_6 floordiv_6))
(assert eq_124)
(define-fun lt_45 () Bool (< floordiv_5 mul_94))
(assert lt_45)
(define-fun eq_125 () Bool (= mul_101 0))
(define-fun not__108 () Bool (not eq_125))
(assert not__108)
(define-fun lt_46 () Bool (< mul_94 mul_101))
(assert lt_46)
(define-fun ge_14 () Bool (>= floordiv_6 0))
(assert ge_14)
(define-fun mul_106 () Int (* mul_101 sub))
(define-fun add_32 () Int (+ 1 mul_106))
(define-fun sub_16 () Int (- floordiv_6 1))
(define-fun mul_107 () Int (* mul_94 sub_16))
(define-fun add_33 () Int (+ add_32 mul_107))
(define-fun add_34 () Int (+ add_33 mul_97))
(define-fun add_35 () Int (+ add_34 sub_14))
(define-fun mul_108 () Int (* 4 add_35))
(define-fun eq_126 () Bool (= floordiv_5 198))
(assert eq_126)
(define-fun mul_109 () Int (* floordiv_5 floordiv_6))
(define-fun mul_110 () Int (* mul_109 x_size0))
(define-fun mul_111 () Int (* mul_109 sub))
(define-fun add_36 () Int (+ 1 mul_111))
(define-fun mul_112 () Int (* floordiv_5 sub_16))
(define-fun add_37 () Int (+ add_36 mul_112))
(define-fun add_38 () Int (+ add_37 sub_14))
(define-fun mul_113 () Int (* 4 add_38))
(define-fun eq_127 () Bool (= mul_103 0))
(define-fun not__109 () Bool (not eq_127))
(assert not__109)
(define-fun eq_128 () Bool (= mul_109 mul_109))
(assert eq_128)
(define-fun lt_47 () Bool (< 1 mul_109))
(assert lt_47)
(define-fun eq_129 () Bool (= floordiv_6 -1))
(define-fun not__110 () Bool (not eq_129))
(assert not__110)
(define-fun lt_48 () Bool (< floordiv_6 2))
(define-fun not__111 () Bool (not lt_48))
(assert not__111)
(define-fun lt_49 () Bool (< floordiv_5 mul_109))
(assert lt_49)
(define-fun lt_50 () Bool (< 0 mul_109))
(assert lt_50)
(define-fun eq_130 () Bool (= mul_104 mul_104))
(assert eq_130)
(define-fun eq_131 () Bool (= mul_102 -1))
(define-fun not__112 () Bool (not eq_131))
(assert not__112)
(define-fun ge_15 () Bool (>= mul_102 0))
(assert ge_15)
(define-fun lt_51 () Bool (< 1 mul_105))
(assert lt_51)
(define-fun lt_52 () Bool (< floordiv_5 mul_105))
(assert lt_52)
(define-fun lt_53 () Bool (< mul_94 mul_105))
(assert lt_53)
(define-fun mul_114 () Int (* mul_94 mul_102))
(define-fun eq_132 () Bool (= mul_114 mul_105))
(assert eq_132)
(define-fun eq_133 () Bool (= x_size0 mul_102))
(define-fun not__113 () Bool (not eq_133))
(assert not__113)
(define-fun eq_134 () Bool (= mul_102 x_size0))
(define-fun not__114 () Bool (not eq_134))
(assert not__114)
(define-fun mod_8 () Int (mod x_size0 mul_102))
(define-fun eq_135 () Bool (= mod_8 0))
(define-fun not__115 () Bool (not eq_135))
(assert not__115)
(define-fun mod_9 () Int (mod mul_102 mul_102))
(define-fun eq_136 () Bool (= mod_9 0))
(assert eq_136)
(define-fun mul_115 () Int (* floordiv_6 x_size0))
(define-fun lt_54 () Bool (< mul_101 mul_94))
(define-fun not__116 () Bool (not lt_54))
(assert not__116)
(define-fun gt_13 () Bool (> mul_104 0))
(assert gt_13)
(define-fun mul_116 () Int (* mul_115 floordiv_5))
(define-fun mul_117 () Int (* mul_116 floordiv_5))
(define-fun eq_137 () Bool (= mul_117 0))
(define-fun not__117 () Bool (not eq_137))
(assert not__117)
(define-fun eq_138 () Bool (= mul_115 1))
(define-fun not__118 () Bool (not eq_138))
(assert not__118)
(define-fun mul_118 () Int (* mul_94 mul_115))
(define-fun eq_139 () Bool (= mul_102 mul_102))
(assert eq_139)
(define-fun mul_119 () Int (* mul_103 64))
(define-fun eq_140 () Bool (= mul_119 0))
(define-fun not__119 () Bool (not eq_140))
(assert not__119)
(define-fun mul_120 () Int (* 64 floordiv_6))
(define-fun eq_141 () Bool (= 2304 mul_120))
(define-fun not__120 () Bool (not eq_141))
(assert not__120)
(define-fun lt_55 () Bool (< 1 mul_120))
(assert lt_55)
(define-fun eq_142 () Bool (= mul_119 mul_119))
(assert eq_142)
(define-fun eq_143 () Bool (= mul_102 1))
(define-fun not__121 () Bool (not eq_143))
(assert not__121)
(define-fun mul_121 () Int (* floordiv_6 64))
(define-fun eq_144 () Bool (= mul_49 mul_121))
(define-fun not__122 () Bool (not eq_144))
(assert not__122)
(define-fun lt_56 () Bool (< 1 floordiv_6))
(assert lt_56)
(define-fun eq_145 () Bool (= mul_102 floordiv_6))
(define-fun not__123 () Bool (not eq_145))
(assert not__123)
(define-fun mul_122 () Int (* mul_72 floordiv_6))
(define-fun mul_123 () Int (* mul_122 x_size0))
(define-fun mul_124 () Int (* mul_122 sub))
(define-fun add_39 () Int (+ 1 mul_124))
(define-fun mul_125 () Int (* mul_72 sub_16))
(define-fun add_40 () Int (+ add_39 mul_125))
(define-fun add_41 () Int (+ add_40 mul_77))
(define-fun add_42 () Int (+ add_41 63))
(define-fun mul_126 () Int (* 4 add_42))
(define-fun eq_146 () Bool (= mul_122 mul_122))
(assert eq_146)
(define-fun lt_57 () Bool (< 1 mul_122))
(assert lt_57)
(define-fun lt_58 () Bool (< mul_122 mul_72))
(define-fun not__124 () Bool (not lt_58))
(assert not__124)
(define-fun gt_14 () Bool (> mul_119 0))
(assert gt_14)
(define-fun mul_127 () Int (* mul_116 64))
(define-fun eq_147 () Bool (= mul_127 0))
(define-fun not__125 () Bool (not eq_147))
(assert not__125)
(define-fun mul_128 () Int (* mul_72 mul_115))
(define-fun eq_148 () Bool (= mul_115 mul_115))
(assert eq_148)
(define-fun ge_16 () Bool (>= mul_115 0))
(assert ge_16)
(define-fun eq_149 () Bool (= mul_115 0))
(define-fun not__126 () Bool (not eq_149))
(assert not__126)
(define-fun sub_17 () Int (- mul_115 1))
(define-fun mul_129 () Int (* mul_72 sub_17))
(define-fun add_43 () Int (+ 1 mul_129))
(define-fun add_44 () Int (+ add_43 mul_77))
(define-fun add_45 () Int (+ add_44 63))
(define-fun mul_130 () Int (* 4 add_45))
(define-fun eq_150 () Bool (= mul_127 mul_119))
(assert eq_150)
(define-fun eq_151 () Bool (= mul_115 x_size0))
(define-fun not__127 () Bool (not eq_151))
(assert not__127)
(define-fun eq_152 () Bool (= x_size0 mul_115))
(define-fun not__128 () Bool (not eq_152))
(assert not__128)
(define-fun mod_10 () Int (mod mul_115 x_size0))
(define-fun eq_153 () Bool (= mod_10 0))
(assert eq_153)
(define-fun floordiv_7 () Int (div mul_115 x_size0))
(define-fun mul_131 () Int (* mul_72 floordiv_7))
(define-fun mul_132 () Int (* x_size0 floordiv_7))
(define-fun mul_133 () Int (* mul_132 floordiv_5))
(define-fun mul_134 () Int (* mul_133 64))
(define-fun eq_154 () Bool (= mul_134 0))
(define-fun not__129 () Bool (not eq_154))
(assert not__129)
(define-fun eq_155 () Bool (= floordiv_7 1))
(define-fun not__130 () Bool (not eq_155))
(assert not__130)
(define-fun eq_156 () Bool (= mul_131 mul_131))
(assert eq_156)
(define-fun mul_135 () Int (* mul_131 x_size0))
(define-fun eq_157 () Bool (= floordiv_7 0))
(define-fun not__131 () Bool (not eq_157))
(assert not__131)
(define-fun gt_15 () Bool (> floordiv_7 1))
(assert gt_15)
(define-fun lt_59 () Bool (< 1 mul_131))
(assert lt_59)
(define-fun eq_158 () Bool (= floordiv_6 floordiv_7))
(assert eq_158)
(define-fun mul_136 () Int (* mul_50 floordiv_7))
(define-fun mul_137 () Int (* mul_136 64))
(define-fun eq_159 () Bool (= mul_137 0))
(define-fun not__132 () Bool (not eq_159))
(assert not__132)
(define-fun eq_160 () Bool (= mul_72 64))
(define-fun not__133 () Bool (not eq_160))
(assert not__133)
(define-fun lt_60 () Bool (< 64 mul_131))
(assert lt_60)
(define-fun lt_61 () Bool (< floordiv_7 2))
(define-fun not__134 () Bool (not lt_61))
(assert not__134)
(define-fun lt_62 () Bool (< mul_72 64))
(define-fun not__135 () Bool (not lt_62))
(assert not__135)
(define-fun lt_63 () Bool (< mul_72 mul_131))
(assert lt_63)
(define-fun lt_64 () Bool (< 1 mul_72))
(assert lt_64)
(define-fun eq_161 () Bool (= mul_137 mul_38))
(assert eq_161)
(define-fun ge_17 () Bool (>= floordiv_7 0))
(assert ge_17)
(define-fun mul_138 () Int (* 64 floordiv_7))
(define-fun mul_139 () Int (* mul_138 floordiv_5))
(define-fun mul_140 () Int (* mul_139 x_size0))
(define-fun mul_141 () Int (* mul_139 sub))
(define-fun add_46 () Int (+ 1 mul_141))
(define-fun mul_142 () Int (* mul_138 sub_14))
(define-fun add_47 () Int (+ add_46 mul_142))
(define-fun sub_18 () Int (- floordiv_7 1))
(define-fun mul_143 () Int (* 64 sub_18))
(define-fun add_48 () Int (+ add_47 mul_143))
(define-fun add_49 () Int (+ add_48 63))
(define-fun mul_144 () Int (* 4 add_49))
(define-fun eq_162 () Bool (= mul_138 mul_138))
(assert eq_162)
(define-fun eq_163 () Bool (= mul_139 mul_139))
(assert eq_163)
(define-fun eq_164 () Bool (= mul_138 1))
(define-fun not__136 () Bool (not eq_164))
(assert not__136)
(define-fun eq_165 () Bool (= mul_138 0))
(define-fun not__137 () Bool (not eq_165))
(assert not__137)
(define-fun lt_65 () Bool (< mul_138 0))
(define-fun not__138 () Bool (not lt_65))
(assert not__138)
(define-fun lt_66 () Bool (< 1 mul_139))
(assert lt_66)
(define-fun eq_166 () Bool (= floordiv_7 768))
(define-fun not__139 () Bool (not eq_166))
(assert not__139)
(define-fun mod_11 () Int (mod floordiv_7 768))
(define-fun eq_167 () Bool (= mod_11 0))
(define-fun not__140 () Bool (not eq_167))
(assert not__140)
(define-fun mul_145 () Int (* floordiv_7 64))
(define-fun mod_12 () Int (mod mul_145 768))
(define-fun eq_168 () Bool (= mod_12 0))
(assert eq_168)
(define-fun gt_16 () Bool (> mul_137 0))
(assert gt_16)
(define-fun mul_146 () Int (* mul_50 mul_138))
(define-fun eq_169 () Bool (= mul_146 0))
(define-fun not__141 () Bool (not eq_169))
(assert not__141)
(define-fun eq_170 () Bool (= mul_145 768))
(assert eq_170)
(define-fun eq_171 () Bool (= mul_50 -1))
(define-fun not__142 () Bool (not eq_171))
(assert not__142)
(define-fun ge_18 () Bool (>= mul_50 0))
(assert ge_18)
(define-fun eq_172 () Bool (= mul_138 -1))
(define-fun not__143 () Bool (not eq_172))
(assert not__143)
(define-fun ge_19 () Bool (>= mul_138 0))
(assert ge_19)
(define-fun eq_173 () Bool (= mul_146 mul_146))
(assert eq_173)
(define-fun eq_174 () Bool (= x_size0 mul_50))
(define-fun not__144 () Bool (not eq_174))
(assert not__144)
(define-fun eq_175 () Bool (= mul_50 x_size0))
(define-fun not__145 () Bool (not eq_175))
(assert not__145)
(define-fun mod_13 () Int (mod x_size0 mul_50))
(define-fun eq_176 () Bool (= mod_13 0))
(define-fun not__146 () Bool (not eq_176))
(assert not__146)
(define-fun mod_14 () Int (mod mul_50 mul_50))
(define-fun eq_177 () Bool (= mod_14 0))
(assert eq_177)
(define-fun mul_147 () Int (* floordiv_5 x_size0))
(define-fun lt_67 () Bool (< mul_139 mul_138))
(define-fun not__147 () Bool (not lt_67))
(assert not__147)
(define-fun gt_17 () Bool (> mul_146 0))
(assert gt_17)
(define-fun mul_148 () Int (* mul_147 mul_138))
(define-fun eq_178 () Bool (= mul_148 0))
(define-fun not__148 () Bool (not eq_178))
(assert not__148)
(define-fun eq_179 () Bool (= mul_147 1))
(define-fun not__149 () Bool (not eq_179))
(assert not__149)
(define-fun mul_149 () Int (* mul_138 mul_147))
(define-fun eq_180 () Bool (= mul_50 mul_50))
(assert eq_180)
(define-fun eq_181 () Bool (= mul_138 768))
(assert eq_181)
(define-fun ge_20 () Bool (>= mul_147 0))
(assert ge_20)
(define-fun eq_182 () Bool (= mul_147 0))
(define-fun not__150 () Bool (not eq_182))
(assert not__150)
(define-fun mul_150 () Int (* 768 mul_147))
(define-fun sub_19 () Int (- mul_147 1))
(define-fun mul_151 () Int (* 768 sub_19))
(define-fun add_50 () Int (+ 1 mul_151))
(define-fun add_51 () Int (+ add_50 767))
(define-fun mul_152 () Int (* 4 add_51))
(define-fun mul_153 () Int (* mul_147 768))
(define-fun eq_183 () Bool (= mul_153 0))
(define-fun not__151 () Bool (not eq_183))
(assert not__151)
(define-fun lt_68 () Bool (< mul_147 0))
(define-fun not__152 () Bool (not lt_68))
(assert not__152)
(define-fun eq_184 () Bool (= mul_147 mul_147))
(assert eq_184)
(define-fun lt_69 () Bool (< mul_147 2))
(define-fun not__153 () Bool (not lt_69))
(assert not__153)
(define-fun mul_154 () Int (* mul_50 768))
(define-fun eq_185 () Bool (= mul_153 mul_154))
(assert eq_185)
(define-fun eq_186 () Bool (= mul_147 x_size0))
(define-fun not__154 () Bool (not eq_186))
(assert not__154)
(define-fun eq_187 () Bool (= x_size0 mul_147))
(define-fun not__155 () Bool (not eq_187))
(assert not__155)
(define-fun mod_15 () Int (mod mul_147 x_size0))
(define-fun eq_188 () Bool (= mod_15 0))
(assert eq_188)
(define-fun floordiv_8 () Int (div mul_147 x_size0))
(define-fun mul_155 () Int (* 768 floordiv_8))
(define-fun mul_156 () Int (* x_size0 floordiv_8))
(define-fun mul_157 () Int (* mul_156 768))
(define-fun eq_189 () Bool (= mul_157 0))
(define-fun not__156 () Bool (not eq_189))
(assert not__156)
(define-fun eq_190 () Bool (= floordiv_8 1))
(define-fun not__157 () Bool (not eq_190))
(assert not__157)
(define-fun eq_191 () Bool (= mul_155 mul_155))
(assert eq_191)
(define-fun mul_158 () Int (* mul_155 x_size0))
(define-fun eq_192 () Bool (= floordiv_5 floordiv_8))
(assert eq_192)
(define-fun eq_193 () Bool (= add_13 floordiv_8))
(assert eq_193)
(define-fun eq_194 () Bool (= floordiv_8 add_13))
(assert eq_194)
(define-fun mul_159 () Int (* 3072 mul_39))
(define-fun mul_160 () Int (* 3072 sub_13))
(define-fun add_52 () Int (+ 1 mul_160))
(define-fun add_53 () Int (+ add_52 3071))
(define-fun mul_161 () Int (* 4 add_53))
(define-fun mul_162 () Int (* mul_39 3072))
(define-fun eq_195 () Bool (= mul_162 0))
(define-fun not__158 () Bool (not eq_195))
(assert not__158)
(define-fun mul_163 () Int (* mul_37 3072))
(define-fun eq_196 () Bool (= mul_162 mul_163))
(assert eq_196)
(define-fun mul_164 () Int (* 3072 floordiv_5))
(define-fun mul_165 () Int (* mul_50 3072))
(define-fun eq_197 () Bool (= mul_165 0))
(define-fun not__159 () Bool (not eq_197))
(assert not__159)
(define-fun eq_198 () Bool (= mul_164 mul_164))
(assert eq_198)
(define-fun mul_166 () Int (* mul_164 x_size0))
(define-fun eq_199 () Bool (= mul_164 0))
(define-fun not__160 () Bool (not eq_199))
(assert not__160)
(define-fun gt_18 () Bool (> mul_164 3072))
(assert gt_18)
(define-fun mul_167 () Int (* mul_164 sub))
(define-fun add_54 () Int (+ 1 mul_167))
(define-fun mul_168 () Int (* 3072 sub_14))
(define-fun add_55 () Int (+ add_54 mul_168))
(define-fun add_56 () Int (+ add_55 3071))
(define-fun mul_169 () Int (* 4 add_56))
(define-fun eq_200 () Bool (= mul_165 mul_165))
(assert eq_200)
(define-fun lt_70 () Bool (< mul_164 3072))
(define-fun not__161 () Bool (not lt_70))
(assert not__161)
(define-fun gt_19 () Bool (> mul_165 0))
(assert gt_19)
(define-fun mul_170 () Int (* mul_147 3072))
(define-fun eq_201 () Bool (= mul_170 0))
(define-fun not__162 () Bool (not eq_201))
(assert not__162)
(define-fun mul_171 () Int (* 3072 mul_147))
(define-fun eq_202 () Bool (= x_size0 9223372036854775807))
(define-fun not__163 () Bool (not eq_202))
(assert not__163)
(define-fun le () Bool (<= x_size0 0))
(define-fun not__164 () Bool (not le))
(assert not__164)
(define-fun le_1 () Bool (<= x_size0 9223372036854775807))
(assert le_1)
(define-fun mul_172 () Int (* 0 mul_32))
(define-fun sub_20 () Int (- x_size0 0))
(define-fun add_57 () Int (+ sub_20 1))
(define-fun sub_21 () Int (- add_57 1))
(define-fun floordiv_9 () Int (div sub_21 1))
(define-fun mul_173 () Int (* floordiv_9 add_13))
(define-fun mul_174 () Int (* mul_173 768))
(define-fun eq_203 () Bool (= mul_174 0))
(define-fun not__165 () Bool (not eq_203))
(assert not__165)
(define-fun eq_204 () Bool (= floordiv_9 1))
(define-fun not__166 () Bool (not eq_204))
(assert not__166)
(define-fun mul_175 () Int (* mul_32 floordiv_9))
(define-fun gt_20 () Bool (> add_13 0))
(assert gt_20)
(define-fun le_2 () Bool (<= add_13 0))
(define-fun not__167 () Bool (not le_2))
(assert not__167)
(define-fun mul_176 () Int (* floordiv_9 768))
(define-fun eq_205 () Bool (= mul_176 0))
(define-fun not__168 () Bool (not eq_205))
(assert not__168)
(define-fun eq_206 () Bool (= mul_32 768))
(define-fun not__169 () Bool (not eq_206))
(assert not__169)
(define-fun lt_71 () Bool (< floordiv_9 2))
(define-fun not__170 () Bool (not lt_71))
(assert not__170)
(define-fun lt_72 () Bool (< 1 mul_32))
(assert lt_72)
(define-fun ge_21 () Bool (>= floordiv_9 0))
(assert ge_21)
(define-fun eq_207 () Bool (= floordiv_9 0))
(define-fun not__171 () Bool (not eq_207))
(assert not__171)
(define-fun mul_177 () Int (* 1000 floordiv_9))
(define-fun sub_22 () Int (- floordiv_9 1))
(define-fun mul_178 () Int (* 1000 sub_22))
(define-fun add_58 () Int (+ 1 mul_178))
(define-fun add_59 () Int (+ add_58 999))
(define-fun mul_179 () Int (* 4 add_59))
(define-fun mul_180 () Int (* floordiv_9 1000))
(define-fun eq_208 () Bool (= mul_180 0))
(define-fun not__172 () Bool (not eq_208))
(assert not__172)
(define-fun lt_73 () Bool (< floordiv_9 0))
(define-fun not__173 () Bool (not lt_73))
(assert not__173)
(define-fun eq_209 () Bool (= floordiv_9 floordiv_9))
(assert eq_209)
(define-fun ge_22 () Bool (>= add_13 -1))
(assert ge_22)
(define-fun lt_74 () Bool (< add_13 -1))
(define-fun not__174 () Bool (not lt_74))
(assert not__174)
(define-fun le_3 () Bool (<= add_13 1))
(define-fun not__175 () Bool (not le_3))
(assert not__175)
(define-fun add_60 () Int (+ mul_172 768))
(define-fun lt_75 () Bool (< 1 mul_74))
(assert lt_75)
(define-fun lt_76 () Bool (< 64 mul_74))
(assert lt_76)
(define-fun lt_77 () Bool (< mul_72 mul_74))
(assert lt_77)
(define-fun mul_181 () Int (* mul_72 mul_66))
(define-fun eq_210 () Bool (= mul_181 mul_74))
(assert eq_210)
(define-fun lt_78 () Bool (< 1 mul_86))
(assert lt_78)
(define-fun lt_79 () Bool (< floordiv_5 mul_86))
(assert lt_79)
(define-fun lt_80 () Bool (< mul_84 mul_86))
(assert lt_80)
(define-fun mul_182 () Int (* mul_84 mul_66))
(define-fun eq_211 () Bool (= mul_182 mul_86))
(assert eq_211)
(define-fun lt_81 () Bool (< 1 mul_123))
(assert lt_81)
(define-fun lt_82 () Bool (< 64 mul_123))
(assert lt_82)
(define-fun lt_83 () Bool (< mul_72 mul_123))
(assert lt_83)
(define-fun mul_183 () Int (* mul_72 mul_102))
(define-fun eq_212 () Bool (= mul_183 mul_123))
(assert eq_212)
(define-fun lt_84 () Bool (< 1 mul_140))
(assert lt_84)
(define-fun lt_85 () Bool (< 768 mul_140))
(assert lt_85)
(define-fun lt_86 () Bool (< mul_32 mul_140))
(assert lt_86)
(define-fun eq_213 () Bool (= mul_33 mul_140))
(assert eq_213)
(define-fun eq_214 () Bool (= mul_12 0))
(define-fun not__176 () Bool (not eq_214))
(assert not__176)
(define-fun eq_215 () Bool (= mul_179 0))
(define-fun not__177 () Bool (not eq_215))
(assert not__177)
(define-fun output0_size0 () Int floordiv_9)
(define-fun output0_size1 () Int 1000)
(define-fun output0_stride0 () Int 1000)
(define-fun output0_stride1 () Int 1)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-value (x_size0 x_size1 x_size2 x_size3 x_stride0 x_stride1 x_stride2 x_stride3 x_storage_offset output0_size0 output0_size1 output0_stride0 output0_stride1 output0_storage_offset))

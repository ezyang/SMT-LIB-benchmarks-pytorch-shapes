(set-option :produce-models true)
(declare-const ___stack0__base_size0 Int)
(declare-const ___stack0__base_size1 Int)
(declare-const ___stack0__base_stride0 Int)
(declare-const ___stack0__base_stride1 Int)
(declare-const ___stack0__base_storage_offset Int)
(define-fun ge () Bool (>= ___stack0__base_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= ___stack0__base_size1 0))
(assert ge_1)
(define-fun eq () Bool (= ___stack0__base_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- ___stack0__base_size0 1))
(define-fun mul () Int (* ___stack0__base_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= ___stack0__base_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- ___stack0__base_size1 1))
(define-fun mul_1 () Int (* ___stack0__base_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun mul_2 () Int (* ___stack0__base_size0 ___stack0__base_size1))
(define-fun eq_2 () Bool (= mul_2 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun eq_3 () Bool (= ___stack0__base_size1 1))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun eq_4 () Bool (= ___stack0__base_stride1 1))
(assert eq_4)
(define-fun eq_5 () Bool (= ___stack0__base_size0 1))
(define-fun not__4 () Bool (not eq_5))
(assert not__4)
(define-fun eq_6 () Bool (= ___stack0__base_stride0 ___stack0__base_size1))
(assert eq_6)
(define-fun mul_3 () Int (* ___stack0__base_size1 ___stack0__base_size0))
(define-fun ge_2 () Bool (>= ___stack0__base_storage_offset 0))
(assert ge_2)
(define-fun add_2 () Int (+ ___stack0__base_storage_offset add_1))
(declare-const ___stack0_size0 Int)
(declare-const ___stack0_size1 Int)
(declare-const ___stack0_size2 Int)
(declare-const ___stack0_stride0 Int)
(declare-const ___stack0_stride1 Int)
(declare-const ___stack0_stride2 Int)
(declare-const ___stack0_storage_offset Int)
(define-fun mul_4 () Int (* ___stack0_size0 ___stack0_size1))
(define-fun mul_5 () Int (* mul_4 ___stack0_size2))
(define-fun eq_7 () Bool (= mul_5 0))
(define-fun not__5 () Bool (not eq_7))
(assert not__5)
(define-fun eq_8 () Bool (= ___stack0_size2 1))
(define-fun not__6 () Bool (not eq_8))
(assert not__6)
(define-fun eq_9 () Bool (= ___stack0_stride2 1))
(assert eq_9)
(define-fun eq_10 () Bool (= ___stack0_size1 1))
(define-fun not__7 () Bool (not eq_10))
(assert not__7)
(define-fun eq_11 () Bool (= ___stack0_stride1 ___stack0_size2))
(define-fun not__8 () Bool (not eq_11))
(assert not__8)
(define-fun lt () Bool (< ___stack0_size1 2))
(define-fun not__9 () Bool (not lt))
(assert not__9)
(define-fun lt_1 () Bool (< ___stack0_size0 2))
(define-fun not__10 () Bool (not lt_1))
(assert not__10)
(define-fun lt_2 () Bool (< ___stack0_stride1 ___stack0_stride0))
(assert lt_2)
(define-fun lt_3 () Bool (< ___stack0_size2 2))
(define-fun not__11 () Bool (not lt_3))
(assert not__11)
(define-fun lt_4 () Bool (< ___stack0_stride2 ___stack0_stride1))
(define-fun not__12 () Bool (not lt_4))
(assert not__12)
(define-fun lt_5 () Bool (< ___stack0_stride2 ___stack0_stride0))
(assert lt_5)
(define-fun eq_12 () Bool (= ___stack0_stride1 1))
(define-fun not__13 () Bool (not eq_12))
(assert not__13)
(declare-const encoder_padded_outputs_size0 Int)
(declare-const encoder_padded_outputs_size1 Int)
(declare-const encoder_padded_outputs_size2 Int)
(declare-const encoder_padded_outputs_stride0 Int)
(declare-const encoder_padded_outputs_stride1 Int)
(declare-const encoder_padded_outputs_stride2 Int)
(declare-const encoder_padded_outputs_storage_offset Int)
(define-fun ge_3 () Bool (>= encoder_padded_outputs_size0 0))
(assert ge_3)
(define-fun ge_4 () Bool (>= encoder_padded_outputs_size1 0))
(assert ge_4)
(define-fun ge_5 () Bool (>= encoder_padded_outputs_size2 0))
(assert ge_5)
(define-fun eq_13 () Bool (= encoder_padded_outputs_size0 0))
(define-fun not__14 () Bool (not eq_13))
(assert not__14)
(define-fun sub_2 () Int (- encoder_padded_outputs_size0 1))
(define-fun mul_6 () Int (* encoder_padded_outputs_stride0 sub_2))
(define-fun add_3 () Int (+ 1 mul_6))
(define-fun eq_14 () Bool (= encoder_padded_outputs_size1 0))
(define-fun not__15 () Bool (not eq_14))
(assert not__15)
(define-fun sub_3 () Int (- encoder_padded_outputs_size1 1))
(define-fun mul_7 () Int (* encoder_padded_outputs_stride1 sub_3))
(define-fun add_4 () Int (+ add_3 mul_7))
(define-fun eq_15 () Bool (= encoder_padded_outputs_size2 0))
(define-fun not__16 () Bool (not eq_15))
(assert not__16)
(define-fun sub_4 () Int (- encoder_padded_outputs_size2 1))
(define-fun mul_8 () Int (* encoder_padded_outputs_stride2 sub_4))
(define-fun add_5 () Int (+ add_4 mul_8))
(define-fun mul_9 () Int (* 4 add_5))
(define-fun mul_10 () Int (* encoder_padded_outputs_size0 encoder_padded_outputs_size1))
(define-fun mul_11 () Int (* mul_10 encoder_padded_outputs_size2))
(define-fun eq_16 () Bool (= mul_11 0))
(define-fun not__17 () Bool (not eq_16))
(assert not__17)
(define-fun eq_17 () Bool (= encoder_padded_outputs_size2 1))
(define-fun not__18 () Bool (not eq_17))
(assert not__18)
(define-fun eq_18 () Bool (= encoder_padded_outputs_stride2 1))
(assert eq_18)
(define-fun eq_19 () Bool (= encoder_padded_outputs_size1 1))
(define-fun not__19 () Bool (not eq_19))
(assert not__19)
(define-fun eq_20 () Bool (= encoder_padded_outputs_stride1 encoder_padded_outputs_size2))
(assert eq_20)
(define-fun mul_12 () Int (* encoder_padded_outputs_size2 encoder_padded_outputs_size1))
(define-fun eq_21 () Bool (= encoder_padded_outputs_size0 1))
(define-fun not__20 () Bool (not eq_21))
(assert not__20)
(define-fun eq_22 () Bool (= encoder_padded_outputs_stride0 mul_12))
(assert eq_22)
(define-fun mul_13 () Int (* mul_12 encoder_padded_outputs_size0))
(define-fun eq_23 () Bool (= encoder_padded_outputs_size0 encoder_padded_outputs_size0))
(assert eq_23)
(define-fun eq_24 () Bool (= encoder_padded_outputs_size1 encoder_padded_outputs_size1))
(assert eq_24)
(define-fun eq_25 () Bool (= encoder_padded_outputs_size2 encoder_padded_outputs_size2))
(assert eq_25)
(define-fun eq_26 () Bool (= encoder_padded_outputs_stride2 0))
(define-fun not__21 () Bool (not eq_26))
(assert not__21)
(define-fun eq_27 () Bool (= encoder_padded_outputs_stride1 0))
(define-fun not__22 () Bool (not eq_27))
(assert not__22)
(define-fun lt_6 () Bool (< encoder_padded_outputs_stride2 encoder_padded_outputs_stride1))
(assert lt_6)
(define-fun eq_28 () Bool (= encoder_padded_outputs_stride0 0))
(define-fun not__23 () Bool (not eq_28))
(assert not__23)
(define-fun lt_7 () Bool (< encoder_padded_outputs_stride1 encoder_padded_outputs_stride0))
(assert lt_7)
(define-fun mul_14 () Int (* mul_12 sub_2))
(define-fun add_6 () Int (+ 1 mul_14))
(define-fun mul_15 () Int (* encoder_padded_outputs_size2 sub_3))
(define-fun add_7 () Int (+ add_6 mul_15))
(define-fun add_8 () Int (+ add_7 sub_4))
(define-fun mul_16 () Int (* 4 add_8))
(define-fun eq_29 () Bool (= mul_12 mul_12))
(assert eq_29)
(define-fun ge_6 () Bool (>= encoder_padded_outputs_storage_offset 0))
(assert ge_6)
(define-fun add_9 () Int (+ encoder_padded_outputs_storage_offset add_5))
(define-fun mul_17 () Int (* 4 add_9))
(declare-const ys_in_pad_size0 Int)
(declare-const ys_in_pad_size1 Int)
(declare-const ys_in_pad_stride0 Int)
(declare-const ys_in_pad_stride1 Int)
(declare-const ys_in_pad_storage_offset Int)
(define-fun ge_7 () Bool (>= ys_in_pad_size0 0))
(assert ge_7)
(define-fun ge_8 () Bool (>= ys_in_pad_size1 0))
(assert ge_8)
(define-fun eq_30 () Bool (= ys_in_pad_size0 0))
(define-fun not__24 () Bool (not eq_30))
(assert not__24)
(define-fun sub_5 () Int (- ys_in_pad_size0 1))
(define-fun mul_18 () Int (* ys_in_pad_stride0 sub_5))
(define-fun add_10 () Int (+ 1 mul_18))
(define-fun eq_31 () Bool (= ys_in_pad_size1 0))
(define-fun not__25 () Bool (not eq_31))
(assert not__25)
(define-fun sub_6 () Int (- ys_in_pad_size1 1))
(define-fun mul_19 () Int (* ys_in_pad_stride1 sub_6))
(define-fun add_11 () Int (+ add_10 mul_19))
(define-fun mul_20 () Int (* 8 add_11))
(define-fun mul_21 () Int (* ys_in_pad_size0 ys_in_pad_size1))
(define-fun eq_32 () Bool (= mul_21 0))
(define-fun not__26 () Bool (not eq_32))
(assert not__26)
(define-fun eq_33 () Bool (= ys_in_pad_size1 1))
(define-fun not__27 () Bool (not eq_33))
(assert not__27)
(define-fun eq_34 () Bool (= ys_in_pad_stride1 1))
(assert eq_34)
(define-fun eq_35 () Bool (= ys_in_pad_size0 1))
(define-fun not__28 () Bool (not eq_35))
(assert not__28)
(define-fun eq_36 () Bool (= ys_in_pad_stride0 ys_in_pad_size1))
(assert eq_36)
(define-fun mul_22 () Int (* ys_in_pad_size1 ys_in_pad_size0))
(define-fun ge_9 () Bool (>= ys_in_pad_storage_offset 0))
(assert ge_9)
(define-fun add_12 () Int (+ ys_in_pad_storage_offset add_11))
(define-fun mul_23 () Int (* 8 add_12))
(declare-const ys_out_pad_size0 Int)
(declare-const ys_out_pad_size1 Int)
(declare-const ys_out_pad_stride0 Int)
(declare-const ys_out_pad_stride1 Int)
(declare-const ys_out_pad_storage_offset Int)
(define-fun ge_10 () Bool (>= ys_out_pad_size0 0))
(assert ge_10)
(define-fun ge_11 () Bool (>= ys_out_pad_size1 0))
(assert ge_11)
(define-fun eq_37 () Bool (= ys_out_pad_size0 0))
(define-fun not__29 () Bool (not eq_37))
(assert not__29)
(define-fun sub_7 () Int (- ys_out_pad_size0 1))
(define-fun mul_24 () Int (* ys_out_pad_stride0 sub_7))
(define-fun add_13 () Int (+ 1 mul_24))
(define-fun eq_38 () Bool (= ys_out_pad_size1 0))
(define-fun not__30 () Bool (not eq_38))
(assert not__30)
(define-fun sub_8 () Int (- ys_out_pad_size1 1))
(define-fun mul_25 () Int (* ys_out_pad_stride1 sub_8))
(define-fun add_14 () Int (+ add_13 mul_25))
(define-fun mul_26 () Int (* 8 add_14))
(define-fun mul_27 () Int (* ys_out_pad_size0 ys_out_pad_size1))
(define-fun eq_39 () Bool (= mul_27 0))
(define-fun not__31 () Bool (not eq_39))
(assert not__31)
(define-fun eq_40 () Bool (= ys_out_pad_size1 1))
(define-fun not__32 () Bool (not eq_40))
(assert not__32)
(define-fun eq_41 () Bool (= ys_out_pad_stride1 1))
(assert eq_41)
(define-fun eq_42 () Bool (= ys_out_pad_size0 1))
(define-fun not__33 () Bool (not eq_42))
(assert not__33)
(define-fun eq_43 () Bool (= ys_out_pad_stride0 ys_out_pad_size1))
(assert eq_43)
(define-fun mul_28 () Int (* ys_out_pad_size1 ys_out_pad_size0))
(define-fun ge_12 () Bool (>= ys_out_pad_storage_offset 0))
(assert ge_12)
(define-fun add_15 () Int (+ ys_out_pad_storage_offset add_14))
(define-fun mul_29 () Int (* 8 add_15))
(declare-const non_pad_mask__base_size0 Int)
(declare-const non_pad_mask__base_size1 Int)
(declare-const non_pad_mask__base_stride0 Int)
(declare-const non_pad_mask__base_stride1 Int)
(declare-const non_pad_mask__base_storage_offset Int)
(define-fun ge_13 () Bool (>= non_pad_mask__base_size0 0))
(assert ge_13)
(define-fun ge_14 () Bool (>= non_pad_mask__base_size1 0))
(assert ge_14)
(define-fun eq_44 () Bool (= non_pad_mask__base_size0 0))
(define-fun not__34 () Bool (not eq_44))
(assert not__34)
(define-fun sub_9 () Int (- non_pad_mask__base_size0 1))
(define-fun mul_30 () Int (* non_pad_mask__base_stride0 sub_9))
(define-fun add_16 () Int (+ 1 mul_30))
(define-fun eq_45 () Bool (= non_pad_mask__base_size1 0))
(define-fun not__35 () Bool (not eq_45))
(assert not__35)
(define-fun sub_10 () Int (- non_pad_mask__base_size1 1))
(define-fun mul_31 () Int (* non_pad_mask__base_stride1 sub_10))
(define-fun add_17 () Int (+ add_16 mul_31))
(define-fun mul_32 () Int (* 4 add_17))
(define-fun mul_33 () Int (* non_pad_mask__base_size0 non_pad_mask__base_size1))
(define-fun eq_46 () Bool (= mul_33 0))
(define-fun not__36 () Bool (not eq_46))
(assert not__36)
(define-fun eq_47 () Bool (= non_pad_mask__base_size1 1))
(define-fun not__37 () Bool (not eq_47))
(assert not__37)
(define-fun eq_48 () Bool (= non_pad_mask__base_stride1 1))
(assert eq_48)
(define-fun eq_49 () Bool (= non_pad_mask__base_size0 1))
(define-fun not__38 () Bool (not eq_49))
(assert not__38)
(define-fun eq_50 () Bool (= non_pad_mask__base_stride0 non_pad_mask__base_size1))
(assert eq_50)
(define-fun mul_34 () Int (* non_pad_mask__base_size1 non_pad_mask__base_size0))
(define-fun ge_15 () Bool (>= non_pad_mask__base_storage_offset 0))
(assert ge_15)
(define-fun add_18 () Int (+ non_pad_mask__base_storage_offset add_17))
(define-fun mul_35 () Int (* 4 add_18))
(declare-const non_pad_mask_size0 Int)
(declare-const non_pad_mask_size1 Int)
(declare-const non_pad_mask_size2 Int)
(declare-const non_pad_mask_stride0 Int)
(declare-const non_pad_mask_stride1 Int)
(declare-const non_pad_mask_stride2 Int)
(declare-const non_pad_mask_storage_offset Int)
(define-fun mul_36 () Int (* non_pad_mask_size0 non_pad_mask_size1))
(define-fun mul_37 () Int (* mul_36 non_pad_mask_size2))
(define-fun eq_51 () Bool (= mul_37 0))
(define-fun not__39 () Bool (not eq_51))
(assert not__39)
(define-fun eq_52 () Bool (= non_pad_mask_size2 1))
(assert eq_52)
(define-fun eq_53 () Bool (= non_pad_mask_size1 1))
(define-fun not__40 () Bool (not eq_53))
(assert not__40)
(define-fun eq_54 () Bool (= non_pad_mask_stride1 1))
(assert eq_54)
(define-fun eq_55 () Bool (= non_pad_mask_size0 1))
(define-fun not__41 () Bool (not eq_55))
(assert not__41)
(define-fun eq_56 () Bool (= non_pad_mask_stride0 non_pad_mask_size1))
(assert eq_56)
(define-fun mul_38 () Int (* non_pad_mask_size1 non_pad_mask_size0))
(declare-const slf_attn_mask_size0 Int)
(declare-const slf_attn_mask_size1 Int)
(declare-const slf_attn_mask_size2 Int)
(declare-const slf_attn_mask_stride0 Int)
(declare-const slf_attn_mask_stride1 Int)
(declare-const slf_attn_mask_stride2 Int)
(declare-const slf_attn_mask_storage_offset Int)
(define-fun ge_16 () Bool (>= slf_attn_mask_size0 0))
(assert ge_16)
(define-fun ge_17 () Bool (>= slf_attn_mask_size1 0))
(assert ge_17)
(define-fun ge_18 () Bool (>= slf_attn_mask_size2 0))
(assert ge_18)
(define-fun eq_57 () Bool (= slf_attn_mask_size0 0))
(define-fun not__42 () Bool (not eq_57))
(assert not__42)
(define-fun sub_11 () Int (- slf_attn_mask_size0 1))
(define-fun mul_39 () Int (* slf_attn_mask_stride0 sub_11))
(define-fun add_19 () Int (+ 1 mul_39))
(define-fun eq_58 () Bool (= slf_attn_mask_size1 0))
(define-fun not__43 () Bool (not eq_58))
(assert not__43)
(define-fun sub_12 () Int (- slf_attn_mask_size1 1))
(define-fun mul_40 () Int (* slf_attn_mask_stride1 sub_12))
(define-fun add_20 () Int (+ add_19 mul_40))
(define-fun eq_59 () Bool (= slf_attn_mask_size2 0))
(define-fun not__44 () Bool (not eq_59))
(assert not__44)
(define-fun sub_13 () Int (- slf_attn_mask_size2 1))
(define-fun mul_41 () Int (* slf_attn_mask_stride2 sub_13))
(define-fun add_21 () Int (+ add_20 mul_41))
(define-fun mul_42 () Int (* slf_attn_mask_size0 slf_attn_mask_size1))
(define-fun mul_43 () Int (* mul_42 slf_attn_mask_size2))
(define-fun eq_60 () Bool (= mul_43 0))
(define-fun not__45 () Bool (not eq_60))
(assert not__45)
(define-fun eq_61 () Bool (= slf_attn_mask_size2 1))
(define-fun not__46 () Bool (not eq_61))
(assert not__46)
(define-fun eq_62 () Bool (= slf_attn_mask_stride2 1))
(assert eq_62)
(define-fun eq_63 () Bool (= slf_attn_mask_size1 1))
(define-fun not__47 () Bool (not eq_63))
(assert not__47)
(define-fun eq_64 () Bool (= slf_attn_mask_stride1 slf_attn_mask_size2))
(assert eq_64)
(define-fun mul_44 () Int (* slf_attn_mask_size2 slf_attn_mask_size1))
(define-fun eq_65 () Bool (= slf_attn_mask_size0 1))
(define-fun not__48 () Bool (not eq_65))
(assert not__48)
(define-fun eq_66 () Bool (= slf_attn_mask_stride0 mul_44))
(assert eq_66)
(define-fun mul_45 () Int (* mul_44 slf_attn_mask_size0))
(define-fun ge_19 () Bool (>= slf_attn_mask_storage_offset 0))
(assert ge_19)
(define-fun add_22 () Int (+ slf_attn_mask_storage_offset add_21))
(define-fun lt_8 () Bool (< ys_in_pad_size1 0))
(define-fun not__49 () Bool (not lt_8))
(assert not__49)
(define-fun lt_9 () Bool (< ys_in_pad_size0 0))
(define-fun not__50 () Bool (not lt_9))
(assert not__50)
(define-fun eq_67 () Bool (= ys_in_pad_size0 ys_in_pad_size0))
(assert eq_67)
(define-fun eq_68 () Bool (= ys_in_pad_size1 ys_in_pad_size1))
(assert eq_68)
(define-fun mul_46 () Int (* 512 ys_in_pad_size1))
(define-fun mul_47 () Int (* mul_46 ys_in_pad_size0))
(define-fun mul_48 () Int (* mul_46 sub_5))
(define-fun add_23 () Int (+ 1 mul_48))
(define-fun mul_49 () Int (* 512 sub_6))
(define-fun add_24 () Int (+ add_23 mul_49))
(define-fun add_25 () Int (+ add_24 511))
(define-fun mul_50 () Int (* 4 add_25))
(define-fun mul_51 () Int (* mul_21 512))
(define-fun eq_69 () Bool (= mul_51 0))
(define-fun not__51 () Bool (not eq_69))
(assert not__51)
(define-fun eq_70 () Bool (= mul_46 mul_46))
(assert eq_70)
(define-fun eq_71 () Bool (= mul_46 0))
(define-fun not__52 () Bool (not eq_71))
(assert not__52)
(define-fun gt () Bool (> mul_46 512))
(assert gt)
(declare-const self_positional_encoding_pe_size0 Int)
(declare-const self_positional_encoding_pe_size1 Int)
(declare-const self_positional_encoding_pe_size2 Int)
(declare-const self_positional_encoding_pe_stride0 Int)
(declare-const self_positional_encoding_pe_stride1 Int)
(declare-const self_positional_encoding_pe_stride2 Int)
(declare-const self_positional_encoding_pe_storage_offset Int)
(define-fun ge_20 () Bool (>= self_positional_encoding_pe_size0 0))
(assert ge_20)
(define-fun ge_21 () Bool (>= self_positional_encoding_pe_size1 0))
(assert ge_21)
(define-fun ge_22 () Bool (>= self_positional_encoding_pe_size2 0))
(assert ge_22)
(define-fun eq_72 () Bool (= self_positional_encoding_pe_size0 0))
(define-fun not__53 () Bool (not eq_72))
(assert not__53)
(define-fun sub_14 () Int (- self_positional_encoding_pe_size0 1))
(define-fun mul_52 () Int (* self_positional_encoding_pe_stride0 sub_14))
(define-fun add_26 () Int (+ 1 mul_52))
(define-fun eq_73 () Bool (= self_positional_encoding_pe_size1 0))
(define-fun not__54 () Bool (not eq_73))
(assert not__54)
(define-fun sub_15 () Int (- self_positional_encoding_pe_size1 1))
(define-fun mul_53 () Int (* self_positional_encoding_pe_stride1 sub_15))
(define-fun add_27 () Int (+ add_26 mul_53))
(define-fun eq_74 () Bool (= self_positional_encoding_pe_size2 0))
(define-fun not__55 () Bool (not eq_74))
(assert not__55)
(define-fun sub_16 () Int (- self_positional_encoding_pe_size2 1))
(define-fun mul_54 () Int (* self_positional_encoding_pe_stride2 sub_16))
(define-fun add_28 () Int (+ add_27 mul_54))
(define-fun mul_55 () Int (* 4 add_28))
(define-fun mul_56 () Int (* self_positional_encoding_pe_size0 self_positional_encoding_pe_size1))
(define-fun mul_57 () Int (* mul_56 self_positional_encoding_pe_size2))
(define-fun eq_75 () Bool (= mul_57 0))
(define-fun not__56 () Bool (not eq_75))
(assert not__56)
(define-fun eq_76 () Bool (= self_positional_encoding_pe_size2 1))
(define-fun not__57 () Bool (not eq_76))
(assert not__57)
(define-fun eq_77 () Bool (= self_positional_encoding_pe_stride2 1))
(assert eq_77)
(define-fun eq_78 () Bool (= self_positional_encoding_pe_size1 1))
(define-fun not__58 () Bool (not eq_78))
(assert not__58)
(define-fun eq_79 () Bool (= self_positional_encoding_pe_stride1 self_positional_encoding_pe_size2))
(assert eq_79)
(define-fun mul_58 () Int (* self_positional_encoding_pe_size2 self_positional_encoding_pe_size1))
(define-fun eq_80 () Bool (= self_positional_encoding_pe_size0 1))
(assert eq_80)
(define-fun ge_23 () Bool (>= self_positional_encoding_pe_storage_offset 0))
(assert ge_23)
(define-fun add_29 () Int (+ self_positional_encoding_pe_storage_offset add_28))
(define-fun mul_59 () Int (* 4 add_29))
(define-fun eq_81 () Bool (= mul_23 0))
(define-fun not__59 () Bool (not eq_81))
(assert not__59)
(define-fun eq_82 () Bool (= mul_50 0))
(define-fun not__60 () Bool (not eq_82))
(assert not__60)
(define-fun output0_size0 () Int ys_in_pad_size0)
(define-fun output0_size1 () Int ys_in_pad_size1)
(define-fun output0_size2 () Int 512)
(define-fun output0_stride0 () Int mul_46)
(define-fun output0_stride1 () Int 512)
(define-fun output0_stride2 () Int 1)
(define-fun output0_storage_offset () Int 0)
(check-sat)
(get-model)

(set-option :produce-models true)
(define-fun ceil ((x Real)) Int (ite (= (to_int x) x) (to_int x) (+ (to_int x) 1)))
(define-fun min2 ((x Int) (y Int)) Int (ite (< x y) x y))
(define-fun max2 ((x Int) (y Int)) Int (ite (> x y) x y))
(define-fun sqrt ((x Real)) Real (^ x 0.5))

(declare-const input_ids_size0 Int)
(set-info :example-input_ids_size0 1)
(declare-const input_ids_size1 Int)
(set-info :example-input_ids_size1 128)
(declare-const input_ids_stride0 Int)
(set-info :example-input_ids_stride0 128)
(declare-const input_ids_stride1 Int)
(set-info :example-input_ids_stride1 1)
(declare-const input_ids_storage_offset Int)
(set-info :example-input_ids_storage_offset 0)
(define-fun ge () Bool (>= input_ids_size0 0))
(assert ge)
(define-fun ge_1 () Bool (>= input_ids_size1 0))
(assert ge_1)
(define-fun eq () Bool (= input_ids_size0 0))
(define-fun not_ () Bool (not eq))
(assert not_)
(define-fun sub () Int (- input_ids_size0 1))
(define-fun mul () Int (* input_ids_stride0 sub))
(define-fun add () Int (+ 1 mul))
(define-fun eq_1 () Bool (= input_ids_size1 0))
(define-fun not__1 () Bool (not eq_1))
(assert not__1)
(define-fun sub_1 () Int (- input_ids_size1 1))
(define-fun mul_1 () Int (* input_ids_stride1 sub_1))
(define-fun add_1 () Int (+ add mul_1))
(define-fun mul_2 () Int (* 8 add_1))
(define-fun mul_3 () Int (* input_ids_size0 input_ids_size1))
(define-fun eq_2 () Bool (= mul_3 0))
(define-fun not__2 () Bool (not eq_2))
(assert not__2)
(define-fun eq_3 () Bool (= input_ids_size1 1))
(define-fun not__3 () Bool (not eq_3))
(assert not__3)
(define-fun eq_4 () Bool (= input_ids_stride1 1))
(assert eq_4)
(define-fun eq_5 () Bool (= input_ids_size0 1))
(assert eq_5)
(define-fun ge_2 () Bool (>= input_ids_storage_offset 0))
(assert ge_2)
(define-fun add_2 () Int (+ input_ids_storage_offset add_1))
(define-fun mul_4 () Int (* 8 add_2))
(declare-const decoder_input_ids_size0 Int)
(set-info :example-decoder_input_ids_size0 1)
(declare-const decoder_input_ids_size1 Int)
(set-info :example-decoder_input_ids_size1 128)
(declare-const decoder_input_ids_stride0 Int)
(set-info :example-decoder_input_ids_stride0 128)
(declare-const decoder_input_ids_stride1 Int)
(set-info :example-decoder_input_ids_stride1 1)
(declare-const decoder_input_ids_storage_offset Int)
(set-info :example-decoder_input_ids_storage_offset 0)
(define-fun ge_3 () Bool (>= decoder_input_ids_size0 0))
(assert ge_3)
(define-fun ge_4 () Bool (>= decoder_input_ids_size1 0))
(assert ge_4)
(define-fun eq_6 () Bool (= decoder_input_ids_size0 0))
(define-fun not__4 () Bool (not eq_6))
(assert not__4)
(define-fun sub_2 () Int (- decoder_input_ids_size0 1))
(define-fun mul_5 () Int (* decoder_input_ids_stride0 sub_2))
(define-fun add_3 () Int (+ 1 mul_5))
(define-fun eq_7 () Bool (= decoder_input_ids_size1 0))
(define-fun not__5 () Bool (not eq_7))
(assert not__5)
(define-fun sub_3 () Int (- decoder_input_ids_size1 1))
(define-fun mul_6 () Int (* decoder_input_ids_stride1 sub_3))
(define-fun add_4 () Int (+ add_3 mul_6))
(define-fun mul_7 () Int (* 8 add_4))
(define-fun mul_8 () Int (* decoder_input_ids_size0 decoder_input_ids_size1))
(define-fun eq_8 () Bool (= mul_8 0))
(define-fun not__6 () Bool (not eq_8))
(assert not__6)
(define-fun eq_9 () Bool (= decoder_input_ids_size1 1))
(define-fun not__7 () Bool (not eq_9))
(assert not__7)
(define-fun eq_10 () Bool (= decoder_input_ids_stride1 1))
(assert eq_10)
(define-fun eq_11 () Bool (= decoder_input_ids_size0 1))
(assert eq_11)
(define-fun ge_5 () Bool (>= decoder_input_ids_storage_offset 0))
(assert ge_5)
(define-fun add_5 () Int (+ decoder_input_ids_storage_offset add_4))
(define-fun mul_9 () Int (* 8 add_5))
(declare-const labels_size0 Int)
(set-info :example-labels_size0 1)
(declare-const labels_size1 Int)
(set-info :example-labels_size1 128)
(declare-const labels_stride0 Int)
(set-info :example-labels_stride0 128)
(declare-const labels_stride1 Int)
(set-info :example-labels_stride1 1)
(declare-const labels_storage_offset Int)
(set-info :example-labels_storage_offset 0)
(define-fun ge_6 () Bool (>= labels_size0 0))
(assert ge_6)
(define-fun ge_7 () Bool (>= labels_size1 0))
(assert ge_7)
(define-fun eq_12 () Bool (= labels_size0 0))
(define-fun not__8 () Bool (not eq_12))
(assert not__8)
(define-fun sub_4 () Int (- labels_size0 1))
(define-fun mul_10 () Int (* labels_stride0 sub_4))
(define-fun add_6 () Int (+ 1 mul_10))
(define-fun eq_13 () Bool (= labels_size1 0))
(define-fun not__9 () Bool (not eq_13))
(assert not__9)
(define-fun sub_5 () Int (- labels_size1 1))
(define-fun mul_11 () Int (* labels_stride1 sub_5))
(define-fun add_7 () Int (+ add_6 mul_11))
(define-fun mul_12 () Int (* 8 add_7))
(define-fun mul_13 () Int (* labels_size0 labels_size1))
(define-fun eq_14 () Bool (= mul_13 0))
(define-fun not__10 () Bool (not eq_14))
(assert not__10)
(define-fun eq_15 () Bool (= labels_size1 1))
(define-fun not__11 () Bool (not eq_15))
(assert not__11)
(define-fun eq_16 () Bool (= labels_stride1 1))
(assert eq_16)
(define-fun eq_17 () Bool (= labels_size0 1))
(assert eq_17)
(define-fun ge_8 () Bool (>= labels_storage_offset 0))
(assert ge_8)
(define-fun add_8 () Int (+ labels_storage_offset add_7))
(define-fun mul_14 () Int (* 8 add_8))
(define-fun eq_18 () Bool (= input_ids_size1 -1))
(define-fun not__12 () Bool (not eq_18))
(assert not__12)
(define-fun eq_19 () Bool (= mul_3 input_ids_size1))
(assert eq_19)
(define-fun floordiv () Int (div mul_3 input_ids_size1))
(define-fun eq_20 () Bool (= input_ids_size0 floordiv))
(assert eq_20)
(define-fun eq_21 () Bool (= input_ids_size1 input_ids_size1))
(assert eq_21)
(define-fun lt () Bool (< input_ids_size1 0))
(define-fun not__13 () Bool (not lt))
(assert not__13)
(define-fun lt_1 () Bool (< input_ids_size0 0))
(define-fun not__14 () Bool (not lt_1))
(assert not__14)
(define-fun eq_22 () Bool (= input_ids_size0 input_ids_size0))
(assert eq_22)
(define-fun mul_15 () Int (* 512 input_ids_size1))
(define-fun mul_16 () Int (* mul_15 input_ids_size0))
(define-fun mul_17 () Int (* mul_15 sub))
(define-fun add_9 () Int (+ 1 mul_17))
(define-fun mul_18 () Int (* 512 sub_1))
(define-fun add_10 () Int (+ add_9 mul_18))
(define-fun add_11 () Int (+ add_10 511))
(define-fun mul_19 () Int (* 4 add_11))
(define-fun mul_20 () Int (* mul_3 512))
(define-fun eq_23 () Bool (= mul_20 0))
(define-fun not__15 () Bool (not eq_23))
(assert not__15)
(define-fun mul_21 () Int (* input_ids_size1 input_ids_size0))
(define-fun mul_22 () Int (* input_ids_size1 sub))
(define-fun add_12 () Int (+ 1 mul_22))
(define-fun add_13 () Int (+ add_12 sub_1))
(define-fun mul_23 () Int (* 4 add_13))
(define-fun lt_2 () Bool (< mul_3 2))
(define-fun not__16 () Bool (not lt_2))
(assert not__16)
(define-fun eq_24 () Bool (= input_ids_size0 9223372036854775807))
(define-fun not__17 () Bool (not eq_24))
(assert not__17)
(define-fun le () Bool (<= input_ids_size0 0))
(define-fun not__18 () Bool (not le))
(assert not__18)
(define-fun le_1 () Bool (<= input_ids_size0 9223372036854775807))
(assert le_1)
(define-fun mul_24 () Int (* 0 input_ids_size1))
(define-fun sub_6 () Int (- input_ids_size0 0))
(define-fun add_14 () Int (+ sub_6 1))
(define-fun sub_7 () Int (- add_14 1))
(define-fun floordiv_1 () Int (div sub_7 1))
(define-fun mul_25 () Int (* floordiv_1 input_ids_size1))
(define-fun eq_25 () Bool (= mul_25 0))
(define-fun not__19 () Bool (not eq_25))
(assert not__19)
(define-fun eq_26 () Bool (= floordiv_1 1))
(assert eq_26)
(define-fun eq_27 () Bool (= floordiv_1 floordiv_1))
(assert eq_27)
(define-fun lt_3 () Bool (< 1 input_ids_size1))
(assert lt_3)
(define-fun eq_28 () Bool (= input_ids_size1 9223372036854775807))
(define-fun not__20 () Bool (not eq_28))
(assert not__20)
(define-fun le_2 () Bool (<= input_ids_size1 0))
(define-fun not__21 () Bool (not le_2))
(assert not__21)
(define-fun le_3 () Bool (<= input_ids_size1 9223372036854775807))
(assert le_3)
(define-fun sub_8 () Int (- input_ids_size1 0))
(define-fun add_15 () Int (+ sub_8 1))
(define-fun sub_9 () Int (- add_15 1))
(define-fun floordiv_2 () Int (div sub_9 1))
(define-fun mul_26 () Int (* floordiv_1 floordiv_2))
(define-fun eq_29 () Bool (= mul_26 0))
(define-fun not__22 () Bool (not eq_29))
(assert not__22)
(define-fun eq_30 () Bool (= floordiv_2 1))
(define-fun not__23 () Bool (not eq_30))
(assert not__23)
(define-fun eq_31 () Bool (= floordiv_2 0))
(define-fun not__24 () Bool (not eq_31))
(assert not__24)
(define-fun lt_4 () Bool (< floordiv_2 0))
(define-fun not__25 () Bool (not lt_4))
(assert not__25)
(define-fun lt_5 () Bool (< floordiv_1 0))
(define-fun not__26 () Bool (not lt_5))
(assert not__26)
(define-fun eq_32 () Bool (= floordiv_2 floordiv_2))
(assert eq_32)
(define-fun gt () Bool (> input_ids_size1 1))
(assert gt)
(define-fun lt_6 () Bool (< input_ids_size1 input_ids_size1))
(define-fun not__27 () Bool (not lt_6))
(assert not__27)
(define-fun gt_1 () Bool (> input_ids_size1 input_ids_size1))
(define-fun not__28 () Bool (not gt_1))
(assert not__28)
(define-fun lt_7 () Bool (< floordiv_1 1))
(define-fun not__29 () Bool (not lt_7))
(assert not__29)
(define-fun ge_9 () Bool (>= floordiv_1 0))
(assert ge_9)
(define-fun ge_10 () Bool (>= floordiv_2 0))
(assert ge_10)
(define-fun eq_33 () Bool (= floordiv_1 0))
(define-fun not__30 () Bool (not eq_33))
(assert not__30)
(define-fun mul_27 () Int (* floordiv_2 floordiv_1))
(define-fun sub_10 () Int (- floordiv_1 1))
(define-fun mul_28 () Int (* floordiv_2 sub_10))
(define-fun add_16 () Int (+ 1 mul_28))
(define-fun mul_29 () Int (* floordiv_2 0))
(define-fun add_17 () Int (+ add_16 mul_29))
(define-fun add_18 () Int (+ add_17 mul_29))
(define-fun sub_11 () Int (- floordiv_2 1))
(define-fun add_19 () Int (+ add_18 sub_11))
(define-fun mul_30 () Int (* 4 add_19))
(define-fun lt_8 () Bool (< 1 floordiv_2))
(assert lt_8)
(define-fun gt_2 () Bool (> floordiv_2 1))
(assert gt_2)
(define-fun lt_9 () Bool (< floordiv_2 floordiv_2))
(define-fun not__31 () Bool (not lt_9))
(assert not__31)
(define-fun gt_3 () Bool (> floordiv_2 floordiv_2))
(define-fun not__32 () Bool (not gt_3))
(assert not__32)
(define-fun eq_34 () Bool (= mul_15 0))
(define-fun not__33 () Bool (not eq_34))
(assert not__33)
(define-fun gt_4 () Bool (> mul_15 512))
(assert gt_4)
(define-fun lt_10 () Bool (< input_ids_size1 1))
(define-fun not__34 () Bool (not lt_10))
(assert not__34)
(define-fun eq_35 () Bool (= input_ids_size0 -1))
(define-fun not__35 () Bool (not eq_35))
(assert not__35)
(define-fun eq_36 () Bool (= mul_3 mul_3))
(assert eq_36)
(define-fun lt_11 () Bool (< input_ids_size1 2))
(define-fun not__36 () Bool (not lt_11))
(assert not__36)
(define-fun lt_12 () Bool (< input_ids_size0 2))
(assert lt_12)
(define-fun eq_37 () Bool (= mul_3 -1))
(define-fun not__37 () Bool (not eq_37))
(assert not__37)
(define-fun ge_11 () Bool (>= mul_3 0))
(assert ge_11)
(define-fun eq_38 () Bool (= mul_20 mul_20))
(assert eq_38)
(define-fun lt_13 () Bool (< 1 mul_16))
(assert lt_13)
(define-fun lt_14 () Bool (< 512 mul_16))
(assert lt_14)
(define-fun mul_31 () Int (* 512 mul_3))
(define-fun eq_39 () Bool (= mul_31 mul_16))
(assert eq_39)
(define-fun eq_40 () Bool (= input_ids_size0 mul_3))
(define-fun not__38 () Bool (not eq_40))
(assert not__38)
(define-fun eq_41 () Bool (= mul_3 input_ids_size0))
(define-fun not__39 () Bool (not eq_41))
(assert not__39)
(define-fun mod () Int (mod input_ids_size0 mul_3))
(define-fun eq_42 () Bool (= mod 0))
(define-fun not__40 () Bool (not eq_42))
(assert not__40)
(define-fun mod_1 () Int (mod mul_3 mul_3))
(define-fun eq_43 () Bool (= mod_1 0))
(assert eq_43)
(define-fun mul_32 () Int (* input_ids_size1 512))
(define-fun eq_44 () Bool (= mul_32 0))
(define-fun not__41 () Bool (not eq_44))
(assert not__41)
(define-fun mul_33 () Int (* 384 input_ids_size1))
(define-fun mul_34 () Int (* 384 sub_1))
(define-fun add_20 () Int (+ 1 mul_34))
(define-fun add_21 () Int (+ add_20 383))
(define-fun mul_35 () Int (* 4 add_21))
(define-fun mul_36 () Int (* input_ids_size1 384))
(define-fun eq_45 () Bool (= mul_36 0))
(define-fun not__42 () Bool (not eq_45))
(assert not__42)
(define-fun mul_37 () Int (* mul_3 384))
(define-fun eq_46 () Bool (= mul_36 mul_37))
(assert eq_46)
(define-fun eq_47 () Bool (= input_ids_size1 input_ids_size0))
(define-fun not__43 () Bool (not eq_47))
(assert not__43)
(define-fun eq_48 () Bool (= input_ids_size0 input_ids_size1))
(define-fun not__44 () Bool (not eq_48))
(assert not__44)
(define-fun mod_2 () Int (mod input_ids_size1 input_ids_size0))
(define-fun eq_49 () Bool (= mod_2 0))
(assert eq_49)
(define-fun floordiv_3 () Int (div input_ids_size1 input_ids_size0))
(define-fun mul_38 () Int (* 384 floordiv_3))
(define-fun mul_39 () Int (* input_ids_size0 floordiv_3))
(define-fun mul_40 () Int (* mul_39 384))
(define-fun eq_50 () Bool (= mul_40 0))
(define-fun not__45 () Bool (not eq_50))
(assert not__45)
(define-fun eq_51 () Bool (= floordiv_3 1))
(define-fun not__46 () Bool (not eq_51))
(assert not__46)
(define-fun eq_52 () Bool (= input_ids_size1 floordiv_3))
(assert eq_52)
(define-fun mul_41 () Int (* input_ids_size0 6))
(define-fun mul_42 () Int (* mul_41 64))
(define-fun eq_53 () Bool (= mul_40 mul_42))
(define-fun not__47 () Bool (not eq_53))
(assert not__47)
(define-fun gt_5 () Bool (> mul_42 0))
(assert gt_5)
(define-fun mod_3 () Int (mod mul_40 mul_42))
(define-fun eq_54 () Bool (= mod_3 0))
(assert eq_54)
(define-fun eq_55 () Bool (= mul_42 0))
(define-fun not__48 () Bool (not eq_55))
(assert not__48)
(define-fun floordiv_4 () Int (div mul_40 mul_42))
(define-fun eq_56 () Bool (= floordiv_3 floordiv_4))
(assert eq_56)
(define-fun eq_57 () Bool (= floordiv_4 floordiv_3))
(assert eq_57)
(define-fun mul_43 () Int (* mul_39 6))
(define-fun mul_44 () Int (* mul_43 64))
(define-fun eq_58 () Bool (= mul_44 0))
(define-fun not__49 () Bool (not eq_58))
(assert not__49)
(define-fun eq_59 () Bool (= floordiv_3 0))
(define-fun not__50 () Bool (not eq_59))
(assert not__50)
(define-fun gt_6 () Bool (> floordiv_3 1))
(assert gt_6)
(define-fun lt_15 () Bool (< 1 mul_38))
(assert lt_15)
(define-fun mul_45 () Int (* mul_41 floordiv_3))
(define-fun mul_46 () Int (* mul_45 64))
(define-fun eq_60 () Bool (= mul_46 0))
(define-fun not__51 () Bool (not eq_60))
(assert not__51)
(define-fun lt_16 () Bool (< floordiv_3 2))
(define-fun not__52 () Bool (not lt_16))
(assert not__52)
(define-fun mul_47 () Int (* mul_42 floordiv_3))
(define-fun eq_61 () Bool (= mul_47 0))
(define-fun not__53 () Bool (not eq_61))
(assert not__53)
(define-fun eq_62 () Bool (= floordiv_3 floordiv_3))
(assert eq_62)
(define-fun eq_63 () Bool (= floordiv_3 -1))
(define-fun not__54 () Bool (not eq_63))
(assert not__54)
(define-fun ge_12 () Bool (>= floordiv_3 0))
(assert ge_12)
(define-fun mul_48 () Int (* 6 floordiv_3))
(define-fun mul_49 () Int (* mul_48 64))
(define-fun eq_64 () Bool (= mul_49 0))
(define-fun not__55 () Bool (not eq_64))
(assert not__55)
(define-fun eq_65 () Bool (= mul_49 mul_49))
(assert eq_65)
(define-fun mul_50 () Int (* floordiv_3 384))
(define-fun eq_66 () Bool (= 64 mul_50))
(define-fun not__56 () Bool (not eq_66))
(assert not__56)
(define-fun lt_17 () Bool (< 1 floordiv_3))
(assert lt_17)
(define-fun lt_18 () Bool (< floordiv_3 floordiv_3))
(define-fun not__57 () Bool (not lt_18))
(assert not__57)
(define-fun eq_67 () Bool (= mul_38 0))
(define-fun not__58 () Bool (not eq_67))
(assert not__58)
(define-fun eq_68 () Bool (= mul_38 mul_38))
(assert eq_68)
(define-fun eq_69 () Bool (= 1 mul_50))
(define-fun not__59 () Bool (not eq_69))
(assert not__59)
(define-fun mul_51 () Int (* floordiv_3 floordiv_3))
(define-fun mul_52 () Int (* mul_51 6))
(define-fun mul_53 () Int (* mul_51 5))
(define-fun add_22 () Int (+ 1 mul_53))
(define-fun sub_12 () Int (- floordiv_3 1))
(define-fun mul_54 () Int (* floordiv_3 sub_12))
(define-fun add_23 () Int (+ add_22 mul_54))
(define-fun add_24 () Int (+ add_23 sub_12))
(define-fun mul_55 () Int (* 4 add_24))
(define-fun mul_56 () Int (* mul_48 floordiv_3))
(define-fun eq_70 () Bool (= mul_56 0))
(define-fun not__60 () Bool (not eq_70))
(assert not__60)
(define-fun eq_71 () Bool (= mul_51 mul_51))
(assert eq_71)
(define-fun eq_72 () Bool (= mul_56 mul_56))
(assert eq_72)
(define-fun eq_73 () Bool (= mul_51 1))
(define-fun not__61 () Bool (not eq_73))
(assert not__61)
(define-fun eq_74 () Bool (= mul_51 0))
(define-fun not__62 () Bool (not eq_74))
(assert not__62)
(define-fun lt_19 () Bool (< mul_51 0))
(define-fun not__63 () Bool (not lt_19))
(assert not__63)
(define-fun lt_20 () Bool (< 1 mul_52))
(assert lt_20)
(define-fun add_25 () Int (+ 1 sub_1))
(define-fun mul_57 () Int (* 8 add_25))
(define-fun eq_75 () Bool (= floordiv_2 -1))
(define-fun not__64 () Bool (not eq_75))
(assert not__64)
(define-fun mul_58 () Int (* floordiv_2 floordiv_2))
(define-fun eq_76 () Bool (= mul_58 0))
(define-fun not__65 () Bool (not eq_76))
(assert not__65)
(define-fun eq_77 () Bool (= 0 floordiv_2))
(define-fun not__66 () Bool (not eq_77))
(assert not__66)
(define-fun lt_21 () Bool (< floordiv_2 2))
(define-fun not__67 () Bool (not lt_21))
(assert not__67)
(define-fun mul_59 () Int (* floordiv_2 sub_11))
(define-fun add_26 () Int (+ 1 mul_59))
(define-fun add_27 () Int (+ add_26 sub_11))
(define-fun mul_60 () Int (* 8 add_27))
(define-fun lt_22 () Bool (< mul_58 2))
(define-fun not__68 () Bool (not lt_22))
(assert not__68)
(define-fun mul_61 () Int (* 4 add_27))
(define-fun mul_62 () Int (* 6 floordiv_2))
(define-fun mul_63 () Int (* mul_62 floordiv_2))
(define-fun mul_64 () Int (* mul_62 sub_11))
(define-fun add_28 () Int (+ 1 mul_64))
(define-fun mul_65 () Int (* 6 sub_11))
(define-fun add_29 () Int (+ add_28 mul_65))
(define-fun add_30 () Int (+ add_29 5))
(define-fun mul_66 () Int (* 4 add_30))
(define-fun mul_67 () Int (* mul_58 6))
(define-fun eq_78 () Bool (= mul_67 0))
(define-fun not__69 () Bool (not eq_78))
(assert not__69)
(define-fun eq_79 () Bool (= mul_62 mul_62))
(assert eq_79)
(define-fun eq_80 () Bool (= mul_63 0))
(define-fun not__70 () Bool (not eq_80))
(assert not__70)
(define-fun lt_23 () Bool (< mul_62 1))
(define-fun not__71 () Bool (not lt_23))
(assert not__71)
(define-fun lt_24 () Bool (< 6 mul_62))
(assert lt_24)
(define-fun lt_25 () Bool (< mul_62 mul_62))
(define-fun not__72 () Bool (not lt_25))
(assert not__72)
(define-fun lt_26 () Bool (< 6 mul_63))
(assert lt_26)
(define-fun eq_81 () Bool (= floordiv_1 -1))
(define-fun not__73 () Bool (not eq_81))
(assert not__73)
(define-fun mul_68 () Int (* floordiv_1 6))
(define-fun mul_69 () Int (* mul_68 floordiv_2))
(define-fun mul_70 () Int (* mul_69 floordiv_2))
(define-fun eq_82 () Bool (= mul_70 0))
(define-fun not__74 () Bool (not eq_82))
(assert not__74)
(define-fun lt_27 () Bool (< floordiv_1 2))
(assert lt_27)
(define-fun eq_83 () Bool (= mul_62 0))
(define-fun not__75 () Bool (not eq_83))
(assert not__75)
(define-fun gt_7 () Bool (> mul_62 6))
(assert gt_7)
(define-fun gt_8 () Bool (> mul_62 1))
(assert gt_8)
(define-fun lt_28 () Bool (< mul_62 6))
(define-fun not__76 () Bool (not lt_28))
(assert not__76)
(define-fun add_31 () Int (+ 6 mul_64))
(define-fun add_32 () Int (+ add_31 mul_65))
(define-fun mul_71 () Int (* 4 add_32))
(define-fun eq_84 () Bool (= floordiv_3 128))
(assert eq_84)
(define-fun mul_72 () Int (* floordiv_3 6))
(define-fun mul_73 () Int (* mul_72 0))
(define-fun add_33 () Int (+ 1 mul_73))
(define-fun mul_74 () Int (* floordiv_3 5))
(define-fun add_34 () Int (+ add_33 mul_74))
(define-fun add_35 () Int (+ add_34 sub_12))
(define-fun mul_75 () Int (* 4 add_35))
(define-fun eq_85 () Bool (= mul_48 0))
(define-fun not__77 () Bool (not eq_85))
(assert not__77)
(define-fun lt_29 () Bool (< floordiv_3 0))
(define-fun not__78 () Bool (not lt_29))
(assert not__78)
(define-fun lt_30 () Bool (< 1 mul_72))
(assert lt_30)
(define-fun lt_31 () Bool (< 0 mul_72))
(assert lt_31)
(define-fun lt_32 () Bool (< floordiv_3 mul_51))
(assert lt_32)
(define-fun eq_86 () Bool (= mul_52 0))
(define-fun not__79 () Bool (not eq_86))
(assert not__79)
(define-fun lt_33 () Bool (< mul_51 mul_52))
(assert lt_33)
(define-fun mul_76 () Int (* mul_52 0))
(define-fun add_36 () Int (+ 1 mul_76))
(define-fun add_37 () Int (+ add_36 mul_53))
(define-fun add_38 () Int (+ add_37 mul_54))
(define-fun add_39 () Int (+ add_38 sub_12))
(define-fun mul_77 () Int (* 4 add_39))
(define-fun lt_34 () Bool (< floordiv_3 mul_52))
(assert lt_34)
(define-fun eq_87 () Bool (= mul_52 mul_52))
(assert eq_87)
(define-fun mul_78 () Int (* 64 floordiv_3))
(define-fun mul_79 () Int (* mul_78 6))
(define-fun mul_80 () Int (* mul_78 5))
(define-fun add_40 () Int (+ 1 mul_80))
(define-fun mul_81 () Int (* 64 sub_12))
(define-fun add_41 () Int (+ add_40 mul_81))
(define-fun add_42 () Int (+ add_41 63))
(define-fun mul_82 () Int (* 4 add_42))
(define-fun eq_88 () Bool (= mul_78 mul_78))
(assert eq_88)
(define-fun eq_89 () Bool (= mul_78 1))
(define-fun not__80 () Bool (not eq_89))
(assert not__80)
(define-fun eq_90 () Bool (= mul_78 0))
(define-fun not__81 () Bool (not eq_90))
(assert not__81)
(define-fun lt_35 () Bool (< mul_78 0))
(define-fun not__82 () Bool (not lt_35))
(assert not__82)
(define-fun lt_36 () Bool (< 1 mul_79))
(assert lt_36)
(define-fun mul_83 () Int (* mul_72 64))
(define-fun eq_91 () Bool (= mul_83 0))
(define-fun not__83 () Bool (not eq_91))
(assert not__83)
(define-fun eq_92 () Bool (= mul_78 64))
(define-fun not__84 () Bool (not eq_92))
(assert not__84)
(define-fun lt_37 () Bool (< mul_78 64))
(define-fun not__85 () Bool (not lt_37))
(assert not__85)
(define-fun lt_38 () Bool (< 1 mul_78))
(assert lt_38)
(define-fun mul_84 () Int (* mul_38 0))
(define-fun add_43 () Int (+ 1 mul_84))
(define-fun mul_85 () Int (* 384 sub_12))
(define-fun add_44 () Int (+ add_43 mul_85))
(define-fun add_45 () Int (+ add_44 320))
(define-fun add_46 () Int (+ add_45 63))
(define-fun mul_86 () Int (* 4 add_46))
(define-fun mul_87 () Int (* input_ids_size0 384))
(define-fun eq_93 () Bool (= mul_83 mul_87))
(define-fun not__86 () Bool (not eq_93))
(assert not__86)
(define-fun gt_9 () Bool (> mul_87 0))
(assert gt_9)
(define-fun mod_4 () Int (mod mul_83 mul_87))
(define-fun eq_94 () Bool (= mod_4 0))
(assert eq_94)
(define-fun eq_95 () Bool (= mul_87 0))
(define-fun not__87 () Bool (not eq_95))
(assert not__87)
(define-fun floordiv_5 () Int (div mul_83 mul_87))
(define-fun eq_96 () Bool (= floordiv_3 floordiv_5))
(assert eq_96)
(define-fun eq_97 () Bool (= floordiv_5 floordiv_3))
(assert eq_97)
(define-fun gt_10 () Bool (> mul_83 0))
(assert gt_10)
(define-fun eq_98 () Bool (= mul_50 0))
(define-fun not__88 () Bool (not eq_98))
(assert not__88)
(define-fun eq_99 () Bool (= mul_50 mul_50))
(assert eq_99)
(define-fun lt_39 () Bool (< 384 mul_38))
(assert lt_39)
(define-fun mod_5 () Int (mod 1 floordiv_3))
(define-fun eq_100 () Bool (= mod_5 0))
(define-fun not__89 () Bool (not eq_100))
(assert not__89)
(define-fun mod_6 () Int (mod floordiv_3 floordiv_3))
(define-fun eq_101 () Bool (= mod_6 0))
(assert eq_101)
(define-fun mul_88 () Int (* 512 floordiv_3))
(define-fun mul_89 () Int (* 512 sub_12))
(define-fun add_47 () Int (+ 1 mul_89))
(define-fun add_48 () Int (+ add_47 511))
(define-fun mul_90 () Int (* 4 add_48))
(define-fun mul_91 () Int (* floordiv_3 512))
(define-fun eq_102 () Bool (= mul_91 0))
(define-fun not__90 () Bool (not eq_102))
(assert not__90)
(define-fun eq_103 () Bool (= mul_91 mul_91))
(assert eq_103)
(define-fun mod_7 () Int (mod floordiv_3 1))
(define-fun eq_104 () Bool (= mod_7 0))
(assert eq_104)
(define-fun floordiv_6 () Int (div floordiv_3 1))
(define-fun mul_92 () Int (* 512 floordiv_6))
(define-fun mul_93 () Int (* floordiv_6 512))
(define-fun eq_105 () Bool (= mul_93 0))
(define-fun not__91 () Bool (not eq_105))
(assert not__91)
(define-fun eq_106 () Bool (= floordiv_6 1))
(define-fun not__92 () Bool (not eq_106))
(assert not__92)
(define-fun eq_107 () Bool (= floordiv_3 floordiv_6))
(assert eq_107)
(define-fun eq_108 () Bool (= input_ids_size1 floordiv_6))
(assert eq_108)
(define-fun eq_109 () Bool (= floordiv_6 input_ids_size1))
(assert eq_109)
(define-fun mul_94 () Int (* 1024 input_ids_size1))
(define-fun mul_95 () Int (* 1024 sub_1))
(define-fun add_49 () Int (+ 1 mul_95))
(define-fun add_50 () Int (+ add_49 1023))
(define-fun mul_96 () Int (* 4 add_50))
(define-fun mul_97 () Int (* input_ids_size1 1024))
(define-fun eq_110 () Bool (= mul_97 0))
(define-fun not__93 () Bool (not eq_110))
(assert not__93)
(define-fun mul_98 () Int (* mul_3 1024))
(define-fun eq_111 () Bool (= mul_97 mul_98))
(assert eq_111)
(define-fun mul_99 () Int (* 1024 floordiv_3))
(define-fun mul_100 () Int (* mul_39 1024))
(define-fun eq_112 () Bool (= mul_100 0))
(define-fun not__94 () Bool (not eq_112))
(assert not__94)
(define-fun eq_113 () Bool (= mul_99 0))
(define-fun not__95 () Bool (not eq_113))
(assert not__95)
(define-fun gt_11 () Bool (> mul_99 1024))
(assert gt_11)
(define-fun mul_101 () Int (* mul_99 input_ids_size0))
(define-fun mul_102 () Int (* mul_99 sub))
(define-fun add_51 () Int (+ 1 mul_102))
(define-fun mul_103 () Int (* 1024 sub_12))
(define-fun add_52 () Int (+ add_51 mul_103))
(define-fun add_53 () Int (+ add_52 1023))
(define-fun mul_104 () Int (* 4 add_53))
(define-fun eq_114 () Bool (= mul_100 mul_100))
(assert eq_114)
(define-fun eq_115 () Bool (= mul_39 -1))
(define-fun not__96 () Bool (not eq_115))
(assert not__96)
(define-fun ge_13 () Bool (>= mul_39 0))
(assert ge_13)
(define-fun lt_40 () Bool (< 1 mul_101))
(assert lt_40)
(define-fun lt_41 () Bool (< 1024 mul_101))
(assert lt_41)
(define-fun mul_105 () Int (* 1024 mul_39))
(define-fun eq_116 () Bool (= mul_105 mul_101))
(assert eq_116)
(define-fun eq_117 () Bool (= input_ids_size0 mul_39))
(define-fun not__97 () Bool (not eq_117))
(assert not__97)
(define-fun eq_118 () Bool (= mul_39 input_ids_size0))
(define-fun not__98 () Bool (not eq_118))
(assert not__98)
(define-fun mod_8 () Int (mod input_ids_size0 mul_39))
(define-fun eq_119 () Bool (= mod_8 0))
(define-fun not__99 () Bool (not eq_119))
(assert not__99)
(define-fun mod_9 () Int (mod mul_39 mul_39))
(define-fun eq_120 () Bool (= mod_9 0))
(assert eq_120)
(define-fun mul_106 () Int (* floordiv_3 1024))
(define-fun eq_121 () Bool (= mul_106 0))
(define-fun not__100 () Bool (not eq_121))
(assert not__100)
(define-fun eq_122 () Bool (= mul_39 mul_39))
(assert eq_122)
(define-fun mul_107 () Int (* mul_39 512))
(define-fun eq_123 () Bool (= mul_91 mul_107))
(assert eq_123)
(define-fun eq_124 () Bool (= floordiv_3 input_ids_size0))
(define-fun not__101 () Bool (not eq_124))
(assert not__101)
(define-fun eq_125 () Bool (= input_ids_size0 floordiv_3))
(define-fun not__102 () Bool (not eq_125))
(assert not__102)
(define-fun mod_10 () Int (mod floordiv_3 input_ids_size0))
(define-fun eq_126 () Bool (= mod_10 0))
(assert eq_126)
(define-fun floordiv_7 () Int (div floordiv_3 input_ids_size0))
(define-fun mul_108 () Int (* 512 floordiv_7))
(define-fun mul_109 () Int (* input_ids_size0 floordiv_7))
(define-fun mul_110 () Int (* mul_109 512))
(define-fun eq_127 () Bool (= mul_110 0))
(define-fun not__103 () Bool (not eq_127))
(assert not__103)
(define-fun eq_128 () Bool (= floordiv_7 1))
(define-fun not__104 () Bool (not eq_128))
(assert not__104)
(define-fun eq_129 () Bool (= floordiv_3 floordiv_7))
(assert eq_129)
(define-fun eq_130 () Bool (= input_ids_size1 floordiv_7))
(assert eq_130)
(define-fun eq_131 () Bool (= floordiv_7 input_ids_size1))
(assert eq_131)
(define-fun eq_132 () Bool (= decoder_input_ids_size1 -1))
(define-fun not__105 () Bool (not eq_132))
(assert not__105)
(define-fun eq_133 () Bool (= mul_8 decoder_input_ids_size1))
(assert eq_133)
(define-fun floordiv_8 () Int (div mul_8 decoder_input_ids_size1))
(define-fun eq_134 () Bool (= decoder_input_ids_size0 floordiv_8))
(assert eq_134)
(define-fun eq_135 () Bool (= decoder_input_ids_size1 decoder_input_ids_size1))
(assert eq_135)
(define-fun lt_42 () Bool (< decoder_input_ids_size1 0))
(define-fun not__106 () Bool (not lt_42))
(assert not__106)
(define-fun lt_43 () Bool (< decoder_input_ids_size0 0))
(define-fun not__107 () Bool (not lt_43))
(assert not__107)
(define-fun eq_136 () Bool (= decoder_input_ids_size0 decoder_input_ids_size0))
(assert eq_136)
(define-fun mul_111 () Int (* 512 decoder_input_ids_size1))
(define-fun mul_112 () Int (* mul_111 decoder_input_ids_size0))
(define-fun mul_113 () Int (* mul_111 sub_2))
(define-fun add_54 () Int (+ 1 mul_113))
(define-fun mul_114 () Int (* 512 sub_3))
(define-fun add_55 () Int (+ add_54 mul_114))
(define-fun add_56 () Int (+ add_55 511))
(define-fun mul_115 () Int (* 4 add_56))
(define-fun mul_116 () Int (* mul_8 512))
(define-fun eq_137 () Bool (= mul_116 0))
(define-fun not__108 () Bool (not eq_137))
(assert not__108)
(define-fun mul_117 () Int (* decoder_input_ids_size1 decoder_input_ids_size0))
(define-fun mul_118 () Int (* decoder_input_ids_size1 sub_2))
(define-fun add_57 () Int (+ 1 mul_118))
(define-fun add_58 () Int (+ add_57 sub_3))
(define-fun mul_119 () Int (* 4 add_58))
(define-fun lt_44 () Bool (< mul_8 2))
(define-fun not__109 () Bool (not lt_44))
(assert not__109)
(define-fun mul_120 () Int (* input_ids_size1 decoder_input_ids_size0))
(define-fun mul_121 () Int (* input_ids_size1 sub_2))
(define-fun add_59 () Int (+ 1 mul_121))
(define-fun add_60 () Int (+ add_59 sub_1))
(define-fun mul_122 () Int (* 8 add_60))
(define-fun mul_123 () Int (* decoder_input_ids_size0 input_ids_size1))
(define-fun eq_138 () Bool (= mul_123 0))
(define-fun not__110 () Bool (not eq_138))
(assert not__110)
(define-fun add_61 () Int (+ 1 sub_3))
(define-fun mul_124 () Int (* 8 add_61))
(define-fun eq_139 () Bool (= decoder_input_ids_size1 9223372036854775807))
(define-fun not__111 () Bool (not eq_139))
(assert not__111)
(define-fun le_4 () Bool (<= decoder_input_ids_size1 0))
(define-fun not__112 () Bool (not le_4))
(assert not__112)
(define-fun le_5 () Bool (<= decoder_input_ids_size1 9223372036854775807))
(assert le_5)
(define-fun sub_13 () Int (- decoder_input_ids_size1 0))
(define-fun add_62 () Int (+ sub_13 1))
(define-fun sub_14 () Int (- add_62 1))
(define-fun floordiv_9 () Int (div sub_14 1))
(define-fun eq_140 () Bool (= floordiv_9 0))
(define-fun not__113 () Bool (not eq_140))
(assert not__113)
(define-fun eq_141 () Bool (= floordiv_9 1))
(define-fun not__114 () Bool (not eq_141))
(assert not__114)
(define-fun ge_14 () Bool (>= floordiv_9 0))
(assert ge_14)
(define-fun mul_125 () Int (* floordiv_9 decoder_input_ids_size1))
(define-fun mul_126 () Int (* mul_125 decoder_input_ids_size0))
(define-fun mul_127 () Int (* mul_125 sub_2))
(define-fun add_63 () Int (+ 1 mul_127))
(define-fun mul_128 () Int (* floordiv_9 sub_3))
(define-fun add_64 () Int (+ add_63 mul_128))
(define-fun sub_15 () Int (- floordiv_9 1))
(define-fun add_65 () Int (+ add_64 sub_15))
(define-fun mul_129 () Int (* 8 add_65))
(define-fun mul_130 () Int (* mul_8 floordiv_9))
(define-fun eq_142 () Bool (= mul_130 0))
(define-fun not__115 () Bool (not eq_142))
(assert not__115)
(define-fun eq_143 () Bool (= floordiv_9 floordiv_9))
(assert eq_143)
(define-fun lt_45 () Bool (< floordiv_9 0))
(define-fun not__116 () Bool (not lt_45))
(assert not__116)
(define-fun eq_144 () Bool (= decoder_input_ids_size1 floordiv_9))
(assert eq_144)
(define-fun eq_145 () Bool (= floordiv_9 decoder_input_ids_size1))
(assert eq_145)
(define-fun eq_146 () Bool (= floordiv_9 -1))
(define-fun not__117 () Bool (not eq_146))
(assert not__117)
(define-fun mul_131 () Int (* decoder_input_ids_size1 floordiv_9))
(define-fun eq_147 () Bool (= mul_131 0))
(define-fun not__118 () Bool (not eq_147))
(assert not__118)
(define-fun lt_46 () Bool (< decoder_input_ids_size1 2))
(define-fun not__119 () Bool (not lt_46))
(assert not__119)
(define-fun lt_47 () Bool (< floordiv_9 2))
(define-fun not__120 () Bool (not lt_47))
(assert not__120)
(define-fun gt_12 () Bool (> floordiv_9 1))
(assert gt_12)
(define-fun eq_148 () Bool (= mul_125 0))
(define-fun not__121 () Bool (not eq_148))
(assert not__121)
(define-fun lt_48 () Bool (< floordiv_9 mul_125))
(assert lt_48)
(define-fun lt_49 () Bool (< mul_130 2))
(define-fun not__122 () Bool (not lt_49))
(assert not__122)
(define-fun mul_132 () Int (* 4 add_65))
(define-fun lt_50 () Bool (< decoder_input_ids_size1 decoder_input_ids_size1))
(define-fun not__123 () Bool (not lt_50))
(assert not__123)
(define-fun eq_149 () Bool (= decoder_input_ids_size0 9223372036854775807))
(define-fun not__124 () Bool (not eq_149))
(assert not__124)
(define-fun le_6 () Bool (<= decoder_input_ids_size0 0))
(define-fun not__125 () Bool (not le_6))
(assert not__125)
(define-fun le_7 () Bool (<= decoder_input_ids_size0 9223372036854775807))
(assert le_7)
(define-fun mul_133 () Int (* 0 mul_125))
(define-fun sub_16 () Int (- decoder_input_ids_size0 0))
(define-fun add_66 () Int (+ sub_16 1))
(define-fun sub_17 () Int (- add_66 1))
(define-fun floordiv_10 () Int (div sub_17 1))
(define-fun mul_134 () Int (* floordiv_10 decoder_input_ids_size1))
(define-fun mul_135 () Int (* mul_134 floordiv_9))
(define-fun eq_150 () Bool (= mul_135 0))
(define-fun not__126 () Bool (not eq_150))
(assert not__126)
(define-fun eq_151 () Bool (= floordiv_10 1))
(assert eq_151)
(define-fun eq_152 () Bool (= floordiv_10 floordiv_10))
(assert eq_152)
(define-fun lt_51 () Bool (< mul_125 0))
(define-fun not__127 () Bool (not lt_51))
(assert not__127)
(define-fun lt_52 () Bool (< 1 mul_125))
(assert lt_52)
(define-fun mul_136 () Int (* 0 floordiv_9))
(define-fun add_67 () Int (+ mul_133 mul_136))
(define-fun mul_137 () Int (* floordiv_10 floordiv_9))
(define-fun mul_138 () Int (* mul_137 floordiv_9))
(define-fun eq_153 () Bool (= mul_138 0))
(define-fun not__128 () Bool (not eq_153))
(assert not__128)
(define-fun mul_139 () Int (* floordiv_9 floordiv_9))
(define-fun eq_154 () Bool (= floordiv_9 9223372036854775807))
(define-fun not__129 () Bool (not eq_154))
(assert not__129)
(define-fun le_8 () Bool (<= floordiv_9 0))
(define-fun not__130 () Bool (not le_8))
(assert not__130)
(define-fun le_9 () Bool (<= floordiv_9 9223372036854775807))
(assert le_9)
(define-fun sub_18 () Int (- floordiv_9 0))
(define-fun add_68 () Int (+ sub_18 1))
(define-fun sub_19 () Int (- add_68 1))
(define-fun floordiv_11 () Int (div sub_19 1))
(define-fun mul_140 () Int (* mul_137 floordiv_11))
(define-fun eq_155 () Bool (= mul_140 0))
(define-fun not__131 () Bool (not eq_155))
(assert not__131)
(define-fun eq_156 () Bool (= floordiv_11 1))
(define-fun not__132 () Bool (not eq_156))
(assert not__132)
(define-fun eq_157 () Bool (= floordiv_9 floordiv_11))
(assert eq_157)
(define-fun mul_141 () Int (* floordiv_11 floordiv_9))
(define-fun eq_158 () Bool (= floordiv_11 0))
(define-fun not__133 () Bool (not eq_158))
(assert not__133)
(define-fun mul_142 () Int (* 0 decoder_input_ids_size1))
(define-fun eq_159 () Bool (= mul_134 0))
(define-fun not__134 () Bool (not eq_159))
(assert not__134)
(define-fun lt_53 () Bool (< 1 decoder_input_ids_size1))
(assert lt_53)
(define-fun eq_160 () Bool (= mul_137 0))
(define-fun not__135 () Bool (not eq_160))
(assert not__135)
(define-fun lt_54 () Bool (< floordiv_11 0))
(define-fun not__136 () Bool (not lt_54))
(assert not__136)
(define-fun lt_55 () Bool (< floordiv_10 0))
(define-fun not__137 () Bool (not lt_55))
(assert not__137)
(define-fun eq_161 () Bool (= floordiv_11 floordiv_9))
(assert eq_161)
(define-fun eq_162 () Bool (= floordiv_11 floordiv_11))
(assert eq_162)
(define-fun eq_163 () Bool (= floordiv_10 -1))
(define-fun not__138 () Bool (not eq_163))
(assert not__138)
(define-fun eq_164 () Bool (= floordiv_11 -1))
(define-fun not__139 () Bool (not eq_164))
(assert not__139)
(define-fun ge_15 () Bool (>= floordiv_10 0))
(assert ge_15)
(define-fun ge_16 () Bool (>= floordiv_11 0))
(assert ge_16)
(define-fun eq_165 () Bool (= 0 floordiv_11))
(define-fun not__140 () Bool (not eq_165))
(assert not__140)
(define-fun lt_56 () Bool (< floordiv_10 2))
(assert lt_56)
(define-fun lt_57 () Bool (< floordiv_11 2))
(define-fun not__141 () Bool (not lt_57))
(assert not__141)
(define-fun lt_58 () Bool (< mul_125 mul_125))
(define-fun not__142 () Bool (not lt_58))
(assert not__142)
(define-fun gt_13 () Bool (> mul_125 mul_125))
(define-fun not__143 () Bool (not gt_13))
(assert not__143)
(define-fun lt_59 () Bool (< floordiv_10 1))
(define-fun not__144 () Bool (not lt_59))
(assert not__144)
(define-fun gt_14 () Bool (> decoder_input_ids_size1 decoder_input_ids_size1))
(define-fun not__145 () Bool (not gt_14))
(assert not__145)
(define-fun eq_166 () Bool (= floordiv_10 0))
(define-fun not__146 () Bool (not eq_166))
(assert not__146)
(define-fun mul_143 () Int (* mul_141 floordiv_10))
(define-fun sub_20 () Int (- floordiv_10 1))
(define-fun mul_144 () Int (* mul_141 sub_20))
(define-fun add_69 () Int (+ 1 mul_144))
(define-fun mul_145 () Int (* mul_141 0))
(define-fun add_70 () Int (+ add_69 mul_145))
(define-fun mul_146 () Int (* floordiv_11 sub_15))
(define-fun add_71 () Int (+ add_70 mul_146))
(define-fun sub_21 () Int (- floordiv_11 1))
(define-fun add_72 () Int (+ add_71 sub_21))
(define-fun mul_147 () Int (* 4 add_72))
(define-fun eq_167 () Bool (= mul_141 0))
(define-fun not__147 () Bool (not eq_167))
(assert not__147)
(define-fun lt_60 () Bool (< mul_141 0))
(define-fun not__148 () Bool (not lt_60))
(assert not__148)
(define-fun lt_61 () Bool (< 1 mul_141))
(assert lt_61)
(define-fun gt_15 () Bool (> floordiv_11 1))
(assert gt_15)
(define-fun lt_62 () Bool (< floordiv_11 mul_141))
(assert lt_62)
(define-fun lt_63 () Bool (< mul_141 mul_141))
(define-fun not__149 () Bool (not lt_63))
(assert not__149)
(define-fun gt_16 () Bool (> mul_141 mul_141))
(define-fun not__150 () Bool (not gt_16))
(assert not__150)
(define-fun mul_148 () Int (* floordiv_10 input_ids_size1))
(define-fun eq_168 () Bool (= mul_148 0))
(define-fun not__151 () Bool (not eq_168))
(assert not__151)
(define-fun mul_149 () Int (* floordiv_10 floordiv_2))
(define-fun eq_169 () Bool (= mul_149 0))
(define-fun not__152 () Bool (not eq_169))
(assert not__152)
(define-fun lt_64 () Bool (< mul_149 2))
(define-fun not__153 () Bool (not lt_64))
(assert not__153)
(define-fun mul_150 () Int (* input_ids_size1 sub_20))
(define-fun add_73 () Int (+ 1 mul_150))
(define-fun mul_151 () Int (* input_ids_size1 0))
(define-fun add_74 () Int (+ add_73 mul_151))
(define-fun add_75 () Int (+ add_74 mul_151))
(define-fun add_76 () Int (+ add_75 sub_11))
(define-fun mul_152 () Int (* 4 add_76))
(define-fun mul_153 () Int (* floordiv_2 floordiv_10))
(define-fun mul_154 () Int (* floordiv_2 sub_20))
(define-fun add_77 () Int (+ 1 mul_154))
(define-fun add_78 () Int (+ add_77 mul_29))
(define-fun add_79 () Int (+ add_78 mul_29))
(define-fun add_80 () Int (+ add_79 sub_11))
(define-fun mul_155 () Int (* 4 add_80))
(define-fun eq_170 () Bool (= mul_111 0))
(define-fun not__154 () Bool (not eq_170))
(assert not__154)
(define-fun gt_17 () Bool (> mul_111 512))
(assert gt_17)
(define-fun lt_65 () Bool (< decoder_input_ids_size1 1))
(define-fun not__155 () Bool (not lt_65))
(assert not__155)
(define-fun gt_18 () Bool (> decoder_input_ids_size1 1))
(assert gt_18)
(define-fun eq_171 () Bool (= decoder_input_ids_size0 -1))
(define-fun not__156 () Bool (not eq_171))
(assert not__156)
(define-fun eq_172 () Bool (= mul_8 mul_8))
(assert eq_172)
(define-fun lt_66 () Bool (< decoder_input_ids_size0 2))
(assert lt_66)
(define-fun eq_173 () Bool (= mul_8 -1))
(define-fun not__157 () Bool (not eq_173))
(assert not__157)
(define-fun ge_17 () Bool (>= mul_8 0))
(assert ge_17)
(define-fun eq_174 () Bool (= mul_116 mul_116))
(assert eq_174)
(define-fun lt_67 () Bool (< 1 mul_112))
(assert lt_67)
(define-fun lt_68 () Bool (< 512 mul_112))
(assert lt_68)
(define-fun mul_156 () Int (* 512 mul_8))
(define-fun eq_175 () Bool (= mul_156 mul_112))
(assert eq_175)
(define-fun eq_176 () Bool (= decoder_input_ids_size0 mul_8))
(define-fun not__158 () Bool (not eq_176))
(assert not__158)
(define-fun eq_177 () Bool (= mul_8 decoder_input_ids_size0))
(define-fun not__159 () Bool (not eq_177))
(assert not__159)
(define-fun mod_11 () Int (mod decoder_input_ids_size0 mul_8))
(define-fun eq_178 () Bool (= mod_11 0))
(define-fun not__160 () Bool (not eq_178))
(assert not__160)
(define-fun mod_12 () Int (mod mul_8 mul_8))
(define-fun eq_179 () Bool (= mod_12 0))
(assert eq_179)
(define-fun mul_157 () Int (* decoder_input_ids_size1 512))
(define-fun eq_180 () Bool (= mul_157 0))
(define-fun not__161 () Bool (not eq_180))
(assert not__161)
(define-fun mul_158 () Int (* 384 decoder_input_ids_size1))
(define-fun mul_159 () Int (* 384 sub_3))
(define-fun add_81 () Int (+ 1 mul_159))
(define-fun add_82 () Int (+ add_81 383))
(define-fun mul_160 () Int (* 4 add_82))
(define-fun mul_161 () Int (* decoder_input_ids_size1 384))
(define-fun eq_181 () Bool (= mul_161 0))
(define-fun not__162 () Bool (not eq_181))
(assert not__162)
(define-fun mul_162 () Int (* mul_8 384))
(define-fun eq_182 () Bool (= mul_161 mul_162))
(assert eq_182)
(define-fun eq_183 () Bool (= decoder_input_ids_size1 decoder_input_ids_size0))
(define-fun not__163 () Bool (not eq_183))
(assert not__163)
(define-fun eq_184 () Bool (= decoder_input_ids_size0 decoder_input_ids_size1))
(define-fun not__164 () Bool (not eq_184))
(assert not__164)
(define-fun mod_13 () Int (mod decoder_input_ids_size1 decoder_input_ids_size0))
(define-fun eq_185 () Bool (= mod_13 0))
(assert eq_185)
(define-fun floordiv_12 () Int (div decoder_input_ids_size1 decoder_input_ids_size0))
(define-fun mul_163 () Int (* 384 floordiv_12))
(define-fun mul_164 () Int (* decoder_input_ids_size0 floordiv_12))
(define-fun mul_165 () Int (* mul_164 384))
(define-fun eq_186 () Bool (= mul_165 0))
(define-fun not__165 () Bool (not eq_186))
(assert not__165)
(define-fun eq_187 () Bool (= floordiv_12 1))
(define-fun not__166 () Bool (not eq_187))
(assert not__166)
(define-fun eq_188 () Bool (= decoder_input_ids_size1 floordiv_12))
(assert eq_188)
(define-fun mul_166 () Int (* decoder_input_ids_size0 6))
(define-fun mul_167 () Int (* mul_166 64))
(define-fun eq_189 () Bool (= mul_165 mul_167))
(define-fun not__167 () Bool (not eq_189))
(assert not__167)
(define-fun gt_19 () Bool (> mul_167 0))
(assert gt_19)
(define-fun mod_14 () Int (mod mul_165 mul_167))
(define-fun eq_190 () Bool (= mod_14 0))
(assert eq_190)
(define-fun eq_191 () Bool (= mul_167 0))
(define-fun not__168 () Bool (not eq_191))
(assert not__168)
(define-fun floordiv_13 () Int (div mul_165 mul_167))
(define-fun eq_192 () Bool (= floordiv_12 floordiv_13))
(assert eq_192)
(define-fun eq_193 () Bool (= floordiv_13 floordiv_12))
(assert eq_193)
(define-fun mul_168 () Int (* mul_164 6))
(define-fun mul_169 () Int (* mul_168 64))
(define-fun eq_194 () Bool (= mul_169 0))
(define-fun not__169 () Bool (not eq_194))
(assert not__169)
(define-fun eq_195 () Bool (= floordiv_12 0))
(define-fun not__170 () Bool (not eq_195))
(assert not__170)
(define-fun gt_20 () Bool (> floordiv_12 1))
(assert gt_20)
(define-fun lt_69 () Bool (< 1 mul_163))
(assert lt_69)
(define-fun mul_170 () Int (* mul_166 floordiv_12))
(define-fun mul_171 () Int (* mul_170 64))
(define-fun eq_196 () Bool (= mul_171 0))
(define-fun not__171 () Bool (not eq_196))
(assert not__171)
(define-fun lt_70 () Bool (< floordiv_12 2))
(define-fun not__172 () Bool (not lt_70))
(assert not__172)
(define-fun mul_172 () Int (* mul_167 floordiv_12))
(define-fun eq_197 () Bool (= mul_172 0))
(define-fun not__173 () Bool (not eq_197))
(assert not__173)
(define-fun eq_198 () Bool (= floordiv_12 floordiv_12))
(assert eq_198)
(define-fun eq_199 () Bool (= floordiv_12 -1))
(define-fun not__174 () Bool (not eq_199))
(assert not__174)
(define-fun ge_18 () Bool (>= floordiv_12 0))
(assert ge_18)
(define-fun mul_173 () Int (* 6 floordiv_12))
(define-fun mul_174 () Int (* mul_173 64))
(define-fun eq_200 () Bool (= mul_174 0))
(define-fun not__175 () Bool (not eq_200))
(assert not__175)
(define-fun eq_201 () Bool (= mul_174 mul_174))
(assert eq_201)
(define-fun mul_175 () Int (* floordiv_12 384))
(define-fun eq_202 () Bool (= 64 mul_175))
(define-fun not__176 () Bool (not eq_202))
(assert not__176)
(define-fun lt_71 () Bool (< 1 floordiv_12))
(assert lt_71)
(define-fun lt_72 () Bool (< floordiv_12 floordiv_12))
(define-fun not__177 () Bool (not lt_72))
(assert not__177)
(define-fun eq_203 () Bool (= mul_163 0))
(define-fun not__178 () Bool (not eq_203))
(assert not__178)
(define-fun eq_204 () Bool (= mul_163 mul_163))
(assert eq_204)
(define-fun eq_205 () Bool (= 1 mul_175))
(define-fun not__179 () Bool (not eq_205))
(assert not__179)
(define-fun mul_176 () Int (* floordiv_12 floordiv_12))
(define-fun mul_177 () Int (* mul_176 6))
(define-fun mul_178 () Int (* mul_176 5))
(define-fun add_83 () Int (+ 1 mul_178))
(define-fun sub_22 () Int (- floordiv_12 1))
(define-fun mul_179 () Int (* floordiv_12 sub_22))
(define-fun add_84 () Int (+ add_83 mul_179))
(define-fun add_85 () Int (+ add_84 sub_22))
(define-fun mul_180 () Int (* 4 add_85))
(define-fun mul_181 () Int (* mul_173 floordiv_12))
(define-fun eq_206 () Bool (= mul_181 0))
(define-fun not__180 () Bool (not eq_206))
(assert not__180)
(define-fun eq_207 () Bool (= mul_176 mul_176))
(assert eq_207)
(define-fun eq_208 () Bool (= mul_181 mul_181))
(assert eq_208)
(define-fun eq_209 () Bool (= mul_176 1))
(define-fun not__181 () Bool (not eq_209))
(assert not__181)
(define-fun eq_210 () Bool (= mul_176 0))
(define-fun not__182 () Bool (not eq_210))
(assert not__182)
(define-fun lt_73 () Bool (< mul_176 0))
(define-fun not__183 () Bool (not lt_73))
(assert not__183)
(define-fun lt_74 () Bool (< 1 mul_177))
(assert lt_74)
(define-fun eq_211 () Bool (= mul_139 0))
(define-fun not__184 () Bool (not eq_211))
(assert not__184)
(define-fun eq_212 () Bool (= 0 floordiv_9))
(define-fun not__185 () Bool (not eq_212))
(assert not__185)
(define-fun mul_182 () Int (* floordiv_9 sub_15))
(define-fun add_86 () Int (+ 1 mul_182))
(define-fun add_87 () Int (+ add_86 sub_15))
(define-fun mul_183 () Int (* 8 add_87))
(define-fun lt_75 () Bool (< mul_139 2))
(define-fun not__186 () Bool (not lt_75))
(assert not__186)
(define-fun mul_184 () Int (* 4 add_87))
(define-fun mul_185 () Int (* 6 floordiv_9))
(define-fun mul_186 () Int (* mul_185 floordiv_9))
(define-fun mul_187 () Int (* mul_185 sub_15))
(define-fun add_88 () Int (+ 1 mul_187))
(define-fun mul_188 () Int (* 6 sub_15))
(define-fun add_89 () Int (+ add_88 mul_188))
(define-fun add_90 () Int (+ add_89 5))
(define-fun mul_189 () Int (* 4 add_90))
(define-fun mul_190 () Int (* mul_139 6))
(define-fun eq_213 () Bool (= mul_190 0))
(define-fun not__187 () Bool (not eq_213))
(assert not__187)
(define-fun eq_214 () Bool (= mul_185 mul_185))
(assert eq_214)
(define-fun eq_215 () Bool (= mul_186 0))
(define-fun not__188 () Bool (not eq_215))
(assert not__188)
(define-fun lt_76 () Bool (< mul_185 1))
(define-fun not__189 () Bool (not lt_76))
(assert not__189)
(define-fun lt_77 () Bool (< 6 mul_185))
(assert lt_77)
(define-fun lt_78 () Bool (< mul_185 mul_185))
(define-fun not__190 () Bool (not lt_78))
(assert not__190)
(define-fun lt_79 () Bool (< 6 mul_186))
(assert lt_79)
(define-fun mul_191 () Int (* floordiv_10 6))
(define-fun mul_192 () Int (* mul_191 floordiv_9))
(define-fun mul_193 () Int (* mul_192 floordiv_9))
(define-fun eq_216 () Bool (= mul_193 0))
(define-fun not__191 () Bool (not eq_216))
(assert not__191)
(define-fun eq_217 () Bool (= 0 mul_139))
(define-fun not__192 () Bool (not eq_217))
(assert not__192)
(define-fun lt_80 () Bool (< 1 floordiv_11))
(assert lt_80)
(define-fun eq_218 () Bool (= mul_185 0))
(define-fun not__193 () Bool (not eq_218))
(assert not__193)
(define-fun gt_21 () Bool (> mul_185 6))
(assert gt_21)
(define-fun gt_22 () Bool (> mul_185 1))
(assert gt_22)
(define-fun lt_81 () Bool (< mul_185 6))
(define-fun not__194 () Bool (not lt_81))
(assert not__194)
(define-fun add_91 () Int (+ 6 mul_187))
(define-fun add_92 () Int (+ add_91 mul_188))
(define-fun mul_194 () Int (* 4 add_92))
(define-fun eq_219 () Bool (= floordiv_12 128))
(assert eq_219)
(define-fun mul_195 () Int (* floordiv_12 6))
(define-fun mul_196 () Int (* mul_195 0))
(define-fun add_93 () Int (+ 1 mul_196))
(define-fun mul_197 () Int (* floordiv_12 5))
(define-fun add_94 () Int (+ add_93 mul_197))
(define-fun add_95 () Int (+ add_94 sub_22))
(define-fun mul_198 () Int (* 4 add_95))
(define-fun eq_220 () Bool (= mul_173 0))
(define-fun not__195 () Bool (not eq_220))
(assert not__195)
(define-fun lt_82 () Bool (< floordiv_12 0))
(define-fun not__196 () Bool (not lt_82))
(assert not__196)
(define-fun lt_83 () Bool (< 1 mul_195))
(assert lt_83)
(define-fun lt_84 () Bool (< 0 mul_195))
(assert lt_84)
(define-fun lt_85 () Bool (< floordiv_12 mul_176))
(assert lt_85)
(define-fun eq_221 () Bool (= mul_177 0))
(define-fun not__197 () Bool (not eq_221))
(assert not__197)
(define-fun lt_86 () Bool (< mul_176 mul_177))
(assert lt_86)
(define-fun mul_199 () Int (* mul_177 0))
(define-fun add_96 () Int (+ 1 mul_199))
(define-fun add_97 () Int (+ add_96 mul_178))
(define-fun add_98 () Int (+ add_97 mul_179))
(define-fun add_99 () Int (+ add_98 sub_22))
(define-fun mul_200 () Int (* 4 add_99))
(define-fun lt_87 () Bool (< floordiv_12 mul_177))
(assert lt_87)
(define-fun eq_222 () Bool (= mul_177 mul_177))
(assert eq_222)
(define-fun mul_201 () Int (* 64 floordiv_12))
(define-fun mul_202 () Int (* mul_201 6))
(define-fun mul_203 () Int (* mul_201 5))
(define-fun add_100 () Int (+ 1 mul_203))
(define-fun mul_204 () Int (* 64 sub_22))
(define-fun add_101 () Int (+ add_100 mul_204))
(define-fun add_102 () Int (+ add_101 63))
(define-fun mul_205 () Int (* 4 add_102))
(define-fun eq_223 () Bool (= mul_201 mul_201))
(assert eq_223)
(define-fun eq_224 () Bool (= mul_201 1))
(define-fun not__198 () Bool (not eq_224))
(assert not__198)
(define-fun eq_225 () Bool (= mul_201 0))
(define-fun not__199 () Bool (not eq_225))
(assert not__199)
(define-fun lt_88 () Bool (< mul_201 0))
(define-fun not__200 () Bool (not lt_88))
(assert not__200)
(define-fun lt_89 () Bool (< 1 mul_202))
(assert lt_89)
(define-fun mul_206 () Int (* mul_195 64))
(define-fun eq_226 () Bool (= mul_206 0))
(define-fun not__201 () Bool (not eq_226))
(assert not__201)
(define-fun eq_227 () Bool (= mul_201 64))
(define-fun not__202 () Bool (not eq_227))
(assert not__202)
(define-fun lt_90 () Bool (< mul_201 64))
(define-fun not__203 () Bool (not lt_90))
(assert not__203)
(define-fun lt_91 () Bool (< 1 mul_201))
(assert lt_91)
(define-fun mul_207 () Int (* mul_163 0))
(define-fun add_103 () Int (+ 1 mul_207))
(define-fun mul_208 () Int (* 384 sub_22))
(define-fun add_104 () Int (+ add_103 mul_208))
(define-fun add_105 () Int (+ add_104 320))
(define-fun add_106 () Int (+ add_105 63))
(define-fun mul_209 () Int (* 4 add_106))
(define-fun mul_210 () Int (* decoder_input_ids_size0 384))
(define-fun eq_228 () Bool (= mul_206 mul_210))
(define-fun not__204 () Bool (not eq_228))
(assert not__204)
(define-fun gt_23 () Bool (> mul_210 0))
(assert gt_23)
(define-fun mod_15 () Int (mod mul_206 mul_210))
(define-fun eq_229 () Bool (= mod_15 0))
(assert eq_229)
(define-fun eq_230 () Bool (= mul_210 0))
(define-fun not__205 () Bool (not eq_230))
(assert not__205)
(define-fun floordiv_14 () Int (div mul_206 mul_210))
(define-fun eq_231 () Bool (= floordiv_12 floordiv_14))
(assert eq_231)
(define-fun eq_232 () Bool (= floordiv_14 floordiv_12))
(assert eq_232)
(define-fun gt_24 () Bool (> mul_206 0))
(assert gt_24)
(define-fun eq_233 () Bool (= mul_175 0))
(define-fun not__206 () Bool (not eq_233))
(assert not__206)
(define-fun eq_234 () Bool (= mul_175 mul_175))
(assert eq_234)
(define-fun lt_92 () Bool (< 384 mul_163))
(assert lt_92)
(define-fun mod_16 () Int (mod 1 floordiv_12))
(define-fun eq_235 () Bool (= mod_16 0))
(define-fun not__207 () Bool (not eq_235))
(assert not__207)
(define-fun mod_17 () Int (mod floordiv_12 floordiv_12))
(define-fun eq_236 () Bool (= mod_17 0))
(assert eq_236)
(define-fun mul_211 () Int (* 512 floordiv_12))
(define-fun mul_212 () Int (* 512 sub_22))
(define-fun add_107 () Int (+ 1 mul_212))
(define-fun add_108 () Int (+ add_107 511))
(define-fun mul_213 () Int (* 4 add_108))
(define-fun mul_214 () Int (* floordiv_12 512))
(define-fun eq_237 () Bool (= mul_214 0))
(define-fun not__208 () Bool (not eq_237))
(assert not__208)
(define-fun eq_238 () Bool (= mul_214 mul_214))
(assert eq_238)
(define-fun mod_18 () Int (mod floordiv_12 1))
(define-fun eq_239 () Bool (= mod_18 0))
(assert eq_239)
(define-fun floordiv_15 () Int (div floordiv_12 1))
(define-fun mul_215 () Int (* 512 floordiv_15))
(define-fun mul_216 () Int (* floordiv_15 512))
(define-fun eq_240 () Bool (= mul_216 0))
(define-fun not__209 () Bool (not eq_240))
(assert not__209)
(define-fun eq_241 () Bool (= floordiv_15 1))
(define-fun not__210 () Bool (not eq_241))
(assert not__210)
(define-fun eq_242 () Bool (= floordiv_12 floordiv_15))
(assert eq_242)
(define-fun eq_243 () Bool (= decoder_input_ids_size1 floordiv_15))
(assert eq_243)
(define-fun eq_244 () Bool (= floordiv_15 decoder_input_ids_size1))
(assert eq_244)
(define-fun eq_245 () Bool (= mul_40 mul_167))
(define-fun not__211 () Bool (not eq_245))
(assert not__211)
(define-fun mod_19 () Int (mod mul_40 mul_167))
(define-fun eq_246 () Bool (= mod_19 0))
(assert eq_246)
(define-fun floordiv_16 () Int (div mul_40 mul_167))
(define-fun eq_247 () Bool (= input_ids_size0 decoder_input_ids_size0))
(assert eq_247)
(define-fun eq_248 () Bool (= floordiv_3 floordiv_16))
(assert eq_248)
(define-fun eq_249 () Bool (= decoder_input_ids_size0 input_ids_size0))
(assert eq_249)
(define-fun eq_250 () Bool (= floordiv_16 floordiv_3))
(assert eq_250)
(define-fun mul_217 () Int (* floordiv_3 floordiv_12))
(define-fun mul_218 () Int (* mul_217 6))
(define-fun mul_219 () Int (* mul_217 5))
(define-fun add_109 () Int (+ 1 mul_219))
(define-fun mul_220 () Int (* floordiv_3 sub_22))
(define-fun add_110 () Int (+ add_109 mul_220))
(define-fun add_111 () Int (+ add_110 sub_12))
(define-fun mul_221 () Int (* 4 add_111))
(define-fun mul_222 () Int (* mul_173 floordiv_3))
(define-fun eq_251 () Bool (= mul_222 0))
(define-fun not__212 () Bool (not eq_251))
(assert not__212)
(define-fun eq_252 () Bool (= mul_217 mul_217))
(assert eq_252)
(define-fun eq_253 () Bool (= mul_222 mul_222))
(assert eq_253)
(define-fun eq_254 () Bool (= mul_217 1))
(define-fun not__213 () Bool (not eq_254))
(assert not__213)
(define-fun eq_255 () Bool (= mul_217 0))
(define-fun not__214 () Bool (not eq_255))
(assert not__214)
(define-fun lt_93 () Bool (< mul_217 0))
(define-fun not__215 () Bool (not lt_93))
(assert not__215)
(define-fun lt_94 () Bool (< 1 mul_218))
(assert lt_94)
(define-fun mul_223 () Int (* input_ids_size1 decoder_input_ids_size1))
(define-fun mul_224 () Int (* mul_223 6))
(define-fun mul_225 () Int (* mul_224 0))
(define-fun add_112 () Int (+ 1 mul_225))
(define-fun mul_226 () Int (* mul_223 5))
(define-fun add_113 () Int (+ add_112 mul_226))
(define-fun mul_227 () Int (* input_ids_size1 sub_3))
(define-fun add_114 () Int (+ add_113 mul_227))
(define-fun add_115 () Int (+ add_114 sub_1))
(define-fun mul_228 () Int (* 4 add_115))
(define-fun mul_229 () Int (* 6 decoder_input_ids_size1))
(define-fun mul_230 () Int (* mul_229 input_ids_size1))
(define-fun eq_256 () Bool (= mul_230 0))
(define-fun not__216 () Bool (not eq_256))
(assert not__216)
(define-fun eq_257 () Bool (= mul_223 mul_223))
(assert eq_257)
(define-fun eq_258 () Bool (= mul_223 1))
(define-fun not__217 () Bool (not eq_258))
(assert not__217)
(define-fun eq_259 () Bool (= mul_223 0))
(define-fun not__218 () Bool (not eq_259))
(assert not__218)
(define-fun lt_95 () Bool (< mul_223 0))
(define-fun not__219 () Bool (not lt_95))
(assert not__219)
(define-fun lt_96 () Bool (< 1 mul_224))
(assert lt_96)
(define-fun eq_260 () Bool (= input_ids_size1 floordiv_2))
(assert eq_260)
(define-fun eq_261 () Bool (= floordiv_2 input_ids_size1))
(assert eq_261)
(define-fun mul_231 () Int (* mul_191 decoder_input_ids_size1))
(define-fun mul_232 () Int (* mul_231 input_ids_size1))
(define-fun eq_262 () Bool (= mul_232 0))
(define-fun not__220 () Bool (not eq_262))
(assert not__220)
(define-fun eq_263 () Bool (= 0 input_ids_size1))
(define-fun not__221 () Bool (not eq_263))
(assert not__221)
(define-fun lt_97 () Bool (< input_ids_size1 mul_223))
(assert lt_97)
(define-fun eq_264 () Bool (= mul_224 0))
(define-fun not__222 () Bool (not eq_264))
(assert not__222)
(define-fun lt_98 () Bool (< mul_223 mul_224))
(assert lt_98)
(define-fun lt_99 () Bool (< floordiv_3 mul_217))
(assert lt_99)
(define-fun eq_265 () Bool (= mul_218 0))
(define-fun not__223 () Bool (not eq_265))
(assert not__223)
(define-fun lt_100 () Bool (< mul_217 mul_218))
(assert lt_100)
(define-fun mul_233 () Int (* mul_218 0))
(define-fun add_116 () Int (+ 1 mul_233))
(define-fun add_117 () Int (+ add_116 mul_219))
(define-fun add_118 () Int (+ add_117 mul_220))
(define-fun add_119 () Int (+ add_118 sub_12))
(define-fun mul_234 () Int (* 4 add_119))
(define-fun lt_101 () Bool (< floordiv_3 mul_218))
(assert lt_101)
(define-fun eq_266 () Bool (= mul_218 mul_218))
(assert eq_266)
(define-fun mul_235 () Int (* 1024 decoder_input_ids_size1))
(define-fun mul_236 () Int (* 1024 sub_3))
(define-fun add_120 () Int (+ 1 mul_236))
(define-fun add_121 () Int (+ add_120 1023))
(define-fun mul_237 () Int (* 4 add_121))
(define-fun mul_238 () Int (* decoder_input_ids_size1 1024))
(define-fun eq_267 () Bool (= mul_238 0))
(define-fun not__224 () Bool (not eq_267))
(assert not__224)
(define-fun mul_239 () Int (* mul_8 1024))
(define-fun eq_268 () Bool (= mul_238 mul_239))
(assert eq_268)
(define-fun mul_240 () Int (* 1024 floordiv_12))
(define-fun mul_241 () Int (* mul_164 1024))
(define-fun eq_269 () Bool (= mul_241 0))
(define-fun not__225 () Bool (not eq_269))
(assert not__225)
(define-fun eq_270 () Bool (= mul_240 0))
(define-fun not__226 () Bool (not eq_270))
(assert not__226)
(define-fun gt_25 () Bool (> mul_240 1024))
(assert gt_25)
(define-fun mul_242 () Int (* mul_240 decoder_input_ids_size0))
(define-fun mul_243 () Int (* mul_240 sub_2))
(define-fun add_122 () Int (+ 1 mul_243))
(define-fun mul_244 () Int (* 1024 sub_22))
(define-fun add_123 () Int (+ add_122 mul_244))
(define-fun add_124 () Int (+ add_123 1023))
(define-fun mul_245 () Int (* 4 add_124))
(define-fun eq_271 () Bool (= mul_241 mul_241))
(assert eq_271)
(define-fun eq_272 () Bool (= mul_164 -1))
(define-fun not__227 () Bool (not eq_272))
(assert not__227)
(define-fun ge_19 () Bool (>= mul_164 0))
(assert ge_19)
(define-fun lt_102 () Bool (< 1 mul_242))
(assert lt_102)
(define-fun lt_103 () Bool (< 1024 mul_242))
(assert lt_103)
(define-fun mul_246 () Int (* 1024 mul_164))
(define-fun eq_273 () Bool (= mul_246 mul_242))
(assert eq_273)
(define-fun eq_274 () Bool (= decoder_input_ids_size0 mul_164))
(define-fun not__228 () Bool (not eq_274))
(assert not__228)
(define-fun eq_275 () Bool (= mul_164 decoder_input_ids_size0))
(define-fun not__229 () Bool (not eq_275))
(assert not__229)
(define-fun mod_20 () Int (mod decoder_input_ids_size0 mul_164))
(define-fun eq_276 () Bool (= mod_20 0))
(define-fun not__230 () Bool (not eq_276))
(assert not__230)
(define-fun mod_21 () Int (mod mul_164 mul_164))
(define-fun eq_277 () Bool (= mod_21 0))
(assert eq_277)
(define-fun mul_247 () Int (* floordiv_12 1024))
(define-fun eq_278 () Bool (= mul_247 0))
(define-fun not__231 () Bool (not eq_278))
(assert not__231)
(define-fun eq_279 () Bool (= mul_164 mul_164))
(assert eq_279)
(define-fun mul_248 () Int (* mul_164 512))
(define-fun eq_280 () Bool (= mul_214 mul_248))
(assert eq_280)
(define-fun eq_281 () Bool (= floordiv_12 decoder_input_ids_size0))
(define-fun not__232 () Bool (not eq_281))
(assert not__232)
(define-fun eq_282 () Bool (= decoder_input_ids_size0 floordiv_12))
(define-fun not__233 () Bool (not eq_282))
(assert not__233)
(define-fun mod_22 () Int (mod floordiv_12 decoder_input_ids_size0))
(define-fun eq_283 () Bool (= mod_22 0))
(assert eq_283)
(define-fun floordiv_17 () Int (div floordiv_12 decoder_input_ids_size0))
(define-fun mul_249 () Int (* 512 floordiv_17))
(define-fun mul_250 () Int (* decoder_input_ids_size0 floordiv_17))
(define-fun mul_251 () Int (* mul_250 512))
(define-fun eq_284 () Bool (= mul_251 0))
(define-fun not__234 () Bool (not eq_284))
(assert not__234)
(define-fun eq_285 () Bool (= floordiv_17 1))
(define-fun not__235 () Bool (not eq_285))
(assert not__235)
(define-fun eq_286 () Bool (= floordiv_12 floordiv_17))
(assert eq_286)
(define-fun eq_287 () Bool (= decoder_input_ids_size1 floordiv_17))
(assert eq_287)
(define-fun eq_288 () Bool (= floordiv_17 decoder_input_ids_size1))
(assert eq_288)
(define-fun mul_252 () Int (* 250112 decoder_input_ids_size1))
(define-fun mul_253 () Int (* 250112 sub_3))
(define-fun add_125 () Int (+ 1 mul_253))
(define-fun add_126 () Int (+ add_125 250111))
(define-fun mul_254 () Int (* 4 add_126))
(define-fun mul_255 () Int (* decoder_input_ids_size1 250112))
(define-fun eq_289 () Bool (= mul_255 0))
(define-fun not__236 () Bool (not eq_289))
(assert not__236)
(define-fun mul_256 () Int (* mul_8 250112))
(define-fun eq_290 () Bool (= mul_255 mul_256))
(assert eq_290)
(define-fun mul_257 () Int (* 250112 floordiv_12))
(define-fun mul_258 () Int (* mul_164 250112))
(define-fun eq_291 () Bool (= mul_258 0))
(define-fun not__237 () Bool (not eq_291))
(assert not__237)
(define-fun eq_292 () Bool (= mul_258 250112))
(define-fun not__238 () Bool (not eq_292))
(assert not__238)
(define-fun mod_23 () Int (mod mul_258 250112))
(define-fun eq_293 () Bool (= mod_23 0))
(assert eq_293)
(define-fun floordiv_18 () Int (div mul_258 250112))
(define-fun eq_294 () Bool (= decoder_input_ids_size0 floordiv_18))
(define-fun not__239 () Bool (not eq_294))
(assert not__239)
(define-fun eq_295 () Bool (= floordiv_18 decoder_input_ids_size0))
(define-fun not__240 () Bool (not eq_295))
(assert not__240)
(define-fun mod_24 () Int (mod decoder_input_ids_size0 floordiv_18))
(define-fun eq_296 () Bool (= mod_24 0))
(define-fun not__241 () Bool (not eq_296))
(assert not__241)
(define-fun mod_25 () Int (mod mul_164 floordiv_18))
(define-fun eq_297 () Bool (= mod_25 0))
(assert eq_297)
(define-fun mul_259 () Int (* floordiv_12 250112))
(define-fun eq_298 () Bool (= mul_259 0))
(define-fun not__242 () Bool (not eq_298))
(assert not__242)
(define-fun eq_299 () Bool (= mul_164 floordiv_18))
(assert eq_299)
(define-fun eq_300 () Bool (= mul_13 1))
(define-fun not__243 () Bool (not eq_300))
(assert not__243)
(define-fun mod_26 () Int (mod mul_13 1))
(define-fun eq_301 () Bool (= mod_26 0))
(assert eq_301)
(define-fun floordiv_19 () Int (div mul_13 1))
(define-fun eq_302 () Bool (= labels_size0 floordiv_19))
(define-fun not__244 () Bool (not eq_302))
(assert not__244)
(define-fun eq_303 () Bool (= floordiv_19 labels_size0))
(define-fun not__245 () Bool (not eq_303))
(assert not__245)
(define-fun mod_27 () Int (mod labels_size0 floordiv_19))
(define-fun eq_304 () Bool (= mod_27 0))
(define-fun not__246 () Bool (not eq_304))
(assert not__246)
(define-fun mod_28 () Int (mod mul_13 floordiv_19))
(define-fun eq_305 () Bool (= mod_28 0))
(assert eq_305)
(define-fun eq_306 () Bool (= mul_13 floordiv_19))
(assert eq_306)
(define-fun add_127 () Int (+ 1 sub_22))
(define-fun mul_260 () Int (* 4 add_127))
(define-fun mul_261 () Int (* 250112 sub_22))
(define-fun add_128 () Int (+ 1 mul_261))
(define-fun add_129 () Int (+ add_128 250111))
(define-fun mul_262 () Int (* 4 add_129))
(define-fun lt_104 () Bool (< floordiv_12 1))
(define-fun not__247 () Bool (not lt_104))
(assert not__247)
(define-fun eq_307 () Bool (= mul_259 mul_259))
(assert eq_307)
(define-fun eq_308 () Bool (= floordiv_12 labels_size1))
(assert eq_308)
(define-fun eq_309 () Bool (= labels_size1 labels_size1))
(assert eq_309)
(define-fun le_10 () Bool (<= labels_size1 floordiv_12))
(assert le_10)
(define-fun add_130 () Int (+ 1 sub_5))
(define-fun mul_263 () Int (* 4 add_130))
(define-fun mul_264 () Real (* 1.0 labels_size1))
(define-fun sym_float () Real (to_real labels_size1))
(define-fun eq_310 () Bool (= floordiv_3 floordiv_2))
(assert eq_310)
(define-fun eq_311 () Bool (= floordiv_2 floordiv_3))
(assert eq_311)
(define-fun eq_312 () Bool (= floordiv_12 floordiv_9))
(assert eq_312)
(define-fun eq_313 () Bool (= floordiv_9 floordiv_12))
(assert eq_313)
(define-fun eq_314 () Bool (= floordiv_3 input_ids_size1))
(assert eq_314)
(define-fun eq_315 () Bool (= floordiv_12 decoder_input_ids_size1))
(assert eq_315)
(define-fun eq_316 () Bool (= mul_4 0))
(define-fun not__248 () Bool (not eq_316))
(assert not__248)
(define-fun eq_317 () Bool (= mul_9 0))
(define-fun not__249 () Bool (not eq_317))
(assert not__249)
(define-fun eq_318 () Bool (= mul_14 0))
(define-fun not__250 () Bool (not eq_318))
(assert not__250)
(define-fun eq_319 () Bool (= mul_254 0))
(define-fun not__251 () Bool (not eq_319))
(assert not__251)
(define-fun eq_320 () Bool (= mul_160 0))
(define-fun not__252 () Bool (not eq_320))
(assert not__252)
(define-fun eq_321 () Bool (= mul_35 0))
(define-fun not__253 () Bool (not eq_321))
(assert not__253)
(define-fun eq_322 () Bool (= mul_19 0))
(define-fun not__254 () Bool (not eq_322))
(assert not__254)
(define-fun output0_storage_offset () Int 0)
(define-fun output1_size0 () Int decoder_input_ids_size0)
(define-fun output1_size1 () Int floordiv_12)
(define-fun output1_size2 () Int 250112)
(define-fun output1_stride0 () Int mul_257)
(define-fun output1_stride1 () Int 250112)
(define-fun output1_stride2 () Int 1)
(define-fun output1_storage_offset () Int 0)
(define-fun output2_size0 () Int decoder_input_ids_size0)
(define-fun output2_size1 () Int 6)
(define-fun output2_size2 () Int floordiv_12)
(define-fun output2_size3 () Int 64)
(define-fun output2_stride0 () Int mul_163)
(define-fun output2_stride1 () Int 64)
(define-fun output2_stride2 () Int 384)
(define-fun output2_stride3 () Int 1)
(define-fun output2_storage_offset () Int 0)
(define-fun output3_size0 () Int decoder_input_ids_size0)
(define-fun output3_size1 () Int 6)
(define-fun output3_size2 () Int floordiv_12)
(define-fun output3_size3 () Int 64)
(define-fun output3_stride0 () Int mul_163)
(define-fun output3_stride1 () Int 64)
(define-fun output3_stride2 () Int 384)
(define-fun output3_stride3 () Int 1)
(define-fun output3_storage_offset () Int 0)
(define-fun output4_size0 () Int input_ids_size0)
(define-fun output4_size1 () Int 6)
(define-fun output4_size2 () Int floordiv_3)
(define-fun output4_size3 () Int 64)
(define-fun output4_stride0 () Int mul_38)
(define-fun output4_stride1 () Int 64)
(define-fun output4_stride2 () Int 384)
(define-fun output4_stride3 () Int 1)
(define-fun output4_storage_offset () Int 0)
(define-fun output5_size0 () Int input_ids_size0)
(define-fun output5_size1 () Int 6)
(define-fun output5_size2 () Int floordiv_3)
(define-fun output5_size3 () Int 64)
(define-fun output5_stride0 () Int mul_38)
(define-fun output5_stride1 () Int 64)
(define-fun output5_stride2 () Int 384)
(define-fun output5_stride3 () Int 1)
(define-fun output5_storage_offset () Int 0)
(define-fun output6_size0 () Int decoder_input_ids_size0)
(define-fun output6_size1 () Int 6)
(define-fun output6_size2 () Int floordiv_12)
(define-fun output6_size3 () Int 64)
(define-fun output6_stride0 () Int mul_163)
(define-fun output6_stride1 () Int 64)
(define-fun output6_stride2 () Int 384)
(define-fun output6_stride3 () Int 1)
(define-fun output6_storage_offset () Int 0)
(define-fun output7_size0 () Int decoder_input_ids_size0)
(define-fun output7_size1 () Int 6)
(define-fun output7_size2 () Int floordiv_12)
(define-fun output7_size3 () Int 64)
(define-fun output7_stride0 () Int mul_163)
(define-fun output7_stride1 () Int 64)
(define-fun output7_stride2 () Int 384)
(define-fun output7_stride3 () Int 1)
(define-fun output7_storage_offset () Int 0)
(define-fun output8_size0 () Int input_ids_size0)
(define-fun output8_size1 () Int 6)
(define-fun output8_size2 () Int floordiv_3)
(define-fun output8_size3 () Int 64)
(define-fun output8_stride0 () Int mul_38)
(define-fun output8_stride1 () Int 64)
(define-fun output8_stride2 () Int 384)
(define-fun output8_stride3 () Int 1)
(define-fun output8_storage_offset () Int 0)
(define-fun output9_size0 () Int input_ids_size0)
(define-fun output9_size1 () Int 6)
(define-fun output9_size2 () Int floordiv_3)
(define-fun output9_size3 () Int 64)
(define-fun output9_stride0 () Int mul_38)
(define-fun output9_stride1 () Int 64)
(define-fun output9_stride2 () Int 384)
(define-fun output9_stride3 () Int 1)
(define-fun output9_storage_offset () Int 0)
(define-fun output10_size0 () Int decoder_input_ids_size0)
(define-fun output10_size1 () Int 6)
(define-fun output10_size2 () Int floordiv_12)
(define-fun output10_size3 () Int 64)
(define-fun output10_stride0 () Int mul_163)
(define-fun output10_stride1 () Int 64)
(define-fun output10_stride2 () Int 384)
(define-fun output10_stride3 () Int 1)
(define-fun output10_storage_offset () Int 0)
(define-fun output11_size0 () Int decoder_input_ids_size0)
(define-fun output11_size1 () Int 6)
(define-fun output11_size2 () Int floordiv_12)
(define-fun output11_size3 () Int 64)
(define-fun output11_stride0 () Int mul_163)
(define-fun output11_stride1 () Int 64)
(define-fun output11_stride2 () Int 384)
(define-fun output11_stride3 () Int 1)
(define-fun output11_storage_offset () Int 0)
(define-fun output12_size0 () Int input_ids_size0)
(define-fun output12_size1 () Int 6)
(define-fun output12_size2 () Int floordiv_3)
(define-fun output12_size3 () Int 64)
(define-fun output12_stride0 () Int mul_38)
(define-fun output12_stride1 () Int 64)
(define-fun output12_stride2 () Int 384)
(define-fun output12_stride3 () Int 1)
(define-fun output12_storage_offset () Int 0)
(define-fun output13_size0 () Int input_ids_size0)
(define-fun output13_size1 () Int 6)
(define-fun output13_size2 () Int floordiv_3)
(define-fun output13_size3 () Int 64)
(define-fun output13_stride0 () Int mul_38)
(define-fun output13_stride1 () Int 64)
(define-fun output13_stride2 () Int 384)
(define-fun output13_stride3 () Int 1)
(define-fun output13_storage_offset () Int 0)
(define-fun output14_size0 () Int decoder_input_ids_size0)
(define-fun output14_size1 () Int 6)
(define-fun output14_size2 () Int floordiv_12)
(define-fun output14_size3 () Int 64)
(define-fun output14_stride0 () Int mul_163)
(define-fun output14_stride1 () Int 64)
(define-fun output14_stride2 () Int 384)
(define-fun output14_stride3 () Int 1)
(define-fun output14_storage_offset () Int 0)
(define-fun output15_size0 () Int decoder_input_ids_size0)
(define-fun output15_size1 () Int 6)
(define-fun output15_size2 () Int floordiv_12)
(define-fun output15_size3 () Int 64)
(define-fun output15_stride0 () Int mul_163)
(define-fun output15_stride1 () Int 64)
(define-fun output15_stride2 () Int 384)
(define-fun output15_stride3 () Int 1)
(define-fun output15_storage_offset () Int 0)
(define-fun output16_size0 () Int input_ids_size0)
(define-fun output16_size1 () Int 6)
(define-fun output16_size2 () Int floordiv_3)
(define-fun output16_size3 () Int 64)
(define-fun output16_stride0 () Int mul_38)
(define-fun output16_stride1 () Int 64)
(define-fun output16_stride2 () Int 384)
(define-fun output16_stride3 () Int 1)
(define-fun output16_storage_offset () Int 0)
(define-fun output17_size0 () Int input_ids_size0)
(define-fun output17_size1 () Int 6)
(define-fun output17_size2 () Int floordiv_3)
(define-fun output17_size3 () Int 64)
(define-fun output17_stride0 () Int mul_38)
(define-fun output17_stride1 () Int 64)
(define-fun output17_stride2 () Int 384)
(define-fun output17_stride3 () Int 1)
(define-fun output17_storage_offset () Int 0)
(define-fun output18_size0 () Int decoder_input_ids_size0)
(define-fun output18_size1 () Int 6)
(define-fun output18_size2 () Int floordiv_12)
(define-fun output18_size3 () Int 64)
(define-fun output18_stride0 () Int mul_163)
(define-fun output18_stride1 () Int 64)
(define-fun output18_stride2 () Int 384)
(define-fun output18_stride3 () Int 1)
(define-fun output18_storage_offset () Int 0)
(define-fun output19_size0 () Int decoder_input_ids_size0)
(define-fun output19_size1 () Int 6)
(define-fun output19_size2 () Int floordiv_12)
(define-fun output19_size3 () Int 64)
(define-fun output19_stride0 () Int mul_163)
(define-fun output19_stride1 () Int 64)
(define-fun output19_stride2 () Int 384)
(define-fun output19_stride3 () Int 1)
(define-fun output19_storage_offset () Int 0)
(define-fun output20_size0 () Int input_ids_size0)
(define-fun output20_size1 () Int 6)
(define-fun output20_size2 () Int floordiv_3)
(define-fun output20_size3 () Int 64)
(define-fun output20_stride0 () Int mul_38)
(define-fun output20_stride1 () Int 64)
(define-fun output20_stride2 () Int 384)
(define-fun output20_stride3 () Int 1)
(define-fun output20_storage_offset () Int 0)
(define-fun output21_size0 () Int input_ids_size0)
(define-fun output21_size1 () Int 6)
(define-fun output21_size2 () Int floordiv_3)
(define-fun output21_size3 () Int 64)
(define-fun output21_stride0 () Int mul_38)
(define-fun output21_stride1 () Int 64)
(define-fun output21_stride2 () Int 384)
(define-fun output21_stride3 () Int 1)
(define-fun output21_storage_offset () Int 0)
(define-fun output22_size0 () Int decoder_input_ids_size0)
(define-fun output22_size1 () Int 6)
(define-fun output22_size2 () Int floordiv_12)
(define-fun output22_size3 () Int 64)
(define-fun output22_stride0 () Int mul_163)
(define-fun output22_stride1 () Int 64)
(define-fun output22_stride2 () Int 384)
(define-fun output22_stride3 () Int 1)
(define-fun output22_storage_offset () Int 0)
(define-fun output23_size0 () Int decoder_input_ids_size0)
(define-fun output23_size1 () Int 6)
(define-fun output23_size2 () Int floordiv_12)
(define-fun output23_size3 () Int 64)
(define-fun output23_stride0 () Int mul_163)
(define-fun output23_stride1 () Int 64)
(define-fun output23_stride2 () Int 384)
(define-fun output23_stride3 () Int 1)
(define-fun output23_storage_offset () Int 0)
(define-fun output24_size0 () Int input_ids_size0)
(define-fun output24_size1 () Int 6)
(define-fun output24_size2 () Int floordiv_3)
(define-fun output24_size3 () Int 64)
(define-fun output24_stride0 () Int mul_38)
(define-fun output24_stride1 () Int 64)
(define-fun output24_stride2 () Int 384)
(define-fun output24_stride3 () Int 1)
(define-fun output24_storage_offset () Int 0)
(define-fun output25_size0 () Int input_ids_size0)
(define-fun output25_size1 () Int 6)
(define-fun output25_size2 () Int floordiv_3)
(define-fun output25_size3 () Int 64)
(define-fun output25_stride0 () Int mul_38)
(define-fun output25_stride1 () Int 64)
(define-fun output25_stride2 () Int 384)
(define-fun output25_stride3 () Int 1)
(define-fun output25_storage_offset () Int 0)
(define-fun output26_size0 () Int decoder_input_ids_size0)
(define-fun output26_size1 () Int 6)
(define-fun output26_size2 () Int floordiv_12)
(define-fun output26_size3 () Int 64)
(define-fun output26_stride0 () Int mul_163)
(define-fun output26_stride1 () Int 64)
(define-fun output26_stride2 () Int 384)
(define-fun output26_stride3 () Int 1)
(define-fun output26_storage_offset () Int 0)
(define-fun output27_size0 () Int decoder_input_ids_size0)
(define-fun output27_size1 () Int 6)
(define-fun output27_size2 () Int floordiv_12)
(define-fun output27_size3 () Int 64)
(define-fun output27_stride0 () Int mul_163)
(define-fun output27_stride1 () Int 64)
(define-fun output27_stride2 () Int 384)
(define-fun output27_stride3 () Int 1)
(define-fun output27_storage_offset () Int 0)
(define-fun output28_size0 () Int input_ids_size0)
(define-fun output28_size1 () Int 6)
(define-fun output28_size2 () Int floordiv_3)
(define-fun output28_size3 () Int 64)
(define-fun output28_stride0 () Int mul_38)
(define-fun output28_stride1 () Int 64)
(define-fun output28_stride2 () Int 384)
(define-fun output28_stride3 () Int 1)
(define-fun output28_storage_offset () Int 0)
(define-fun output29_size0 () Int input_ids_size0)
(define-fun output29_size1 () Int 6)
(define-fun output29_size2 () Int floordiv_3)
(define-fun output29_size3 () Int 64)
(define-fun output29_stride0 () Int mul_38)
(define-fun output29_stride1 () Int 64)
(define-fun output29_stride2 () Int 384)
(define-fun output29_stride3 () Int 1)
(define-fun output29_storage_offset () Int 0)
(define-fun output30_size0 () Int decoder_input_ids_size0)
(define-fun output30_size1 () Int 6)
(define-fun output30_size2 () Int floordiv_12)
(define-fun output30_size3 () Int 64)
(define-fun output30_stride0 () Int mul_163)
(define-fun output30_stride1 () Int 64)
(define-fun output30_stride2 () Int 384)
(define-fun output30_stride3 () Int 1)
(define-fun output30_storage_offset () Int 0)
(define-fun output31_size0 () Int decoder_input_ids_size0)
(define-fun output31_size1 () Int 6)
(define-fun output31_size2 () Int floordiv_12)
(define-fun output31_size3 () Int 64)
(define-fun output31_stride0 () Int mul_163)
(define-fun output31_stride1 () Int 64)
(define-fun output31_stride2 () Int 384)
(define-fun output31_stride3 () Int 1)
(define-fun output31_storage_offset () Int 0)
(define-fun output32_size0 () Int input_ids_size0)
(define-fun output32_size1 () Int 6)
(define-fun output32_size2 () Int floordiv_3)
(define-fun output32_size3 () Int 64)
(define-fun output32_stride0 () Int mul_38)
(define-fun output32_stride1 () Int 64)
(define-fun output32_stride2 () Int 384)
(define-fun output32_stride3 () Int 1)
(define-fun output32_storage_offset () Int 0)
(define-fun output33_size0 () Int input_ids_size0)
(define-fun output33_size1 () Int 6)
(define-fun output33_size2 () Int floordiv_3)
(define-fun output33_size3 () Int 64)
(define-fun output33_stride0 () Int mul_38)
(define-fun output33_stride1 () Int 64)
(define-fun output33_stride2 () Int 384)
(define-fun output33_stride3 () Int 1)
(define-fun output33_storage_offset () Int 0)
(define-fun output34_size0 () Int input_ids_size0)
(define-fun output34_size1 () Int input_ids_size1)
(define-fun output34_size2 () Int 512)
(define-fun output34_stride0 () Int mul_15)
(define-fun output34_stride1 () Int 512)
(define-fun output34_stride2 () Int 1)
(define-fun output34_storage_offset () Int 0)
(check-sat)
(get-value (input_ids_size0 input_ids_size1 input_ids_stride0 input_ids_stride1 input_ids_storage_offset decoder_input_ids_size0 decoder_input_ids_size1 decoder_input_ids_stride0 decoder_input_ids_stride1 decoder_input_ids_storage_offset labels_size0 labels_size1 labels_stride0 labels_stride1 labels_storage_offset output0_storage_offset output1_size0 output1_size1 output1_size2 output1_stride0 output1_stride1 output1_stride2 output1_storage_offset output2_size0 output2_size1 output2_size2 output2_size3 output2_stride0 output2_stride1 output2_stride2 output2_stride3 output2_storage_offset output3_size0 output3_size1 output3_size2 output3_size3 output3_stride0 output3_stride1 output3_stride2 output3_stride3 output3_storage_offset output4_size0 output4_size1 output4_size2 output4_size3 output4_stride0 output4_stride1 output4_stride2 output4_stride3 output4_storage_offset output5_size0 output5_size1 output5_size2 output5_size3 output5_stride0 output5_stride1 output5_stride2 output5_stride3 output5_storage_offset output6_size0 output6_size1 output6_size2 output6_size3 output6_stride0 output6_stride1 output6_stride2 output6_stride3 output6_storage_offset output7_size0 output7_size1 output7_size2 output7_size3 output7_stride0 output7_stride1 output7_stride2 output7_stride3 output7_storage_offset output8_size0 output8_size1 output8_size2 output8_size3 output8_stride0 output8_stride1 output8_stride2 output8_stride3 output8_storage_offset output9_size0 output9_size1 output9_size2 output9_size3 output9_stride0 output9_stride1 output9_stride2 output9_stride3 output9_storage_offset output10_size0 output10_size1 output10_size2 output10_size3 output10_stride0 output10_stride1 output10_stride2 output10_stride3 output10_storage_offset output11_size0 output11_size1 output11_size2 output11_size3 output11_stride0 output11_stride1 output11_stride2 output11_stride3 output11_storage_offset output12_size0 output12_size1 output12_size2 output12_size3 output12_stride0 output12_stride1 output12_stride2 output12_stride3 output12_storage_offset output13_size0 output13_size1 output13_size2 output13_size3 output13_stride0 output13_stride1 output13_stride2 output13_stride3 output13_storage_offset output14_size0 output14_size1 output14_size2 output14_size3 output14_stride0 output14_stride1 output14_stride2 output14_stride3 output14_storage_offset output15_size0 output15_size1 output15_size2 output15_size3 output15_stride0 output15_stride1 output15_stride2 output15_stride3 output15_storage_offset output16_size0 output16_size1 output16_size2 output16_size3 output16_stride0 output16_stride1 output16_stride2 output16_stride3 output16_storage_offset output17_size0 output17_size1 output17_size2 output17_size3 output17_stride0 output17_stride1 output17_stride2 output17_stride3 output17_storage_offset output18_size0 output18_size1 output18_size2 output18_size3 output18_stride0 output18_stride1 output18_stride2 output18_stride3 output18_storage_offset output19_size0 output19_size1 output19_size2 output19_size3 output19_stride0 output19_stride1 output19_stride2 output19_stride3 output19_storage_offset output20_size0 output20_size1 output20_size2 output20_size3 output20_stride0 output20_stride1 output20_stride2 output20_stride3 output20_storage_offset output21_size0 output21_size1 output21_size2 output21_size3 output21_stride0 output21_stride1 output21_stride2 output21_stride3 output21_storage_offset output22_size0 output22_size1 output22_size2 output22_size3 output22_stride0 output22_stride1 output22_stride2 output22_stride3 output22_storage_offset output23_size0 output23_size1 output23_size2 output23_size3 output23_stride0 output23_stride1 output23_stride2 output23_stride3 output23_storage_offset output24_size0 output24_size1 output24_size2 output24_size3 output24_stride0 output24_stride1 output24_stride2 output24_stride3 output24_storage_offset output25_size0 output25_size1 output25_size2 output25_size3 output25_stride0 output25_stride1 output25_stride2 output25_stride3 output25_storage_offset output26_size0 output26_size1 output26_size2 output26_size3 output26_stride0 output26_stride1 output26_stride2 output26_stride3 output26_storage_offset output27_size0 output27_size1 output27_size2 output27_size3 output27_stride0 output27_stride1 output27_stride2 output27_stride3 output27_storage_offset output28_size0 output28_size1 output28_size2 output28_size3 output28_stride0 output28_stride1 output28_stride2 output28_stride3 output28_storage_offset output29_size0 output29_size1 output29_size2 output29_size3 output29_stride0 output29_stride1 output29_stride2 output29_stride3 output29_storage_offset output30_size0 output30_size1 output30_size2 output30_size3 output30_stride0 output30_stride1 output30_stride2 output30_stride3 output30_storage_offset output31_size0 output31_size1 output31_size2 output31_size3 output31_stride0 output31_stride1 output31_stride2 output31_stride3 output31_storage_offset output32_size0 output32_size1 output32_size2 output32_size3 output32_stride0 output32_stride1 output32_stride2 output32_stride3 output32_storage_offset output33_size0 output33_size1 output33_size2 output33_size3 output33_stride0 output33_stride1 output33_stride2 output33_stride3 output33_storage_offset output34_size0 output34_size1 output34_size2 output34_stride0 output34_stride1 output34_stride2 output34_storage_offset))
